#!/bin/bash
#
# tested on MacBook Pro with Snow Leopard & Snow Lion
# ==> need to update folowing comments:
# on 20-Nov-2009
# gcc and gfortran obtained from
# http://hpc.sourceforge.net/
# http://prdownloads.sourceforge.net/hpc/gcc-snwleo-intel-bin.tar.gz?download
# http://prdownloads.sourceforge.net/hpc/gfortran-snwleo-intel-bin.tar.gz?download

#-------
# need to set NETCDF_ROOT to where the NetCDF is installed, e.g.:
#       export NETCDF_ROOT='/usr/NetCDF'
# MPI : need to set environment variable MPI_INC_DIR to the include
#       directory of your MPI implementation

#-------
# run with OpenMP: needs to set environment var. OMP_NUM_THREADS
#    and generally, needs to increase the thread stack-size:
#   -  sh,bash:
#     > export OMP_NUM_THREADS=2
#     > export GOMP_STACKSIZE=400m
#   - csh,tcsh:
#     > setenv OMP_NUM_THREADS 2
#     > setenv GOMP_STACKSIZE 400m
#-------

if test "x$MPI" = xtrue ; then
  CC=mpicc
  FC=mpif77
  F90C=mpif90
  LINK=$F90C
else
  CC=gcc
  FC=gfortran
  F90C=gfortran
  LINK=$F90C
fi

FC_NAMEMANGLE="#define FC_NAMEMANGLE(X) X ## _"
S64='$(TOOLSDIR)/set64bitConst.sh'
DEFINES='-DWORDLENGTH=4 -DNML_TERMINATOR'
CPP='/usr/bin/cpp -traditional -P'
GET_FC_VERSION="--version"
EXTENDED_SRC_FLAG='-ffixed-line-length-132'
OMPFLAG='-fopenmp'

#MAKEDEPEND=tools_xmakedepend

#Following flag is needed when using 32-bit gfortran with 64-bit gcc,
#as can be the case right after switching to Snow Leopard.
#CFLAGS='-arch i386'

NOOPTFLAGS='-O0'
NOOPTFILES=''

FFLAGS="$FFLAGS -fconvert=big-endian"
# for big objects:
#FFLAGS="$FFLAGS -fPIC"
#- might want to use '-fdefault-real-8' for fizhi pkg:
#FFLAGS="$FFLAGS -fdefault-real-8 -fdefault-double-8"

#  For IEEE, use the "-ffloat-store" option
if test "x$IEEE" = x ; then
    FFLAGS="$FFLAGS -Wunused -Wuninitialized"
    FOPTIM='-O3 -ftree-vectorize -funroll-loops'
    NOOPTFLAGS='-O2 -funroll-loops'
#    NOOPTFILES='gad_c4_adv_x.F gad_u3_adv_x.F'
else
    FFLAGS="$FFLAGS -Wall"
    if test "x$DEVEL" = x ; then  #- no optimisation + IEEE :
	FOPTIM='-O0'
    else                          #- development/check options:
	FOPTIM='-O0 -g -fbounds-check'
	FOPTIM="$FOPTIM -ffpe-trap=invalid,zero,overflow -finit-real=inf"
    fi
fi

F90FLAGS=$FFLAGS
F90OPTIM=$FOPTIM

INCLUDEDIRS=''
INCLUDES=''
LIBS=''

if [ "x$NETCDF_ROOT" != x ] ; then
    INCLUDEDIR="${NETCDF_ROOT}/include"
    INCLUDES="-I${NETCDF_ROOT}/include"
    LIBDIR="${NETCDF_ROOT}/lib"
    LIBS="-L${NETCDF_ROOT}/lib -lnetcdf -lcurl"
elif [ "x$NETCDF_HOME" != x ]; then
    INCLUDEDIR="${NETCDF_HOME}/include"
    INCLUDES="-I${NETCDF_HOME}/include"
    LIBDIR="${NETCDF_HOME}/lib"
    LIBS="-L${NETCDF_HOME}/lib"
elif [ "x$NETCDF_INC" != x -a "x$NETCDF_LIB" != x ]; then
    NETCDF_INC=`echo $NETCDF_INC | sed 's/-I//g'`
    NETCDF_LIB=`echo $NETCDF_LIB | sed 's/-L//g'`
    INCLUDEDIR="${NETCDF_INC}"
    INCLUDES="-I${NETCDF_INC}"
    LIBDIR="${NETCDF_LIB}"
    LIBS="-L${NETCDF_LIB}"
elif [ "x$NETCDF_INCDIR" != x -a "x$NETCDF_LIBDIR" != x ]; then
    INCLUDEDIR="${NETCDF_INCDIR}"
    INCLUDES="-I${NETCDF_INCDIR}"
    LIBDIR="${NETCDF_LIBDIR}"
    LIBS="-L${NETCDF_LIBDIR}"
elif [[ -n $( nf-config --includedir ) && ($? == 0) ]] ; then
    # NETCDF env variables are not set, trying nf-config instead
    INCLUDEDIR=$( nf-config --includedir )
    INCLUDES="-I$INCLUDEDIR"
    LIBS=$( nf-config --flibs )
elif test -d /usr/include/netcdf-3 ; then
    INCLUDES='-I/usr/include/netcdf-3'
    LIBS='-L/usr/lib/netcdf-3 -L/usr/lib64/netcdf-3'
elif test -d /usr/include/netcdf ; then
    INCLUDES='-I/usr/include/netcdf'
elif test -d /usr/local/netcdf ; then
    INCLUDES='-I/usr/local/netcdf/include'
    LIBS='-L/usr/local/netcdf/lib'
elif test -d /usr/local/include/netcdf.inc ; then
    INCLUDES='-I/usr/local/include'
    LIBS='-L/usr/local/lib64'
elif test -d /usr/include/netcdf.inc ; then
    INCLUDES='-I/usr/include'
    LIBS='-L/usr/lib64'
fi

if [ -n "$MPI_HOME" -a -z "$MPI_INC_DIR" ]; then
    MPI_INC_DIR="$MPI_HOME/include"
fi

if [ "x$MPI" = xtrue ] ; then
   if [ -z "$MPI_INC_DIR" ] ; then
      # MPI env variables are not set, trying pkg-config insteal
      if [[ -n $( pkg-config --cflags-only-I ompi ) && ($? == 0) ]] ; then
         MPI_INC_DIR=$(pkg-config --cflags-only-I ompi | awk '{ print $1 }' | sed -e "s/-I//" )
      else
         echo MPI_HOME is not set and pkg-config not available, aborting
         exit 1
      fi
   fi
   if [ -n "$MPI_INC_DIR" ] ; then
      # only fill this if we can find MPI, otherwise triggers netcdf error
      INCLUDES+=" -I$MPI_INC_DIR"
      INCLUDEDIRS+=" $MPI_INC_DIR"
      #- used for parallel (MPI) DIVA
      MPIINCLUDEDIR="$MPI_INC_DIR"
   else
      echo could not set MPI_INC_DIR, aborting
      exit 1
   fi
fi

