(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) //                      MITgcm UV
(PID.TID 0000.0001) //                      =========
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // execution environment starting up...
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // MITgcmUV version:  checkpoint67t
(PID.TID 0000.0001) // Build user:        jm_c
(PID.TID 0000.0001) // Build host:        villon
(PID.TID 0000.0001) // Build date:        Fri Dec 11 09:34:37 EST 2020
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Execution Environment parameter file "eedata"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Example "eedata" file
(PID.TID 0000.0001) ># Lines beginning "#" are comments
(PID.TID 0000.0001) ># nTx - No. threads per process in X
(PID.TID 0000.0001) ># nTy - No. threads per process in Y
(PID.TID 0000.0001) > &EEPARMS
(PID.TID 0000.0001) > nTx=1,
(PID.TID 0000.0001) > nTy=1,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Note: Some systems use & as the namelist terminator (as shown here).
(PID.TID 0000.0001) >#       Other systems use a / character.
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0000.0001) //                                  ( and "eedata"       )
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001)      nPx =    1 ; /* No. processes in X */
(PID.TID 0000.0001)      nPy =    1 ; /* No. processes in Y */
(PID.TID 0000.0001)      nSx =    2 ; /* No. tiles in X per process */
(PID.TID 0000.0001)      nSy =    2 ; /* No. tiles in Y per process */
(PID.TID 0000.0001)      sNx =   40 ; /* Tile size in X */
(PID.TID 0000.0001)      sNy =   21 ; /* Tile size in Y */
(PID.TID 0000.0001)      OLx =    3 ; /* Tile overlap distance in X */
(PID.TID 0000.0001)      OLy =    3 ; /* Tile overlap distance in Y */
(PID.TID 0000.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0000.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0000.0001)       Nr =    1 ; /* No. levels in the vertical   */
(PID.TID 0000.0001)       Nx =   80 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0000.0001)       Ny =   42 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0000.0001)   nTiles =    4 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0000.0001)   nProcs =    1 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0000.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0000.0001) usingMPI =    F ; /* Flag used to control whether MPI is in use */
(PID.TID 0000.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0000.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0000.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0000.0001) useCoupler=   F ; /* Flag used to control communications with   */
(PID.TID 0000.0001)                   /*  other model components, through a coupler */
(PID.TID 0000.0001) useNest2W_parent =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) useNest2W_child  =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0000.0001) printMapIncludesZeros=    F ; /* print zeros in Std.Output maps */
(PID.TID 0000.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Mapping of tiles to threads
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // -o- Thread   1, tiles (   1:   2,   1:   2)
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile connectvity table
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile number: 000001 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //       NORTH: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) // Tile number: 000002 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //       NORTH: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) // Tile number: 000003 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //        EAST: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //       SOUTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) // Tile number: 000004 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //        EAST: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //       SOUTH: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) ># | Model parameters |
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > &PARM01
(PID.TID 0000.0001) > tRef= -1.62,
(PID.TID 0000.0001) > sRef= 30.,
(PID.TID 0000.0001) > no_slip_sides=.FALSE.,
(PID.TID 0000.0001) > no_slip_bottom=.TRUE.,
(PID.TID 0000.0001) >#bottomDragLinear=1.E-3,
(PID.TID 0000.0001) > bottomDragQuadratic=5.E-3,
(PID.TID 0000.0001) > viscAr=3.E-2,
(PID.TID 0000.0001) > viscAh=3.E+2,
(PID.TID 0000.0001) > HeatCapacity_Cp = 3986.,
(PID.TID 0000.0001) > rhoNil          = 1030.,
(PID.TID 0000.0001) > rhoConstFresh   = 1000.,
(PID.TID 0000.0001) > eosType='LINEAR',
(PID.TID 0000.0001) > tAlpha=2.E-4,
(PID.TID 0000.0001) > sBeta= 0.,
(PID.TID 0000.0001) > staggerTimeStep=.TRUE.,
(PID.TID 0000.0001) > saltStepping=.FALSE.,
(PID.TID 0000.0001) >#tempStepping=.FALSE.,
(PID.TID 0000.0001) > tempAdvection=.FALSE.,
(PID.TID 0000.0001) > momStepping=.FALSE.,
(PID.TID 0000.0001) >#f0=1.e-4,
(PID.TID 0000.0001) > f0=0.e-4,
(PID.TID 0000.0001) > beta=0.,
(PID.TID 0000.0001) > useJamartWetPoints=.TRUE.,
(PID.TID 0000.0001) > rigidLid=.FALSE.,
(PID.TID 0000.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0000.0001) >#exactConserv=.TRUE.,
(PID.TID 0000.0001) > convertFW2Salt=-1,
(PID.TID 0000.0001) > readBinaryPrec=64,
(PID.TID 0000.0001) > writeBinaryPrec=64,
(PID.TID 0000.0001) >#globalFiles=.TRUE.,
(PID.TID 0000.0001) > useSingleCpuIO=.TRUE.,
(PID.TID 0000.0001) >#debugLevel=4,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Elliptic solver parameters
(PID.TID 0000.0001) > &PARM02
(PID.TID 0000.0001) > cg2dMaxIters=500,
(PID.TID 0000.0001) > cg2dTargetResidual=1.E-12,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Time stepping parameters
(PID.TID 0000.0001) > &PARM03
(PID.TID 0000.0001) > startTime=0.0,
(PID.TID 0000.0001) >#endTime=432000.,
(PID.TID 0000.0001) > deltaT=1800.0,
(PID.TID 0000.0001) > abEps=0.1,
(PID.TID 0000.0001) > forcing_In_AB = .FALSE.,
(PID.TID 0000.0001) > pChkptFreq=3600000.,
(PID.TID 0000.0001) > dumpFreq = 864000.,
(PID.TID 0000.0001) > monitorSelect=2,
(PID.TID 0000.0001) > nTimeSteps=12,
(PID.TID 0000.0001) > monitorFreq=21600.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Gridding parameters
(PID.TID 0000.0001) > &PARM04
(PID.TID 0000.0001) > usingCartesianGrid=.TRUE.,
(PID.TID 0000.0001) > delX=80*5.E3,
(PID.TID 0000.0001) > delY=42*5.E3,
(PID.TID 0000.0001) > ygOrigin=-110.E3,
(PID.TID 0000.0001) >#delR= 20., 30., 50.,
(PID.TID 0000.0001) > delR= 10.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Input datasets
(PID.TID 0000.0001) > &PARM05
(PID.TID 0000.0001) > bathyFile       = 'bathy_3c.bin',
(PID.TID 0000.0001) > uVelInitFile    = 'uVel_3c0.bin',
(PID.TID 0000.0001) > vVelInitFile    = 'vVel_3c0.bin',
(PID.TID 0000.0001) > pSurfInitFile   = 'eta_3c0.bin',
(PID.TID 0000.0001) >#uVelInitFile    = 'uVel_3c1.bin',
(PID.TID 0000.0001) >#vVelInitFile    = 'vVel_3c1.bin',
(PID.TID 0000.0001) >#pSurfInitFile   = 'eta_3c1.bin',
(PID.TID 0000.0001) >#bathyFile       = 'channel.bin',
(PID.TID 0000.0001) >#uVelInitFile    = 'const+40.bin',
(PID.TID 0000.0001) >#vVelInitFile    = 'const-10.bin',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0000.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0000.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0000.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0000.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0000.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0000.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0000.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.pkg"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Packages
(PID.TID 0000.0001) > &PACKAGES
(PID.TID 0000.0001) >  useEXF    = .TRUE.,
(PID.TID 0000.0001) >  useSEAICE = .TRUE.,
(PID.TID 0000.0001) ># useThSIce = .TRUE.,
(PID.TID 0000.0001) >  useDiagnostics=.TRUE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0000.0001) ** WARNING ** PACKAGES_BOOT: useCAL no longer set to T when using EXF (useEXF=T)
(PID.TID 0000.0001) ** WARNING ** PACKAGES_BOOT:  as it used to be before checkpoint66d (2017/02/13)
(PID.TID 0000.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/cal                  compiled but not used ( useCAL                   = F )
 pkg/exf                  compiled   and   used ( useEXF                   = T )
 pkg/seaice               compiled   and   used ( useSEAICE                = T )
 pkg/diagnostics          compiled   and   used ( useDiagnostics           = T )
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled   and   used ( useGAD                   = T )
 pkg/mom_common           compiled but not used ( momStepping              = F )
 pkg/mom_vecinv           compiled but not used ( +vectorInvariantMomentum = F )
 pkg/mom_fluxform         compiled but not used ( & not vectorInvariantMom = F )
 pkg/monitor              compiled   and   used ( monitorFreq > 0.         = T )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
(PID.TID 0000.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0000.0001) 
(PID.TID 0000.0001) EXF_READPARMS: opening data.exf
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.exf
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.exf"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># External Forcing Data
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &EXF_NML_01
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > useExfCheckRange  = .TRUE.,
(PID.TID 0000.0001) >#repeatPeriod      = 2635200.0,
(PID.TID 0000.0001) > exf_iprec         = 64,
(PID.TID 0000.0001) > exf_monFreq       = 86400000.,
(PID.TID 0000.0001) >#useRelativeWind = .TRUE.,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &EXF_NML_02
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > atempperiod       = 0.0,
(PID.TID 0000.0001) > aqhperiod         = 0.0,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > uwindperiod       = 0.0,
(PID.TID 0000.0001) > vwindperiod       = 0.0,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > precipperiod      = 0.0,
(PID.TID 0000.0001) > swdownperiod      = 0.0,
(PID.TID 0000.0001) > lwdownperiod      = 0.0,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > climsstperiod      = 0.0,
(PID.TID 0000.0001) > climsstTauRelax    = 2592000.,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > climsssperiod      = 0.0,
(PID.TID 0000.0001) >#climsssTauRelax    = 2592000.,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > atempfile         = 'tair_4x.bin',
(PID.TID 0000.0001) > aqhfile           = 'qa70_4x.bin',
(PID.TID 0000.0001) > uwindfile         = 'windx.bin',
(PID.TID 0000.0001) >#vwindfile         = 'windy.bin',
(PID.TID 0000.0001) > precipfile        = 'const_00.bin',
(PID.TID 0000.0001) > lwdownfile        = 'dlw_250.bin',
(PID.TID 0000.0001) > swdownfile        = 'dsw_100.bin',
(PID.TID 0000.0001) > runoffFile        = ' '
(PID.TID 0000.0001) > climsstfile       = 'tocn.bin',
(PID.TID 0000.0001) >#climsssfile       = 'socn.bin',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &EXF_NML_03
(PID.TID 0000.0001) >#exf_offset_atemp=5;
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># old open64 compiler (4.2.1) cannot skip this namelist to read in the next one;
(PID.TID 0000.0001) ># comment out this namelist (not read).
(PID.TID 0000.0001) >#&EXF_NML_04
(PID.TID 0000.0001) >#&
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &EXF_NML_OBCS
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) EXF_READPARMS: reading EXF_NML_01
(PID.TID 0000.0001) EXF_READPARMS: reading EXF_NML_02
(PID.TID 0000.0001) EXF_READPARMS: reading EXF_NML_03
(PID.TID 0000.0001) EXF_READPARMS: finished reading data.exf
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  SEAICE_READPARMS: opening data.seaice
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.seaice
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.seaice"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># SEAICE parameters
(PID.TID 0000.0001) > &SEAICE_PARM01
(PID.TID 0000.0001) >#usePW79thermodynamics=.FALSE.,
(PID.TID 0000.0001) > SEAICErestoreUnderIce=.TRUE.,
(PID.TID 0000.0001) > SEAICE_no_Slip     = .FALSE.,
(PID.TID 0000.0001) > LSR_ERROR          = 1.E-12,
(PID.TID 0000.0001) > SEAICElinearIterMax= 1500,
(PID.TID 0000.0001) > LSR_mixIniGuess    = 1,
(PID.TID 0000.0001) > SEAICEadvScheme    = 77,
(PID.TID 0000.0001) > AreaFile  = 'const100.bin',
(PID.TID 0000.0001) > HeffFile  = 'heff_quartic.bin',
(PID.TID 0000.0001) > HsnowFile = 'const_00.bin',
(PID.TID 0000.0001) > SEAICEwriteState   = .TRUE.,
(PID.TID 0000.0001) > SEAICE_monFreq = 1800.,
(PID.TID 0000.0001) ># ridging
(PID.TID 0000.0001) > SEAICEsimpleRidging = .FALSE.,
(PID.TID 0000.0001) > useHibler79IceStrength = .FALSE.,
(PID.TID 0000.0001) > SEAICE_cf        = 2.,
(PID.TID 0000.0001) > SEAICEredistFunc = 0,
(PID.TID 0000.0001) > SEAICEpartFunc   = 0,
(PID.TID 0000.0001) ># old defaults
(PID.TID 0000.0001) > SEAICEscaleSurfStress = .FALSE.,
(PID.TID 0000.0001) > SEAICEetaZmethod = 0,
(PID.TID 0000.0001) > SEAICE_drag = 0.002,
(PID.TID 0000.0001) > SEAICE_waterDrag = 0.005339805825242718,
(PID.TID 0000.0001) > SEAICE_Olx = 0,
(PID.TID 0000.0001) > SEAICE_Oly = 0,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) > &SEAICE_PARM03
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  SEAICE_READPARMS: finished reading data.seaice
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: opening data.diagnostics
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.diagnostics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.diagnostics"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Diagnostic Package Choices
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) >#  dumpAtLast (logical): always write output at the end of simulation (default=F)
(PID.TID 0000.0001) >#  diag_mnc   (logical): write to NetCDF files (default=useMNC)
(PID.TID 0000.0001) >#--for each output-stream:
(PID.TID 0000.0001) >#  fileName(n) : prefix of the output file name (max 80c long) for outp.stream n
(PID.TID 0000.0001) >#  frequency(n):< 0 : write snap-shot output every |frequency| seconds
(PID.TID 0000.0001) >#               > 0 : write time-average output every frequency seconds
(PID.TID 0000.0001) >#  timePhase(n)     : write at time = timePhase + multiple of |frequency|
(PID.TID 0000.0001) >#    averagingFreq  : frequency (in s) for periodic averaging interval
(PID.TID 0000.0001) >#    averagingPhase : phase     (in s) for periodic averaging interval
(PID.TID 0000.0001) >#    repeatCycle    : number of averaging intervals in 1 cycle
(PID.TID 0000.0001) >#  levels(:,n) : list of levels to write to file (Notes: declared as REAL)
(PID.TID 0000.0001) >#                when this entry is missing, select all common levels of this list
(PID.TID 0000.0001) >#  fields(:,n) : list of selected diagnostics fields (8.c) in outp.stream n
(PID.TID 0000.0001) >#                (see "available_diagnostics.log" file for the full list of diags)
(PID.TID 0000.0001) >#  missing_value(n) : missing value for real-type fields in output file "n"
(PID.TID 0000.0001) >#  fileFlags(n)     : specific code (8c string) for output file "n"
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) ># This example dumps EXF diagnostics as snapshot after 10 time-steps
(PID.TID 0000.0001) ># Note: EXF air-sea fluxes over Sea-Ice are wrong
(PID.TID 0000.0001) > &DIAGNOSTICS_LIST
(PID.TID 0000.0001) >   dumpAtLast  = .TRUE.,
(PID.TID 0000.0001) >#--
(PID.TID 0000.0001) >  fields(1:11,1) = 'EXFtaux ','EXFtauy ','EXFqnet ','EXFempmr',
(PID.TID 0000.0001) >                   'EXFhl   ','EXFhs   ','EXFswnet','EXFlwnet',
(PID.TID 0000.0001) >                   'EXFuwind','EXFvwind','EXFatemp',
(PID.TID 0000.0001) >#  fileName(1) = 'exfDiag',
(PID.TID 0000.0001) >  frequency(1) = 86400.,
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >  fields(1:4,2)  = 'SIuice  ','SIvice  ','SIheff  ',
(PID.TID 0000.0001) >                   'SIarea  ',
(PID.TID 0000.0001) >#  fileName(2) = 'iceDiag',
(PID.TID 0000.0001) >  frequency(2) =  86400.,
(PID.TID 0000.0001) >  missing_value(2) = -999.,
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >  fields(1:4,3)  = 'SIuice  ','SIvice  ','SIheff  ',
(PID.TID 0000.0001) >                   'SIarea  ',
(PID.TID 0000.0001) >   fileName(3) = 'snapshot',
(PID.TID 0000.0001) >  frequency(3) = -86400.,
(PID.TID 0000.0001) >  timePhase(3) =  3600.,
(PID.TID 0000.0001) >  missing_value(3) = -999.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) ># Parameter for Diagnostics of per level statistics:
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) >#  diagSt_mnc (logical): write stat-diags to NetCDF files (default=diag_mnc)
(PID.TID 0000.0001) >#  diagSt_regMaskFile : file containing the region-mask to read-in
(PID.TID 0000.0001) >#  nSetRegMskFile   : number of region-mask sets within the region-mask file
(PID.TID 0000.0001) >#  set_regMask(i)   : region-mask set-index that identifies the region "i"
(PID.TID 0000.0001) >#  val_regMask(i)   : region "i" identifier value in the region mask
(PID.TID 0000.0001) >#--for each output-stream:
(PID.TID 0000.0001) >#  stat_fName(n) : prefix of the output file name (max 80c long) for outp.stream n
(PID.TID 0000.0001) >#  stat_freq(n):< 0 : write snap-shot output every |stat_freq| seconds
(PID.TID 0000.0001) >#               > 0 : write time-average output every stat_freq seconds
(PID.TID 0000.0001) >#  stat_phase(n)    : write at time = stat_phase + multiple of |stat_freq|
(PID.TID 0000.0001) >#  stat_region(:,n) : list of "regions" (default: 1 region only=global)
(PID.TID 0000.0001) >#  stat_fields(:,n) : list of selected diagnostics fields (8.c) in outp.stream n
(PID.TID 0000.0001) >#                (see "available_diagnostics.log" file for the full list of diags)
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) > &DIAG_STATIS_PARMS
(PID.TID 0000.0001) > stat_fields(1:5,1)  = 'SIarea  ','SIheff  ','SIhsnow ',
(PID.TID 0000.0001) >                       'SIuice  ','SIvice  ',
(PID.TID 0000.0001) >  stat_fName(1) = 'iceStDiag',
(PID.TID 0000.0001) >   stat_freq(1) = 7200.,
(PID.TID 0000.0001) >  stat_phase(1) = 1800.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "diagnostics_list": start
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "diagnostics_list": OK
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "DIAG_STATIS_PARMS": start
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "DIAG_STATIS_PARMS": OK
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: global parameter summary:
(PID.TID 0000.0001)  dumpAtLast = /* always write time-ave diags at the end */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diag_mnc =   /* write NetCDF output files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useMissingValue = /* put MissingValue where mask = 0 */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_maxIters = /* max number of iters in diag_cg2d */
(PID.TID 0000.0001)                     500
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_resTarget = /* residual target for diag_cg2d */
(PID.TID 0000.0001)                 1.000000000000000E-12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_pcOffDFac = /* preconditioner off-diagonal factor */
(PID.TID 0000.0001)                 9.611687812379854E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: active diagnostics summary:
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001) Creating Output Stream: snapshot
(PID.TID 0000.0001) Output Frequency:     -86400.000000 ; Phase:        3600.000000
(PID.TID 0000.0001)  Averaging Freq.:          0.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    SIuice   SIvice   SIheff   SIarea
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: statistics diags. summary:
(PID.TID 0000.0001) Creating Stats. Output Stream: iceStDiag
(PID.TID 0000.0001) Output Frequency:       7200.000000 ; Phase:        1800.000000
(PID.TID 0000.0001)  Regions:   0
(PID.TID 0000.0001)  Fields:    SIarea   SIheff   SIhsnow  SIuice   SIvice
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SET_PARMS: done
(PID.TID 0000.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0000.0001) %MON XC_max                       =   3.9750000000000E+05
(PID.TID 0000.0001) %MON XC_min                       =   2.5000000000000E+03
(PID.TID 0000.0001) %MON XC_mean                      =   2.0000000000000E+05
(PID.TID 0000.0001) %MON XC_sd                        =   1.1546103238755E+05
(PID.TID 0000.0001) %MON XG_max                       =   3.9500000000000E+05
(PID.TID 0000.0001) %MON XG_min                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON XG_mean                      =   1.9750000000000E+05
(PID.TID 0000.0001) %MON XG_sd                        =   1.1546103238755E+05
(PID.TID 0000.0001) %MON DXC_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXC_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXC_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXC_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DXF_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXF_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXF_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXF_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DXG_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXG_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXG_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXG_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DXV_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXV_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXV_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DXV_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YC_max                       =   9.7500000000000E+04
(PID.TID 0000.0001) %MON YC_min                       =  -1.0750000000000E+05
(PID.TID 0000.0001) %MON YC_mean                      =  -5.0000000000000E+03
(PID.TID 0000.0001) %MON YC_sd                        =   6.0604592785256E+04
(PID.TID 0000.0001) %MON YG_max                       =   9.5000000000000E+04
(PID.TID 0000.0001) %MON YG_min                       =  -1.1000000000000E+05
(PID.TID 0000.0001) %MON YG_mean                      =  -7.5000000000000E+03
(PID.TID 0000.0001) %MON YG_sd                        =   6.0604592785256E+04
(PID.TID 0000.0001) %MON DYC_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYF_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYG_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYU_max                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_min                      =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_mean                     =   5.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RA_max                       =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RA_min                       =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RA_mean                      =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RA_sd                        =   3.7252902984619E-09
(PID.TID 0000.0001) %MON RAW_max                      =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RAW_min                      =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RAW_mean                     =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RAW_sd                       =   3.7252902984619E-09
(PID.TID 0000.0001) %MON RAS_max                      =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RAS_min                      =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RAS_mean                     =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RAS_sd                       =   3.7252902984619E-09
(PID.TID 0000.0001) %MON RAZ_max                      =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RAZ_min                      =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RAZ_mean                     =   2.5000000000000E+07
(PID.TID 0000.0001) %MON RAZ_sd                       =   3.7252902984619E-09
(PID.TID 0000.0001) %MON AngleCS_max                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_min                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_mean                 =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_max                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_min                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_mean                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: bathy_3c.bin
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model R_low (ini_masks_etc)
(PID.TID 0000.0001) // CMIN =         -1.000000000000000E+01
(PID.TID 0000.0001) // CMAX =         -1.000000000000000E+01
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -2:    83:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    45:    -2:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model Ro_surf (ini_masks_etc)
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+32
(PID.TID 0000.0001) // CMAX =         -1.000000000000000E+32
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -2:    83:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    45:    -2:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacC at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -2:    83:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    45:    -2:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacW at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -2:    83:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    45:    -2:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacS at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -2:    83:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    45:    -2:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GAD_INIT_FIXED: GAD_OlMinSize=  0  0  1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // GAD parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // External forcing (EXF) configuration >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  EXF general parameters:
(PID.TID 0000.0001) 
(PID.TID 0000.0001) exf_iprec = /* exf file precision */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useExfYearlyFields = /* add extension _YEAR to input file names */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) twoDigitYear = /* use 2-digit year extension */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useExfCheckRange = /* check for fields range */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diags_opOceWeighted = /* weight flux diags by open-ocean fraction */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_debugLev = /* select EXF-debug printing level */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_monFreq  = /* EXF monitor frequency [ s ] */
(PID.TID 0000.0001)                 8.640000000000000E+07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) repeatPeriod = /* period for cycling forcing dataset [ s ] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) climTempFreeze= /* Minimum climatological temperature [deg.C] */
(PID.TID 0000.0001)                -1.900000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) windStressMax = /* Maximum absolute windstress [ Pa ] */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) stressIsOnCgrid = /* set u,v_stress on Arakawa C-grid */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateStressOnAgrid = /* rotate u,v_stress on Arakawa A-grid */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cen2kel = /* conversion of deg. Centigrade to Kelvin [K] */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity_mks= /* gravitational acceleration [m/s^2] */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) atmrho =  /* mean atmospheric density [kg/m^3] */
(PID.TID 0000.0001)                 1.200000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) atmcp =  /* mean atmospheric specific heat [J/kg/K] */
(PID.TID 0000.0001)                 1.005000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) flamb =  /* latent heat of evaporation [J/kg] */
(PID.TID 0000.0001)                 2.500000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) flami =  /* latent heat of pure-ice melting [J/kg] */
(PID.TID 0000.0001)                 3.340000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cvapor_fac = /* const. for Saturation calculation [?] */
(PID.TID 0000.0001)                 6.403800000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cvapor_exp = /* const. for Saturation calculation [?] */
(PID.TID 0000.0001)                 5.107400000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cvapor_fac_ice= /* const. for Saturation calculation [?] */
(PID.TID 0000.0001)                 1.163780000000000E+07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cvapor_exp_ice= /* const. for Saturation calculation [?] */
(PID.TID 0000.0001)                 5.897800000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) humid_fac = /* humidity coef. in virtual temp. [(kg/kg)^-1] */
(PID.TID 0000.0001)                 6.060000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gamma_blk = /* adiabatic lapse rate [?] */
(PID.TID 0000.0001)                 1.000000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltsat = /* reduction of Qsat over salty water [-] */
(PID.TID 0000.0001)                 9.800000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) noNegativeEvap = /* prevent negative Evaporation */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sstExtrapol = /* extrapolation coeff from lev. 1 & 2 to surf [-] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cDrag_1 = /* coef used in drag calculation [?] */
(PID.TID 0000.0001)                 2.700000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cDrag_2 = /* coef used in drag calculation [?] */
(PID.TID 0000.0001)                 1.420000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cDrag_3 = /* coef used in drag calculation [?] */
(PID.TID 0000.0001)                 7.640000000000000E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cStanton_1 = /* coef used in Stanton number calculation [?] */
(PID.TID 0000.0001)                 3.270000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cStanton_2 = /* coef used in Stanton number calculation [?] */
(PID.TID 0000.0001)                 1.800000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cDalton = /* coef used in Dalton number calculation [?] */
(PID.TID 0000.0001)                 3.460000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_scal_BulkCdn= /* Drag coefficient scaling factor [-] */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) zolmin = /* minimum stability parameter [?] */
(PID.TID 0000.0001)                -1.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psim_fac = /* coef used in turbulent fluxes calculation [-] */
(PID.TID 0000.0001)                 5.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) zref =  /* reference height [ m ] */
(PID.TID 0000.0001)                 1.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hu =  /* height of mean wind [ m ] */
(PID.TID 0000.0001)                 1.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ht =  /* height of mean temperature [ m ] */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hq =  /* height of mean spec.humidity [ m ] */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uMin = /* minimum wind speed [m/s] */
(PID.TID 0000.0001)                 5.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStabilityFct_overIce= /* transfert Coeffs over sea-ice depend on stability */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_iceCd = /* drag coefficient over sea-ice (fixed) [-] */
(PID.TID 0000.0001)                 1.630000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_iceCe = /* transfert coeff. over sea-ice, for Evap (fixed) [-] */
(PID.TID 0000.0001)                 1.630000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_iceCh = /* transfert coeff. over sea-ice, Sens.Heat.(fixed)[-] */
(PID.TID 0000.0001)                 1.630000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_albedo =  /* Sea-water albedo [-] */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useExfZenAlbedo = /* Sea-water albedo varies with zenith angle */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_ZenAlbedo = /* Sea-water albedo computation method */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useExfZenIncoming = /* compute incoming solar radiation */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ocean_emissivity = /* longwave ocean-surface emissivity [-] */
(PID.TID 0000.0001)                 9.700176366843034E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ice_emissivity = /* longwave seaice emissivity [-] */
(PID.TID 0000.0001)                 9.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snow_emissivity = /* longwave snow  emissivity [-] */
(PID.TID 0000.0001)                 9.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  EXF main CPP flags:
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // USE_EXF_INTERPOLATION:          NOT defined
(PID.TID 0000.0001) // ALLOW_ATM_TEMP:                     defined
(PID.TID 0000.0001) // ALLOW_ATM_WIND (useAtmWind):        defined
(PID.TID 0000.0001) // ALLOW_DOWNWARD_RADIATION:           defined
(PID.TID 0000.0001) // ALLOW_BULKFORMULAE:                 defined
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Zonal wind forcing period is                          0.
(PID.TID 0000.0001)    Zonal wind forcing is read from file:
(PID.TID 0000.0001)    >> windx.bin <<
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Atmospheric temperature period is                     0.
(PID.TID 0000.0001)    Atmospheric temperature is read from file:
(PID.TID 0000.0001)    >> tair_4x.bin <<
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Atmospheric specific humidity period is               0.
(PID.TID 0000.0001)    Atmospheric specific humidity is read from file:
(PID.TID 0000.0001)    >> qa70_4x.bin <<
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ALLOW_READ_TURBFLUXES:          NOT defined
(PID.TID 0000.0001) // EXF_READ_EVAP:                  NOT defined
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Precipitation data period is                          0.
(PID.TID 0000.0001)    Precipitation data is read from file:
(PID.TID 0000.0001)    >> const_00.bin <<
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ALLOW_RUNOFF:                       defined
(PID.TID 0000.0001) // ALLOW_RUNOFTEMP:                NOT defined
(PID.TID 0000.0001) // ALLOW_SALTFLX:                      defined
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Downward shortwave flux period is                     0.
(PID.TID 0000.0001)    Downward shortwave flux is read from file:
(PID.TID 0000.0001)    >> dsw_100.bin <<
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Downward longwave flux period is                      0.
(PID.TID 0000.0001)    Downward longwave flux is read from file:
(PID.TID 0000.0001)    >> dlw_250.bin <<
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // External forcing (EXF) climatology configuration :
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ALLOW_CLIMSST_RELAXATION:           defined
(PID.TID 0000.0001)    Climatological SST period is                          0.
(PID.TID 0000.0001)    Climatological SST is read from file:
(PID.TID 0000.0001)    >> tocn.bin <<
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ALLOW_CLIMSSS_RELAXATION:           defined
(PID.TID 0000.0001)    climsss relaxation is NOT used
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // External forcing (EXF) configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SEAICE_INIT_FIXED: Computing  7 thickness category limits with
(PID.TID 0000.0001) Hlimit_c1  = /* ITD bin parameter */
(PID.TID 0000.0001)                 3.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) Hlimit_c2  = /* ITD bin parameter */
(PID.TID 0000.0001)                 1.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) Hlimit_c3  = /* ITD bin parameter */
(PID.TID 0000.0001)                 3.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Seaice configuration (SEAICE_PARM01) >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Seaice time stepping configuration   > START <
(PID.TID 0000.0001)    ----------------------------------------------
(PID.TID 0000.0001) SEAICE_deltaTtherm= /* thermodynamic timestep */
(PID.TID 0000.0001)                 1.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_deltaTdyn  = /* dynamic timestep */
(PID.TID 0000.0001)                 1.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_deltaTevp  = /* EVP timestep */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseBDF2  = /* use backw. differencing for mom. eq. */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEupdateOceanStress= /* update Ocean surf. stress */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICErestoreUnderIce  = /* restore T and S under ice */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Seaice dynamics configuration   > START <
(PID.TID 0000.0001)    ------------------------------------------
(PID.TID 0000.0001) SEAICEuseDYNAMICS = /* use dynamics */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) model grid type   = /* type of sea ice model grid */
(PID.TID 0000.0001)               'C-GRID'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseStrImpCpl = /* use strongly implicit coupling */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEusePicardAsPrecon = /* Picard as preconditioner */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseLSR      = /* use default Picard-LSR solver */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseKrylov   = /* use Picard-Krylov solver */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseEVP      = /* use EVP solver rather than LSR */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseJFNK     = /* use JFNK solver */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseFREEDRIFT = /* use free drift solution */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OCEAN_drag        = /* air-ocean drag coefficient */
(PID.TID 0000.0001)                 1.000000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_drag       = /* air-ice drag coefficient */
(PID.TID 0000.0001)                 2.000000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_drag_south      = /* Southern Ocean SEAICE_drag */
(PID.TID 0000.0001)                 2.000000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_waterDrag  = /* water-ice drag (no units) */
(PID.TID 0000.0001)                 5.339805825242718E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_waterDrag_south = /* Southern Ocean waterDrag (no units) */
(PID.TID 0000.0001)                 5.339805825242718E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEdWatMin = /* minimum linear water-ice drag (in m/s) */
(PID.TID 0000.0001)                 2.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseTilt     = /* include surface tilt in dyna. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseTEM      = /* use truncated ellipse rheology */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_strength   = /* sea-ice strength Pstar */
(PID.TID 0000.0001)                 2.750000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_cStar      = /* sea-ice strength parameter cStar */
(PID.TID 0000.0001)                 2.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEpressReplFac= /* press. replacement method factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_tensilFac  = /* sea-ice tensile strength factor */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_tensilDepth= /* crit. depth for tensile strength */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEpresH0   = /* sea-ice strength Heff threshold */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEpresPow0 = /* exponent for Heff<SEAICEpresH0 */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEpresPow1 = /* exponent for Heff>SEAICEpresH0 */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEetaZmethod = /* method computing eta at Z-point */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_zetaMaxFac = /* factor for upper viscosity bound */
(PID.TID 0000.0001)                 2.500000000000000E+08
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_zetaMin    = /* lower bound for viscosity */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_eccen    = /* elliptical yield curve eccent */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEstressFactor    = /* wind stress scaling factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_airTurnAngle    = /* air-ice turning angle */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_waterTurnAngle  = /* ice-water turning angle */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseMetricTerms = /* use metric terms */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_no_slip    = /* no slip boundary conditions */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_2ndOrderBC = /* 2nd order no slip boundary conditions */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_clipVeloctities = /* impose max. vels. */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHB87stressCoupling  = /* altern. ice-ocean stress */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEscaleSurfStress  = /* scale atm. and ocean-surface stress with AREA */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_maskRHS    = /* mask RHS of solver */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEaddSnowMass = /* add snow mass to seaiceMassC/U/V */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) LSR_mixIniGuess = /* mix free-drift sol. into LSR initial Guess */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_LSRrelaxU  = /* LSR solver: relaxation parameter */
(PID.TID 0000.0001)                 9.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_LSRrelaxV  = /* LSR solver: relaxation parameter */
(PID.TID 0000.0001)                 9.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) LSR_ERROR         = /* sets accuracy of LSR solver */
(PID.TID 0000.0001)                 1.000000000000000E-12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SOLV_NCHECK       = /* test interval for LSR solver */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseMultiTileSolver = /* use full domain tri-diag solver */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_OLx = /* overlap for LSR/preconditioner */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_OLy = /* overlap for LSR/preconditioner */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEnonLinIterMax = /* max. number of nonlinear solver steps */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICElinearIterMax = /* max. number of linear solver steps */
(PID.TID 0000.0001)                    1500
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEnonLinTol     = /* non-linear solver tolerance */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Seaice advection diffusion config,   > START <
(PID.TID 0000.0001)    -----------------------------------------------
(PID.TID 0000.0001) SEAICEmomAdvection = /* advect sea ice momentum */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEadvHeff = /* advect effective ice thickness */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEadvArea = /* advect fractional ice area */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEadvSnow = /* advect snow layer together with ice */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEadvScheme   = /* advection scheme for ice */
(PID.TID 0000.0001)                      77
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEadvSchArea   = /* advection scheme for area */
(PID.TID 0000.0001)                      77
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEadvSchHeff   = /* advection scheme for thickness */
(PID.TID 0000.0001)                      77
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEadvSchSnow   = /* advection scheme for snow */
(PID.TID 0000.0001)                      77
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEdiffKhArea   = /* diffusivity (m^2/s) for area */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEdiffKhHeff   = /* diffusivity (m^2/s) for heff */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEdiffKhSnow   = /* diffusivity (m^2/s) for snow */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) DIFF1             = /* parameter used in advect.F [m/s] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Seaice ice thickness distribution configuration   > START <
(PID.TID 0000.0001)    -----------------------------------------------------------
(PID.TID 0000.0001) nITD              = /* number of ice thickness categories */
(PID.TID 0000.0001)                       7
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) Hlimit = /* seaice thickness category bin limits ( m ), Hlimit(0)=0 */
(PID.TID 0000.0001)                 4.603622977281613E-01,      /* K =  1 */
(PID.TID 0000.0001)                 9.635959063244672E-01,      /* K =  2 */
(PID.TID 0000.0001)                 1.566727695601180E+00,      /* K =  3 */
(PID.TID 0000.0001)                 2.399198180292796E+00,      /* K =  4 */
(PID.TID 0000.0001)                 3.740626997945927E+00,      /* K =  5 */
(PID.TID 0000.0001)                 6.131309831636896E+00,      /* K =  6 */
(PID.TID 0000.0001)                 9.999000000000000E+02       /* K =  7 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseLinRemapITD  = /* select linear remapping scheme for ITD */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHibler79IceStrength  = /* select ice strength parameterizationd */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEsimpleRidging  = /* select ridging scheme */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEpartFunc   = /* select ridging participation function */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEredistFunc = /* select ridging redistribution function */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_cf  = /* ice strength parameter */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEshearParm  = /* amount of energy lost to shear */
(PID.TID 0000.0001)                 5.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEgStar  = /* ridging parameter */
(PID.TID 0000.0001)                 1.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEhStar  = /* ridging parameter */
(PID.TID 0000.0001)                 2.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEaStar  = /* ridging parameter */
(PID.TID 0000.0001)                 5.000000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEmuRidging  = /* ridging parameter */
(PID.TID 0000.0001)                 3.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEmaxRaft  = /* ridging parameter */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEsnowFracRidge  = /* fraction of snow remaining on ridges */
(PID.TID 0000.0001)                 5.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Seaice thermodynamics configuration   > START <
(PID.TID 0000.0001)    -----------------------------------------------
(PID.TID 0000.0001) SEAICE_rhoIce     = /* density of sea ice (kg/m3) */
(PID.TID 0000.0001)                 9.100000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_rhoSnow    = /* density of snow (kg/m3) */
(PID.TID 0000.0001)                 3.300000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_rhoAir     = /* density of air (kg/m3) */
(PID.TID 0000.0001)                 1.200000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usePW79thermodynamics  = /* default 0-layer TD */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_lhEvap     = /* latent heat of evaporation */
(PID.TID 0000.0001)                 2.500000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_lhFusion   = /* latent heat of fusion */
(PID.TID 0000.0001)                 3.340000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_mcPheePiston = /* turbulent flux "piston velocity" a la McPhee (m/s) */
(PID.TID 0000.0001)                 8.749999999999999E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_mcPheeTaper = /* tapering of turbulent flux (0.< <1.) for AREA=1. */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_mcPheeStepFunc = /* replace linear tapering with step funct. */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_frazilFrac = /* frazil (T<tempFrz) to seaice conversion rate (0.< <1.) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_tempFrz0   = /* freezing temp. of sea water (intercept) */
(PID.TID 0000.0001)                 9.010000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_dTempFrz_dS= /* freezing temp. of sea water (slope) */
(PID.TID 0000.0001)                -5.750000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_growMeltByConv  = /* grow,melt by vert. conv. */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_doOpenWaterGrowth = /* grow by open water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_doOpenWaterMelt = /* melt by open water */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_areaGainFormula = /* ice cover gain formula (1,2)*/
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     1=from growth by ATM
(PID.TID 0000.0001)     2=from predicted growth by ATM
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_areaLossFormula = /* ice cover loss formula (1,2)*/
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     1=from all but only melt conributions by ATM and OCN
(PID.TID 0000.0001)     2=from net melt-grow>0 by ATM and OCN
(PID.TID 0000.0001)     3=from predicted melt by ATM
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HO                = /* nominal thickness of new ice */
(PID.TID 0000.0001)                 5.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HO_south               = /* Southern Ocean HO */
(PID.TID 0000.0001)                 5.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_area_max        = /* set to les than 1. to mimic open leads */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_salt0   = /* constant sea ice salinity */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_salinityTracer = /* test SITR varia. salinity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEuseFlooding = /* turn submerged snow into ice */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Seaice air-sea fluxes configuration,   > START <
(PID.TID 0000.0001)    -----------------------------------------------
(PID.TID 0000.0001) SEAICEheatConsFix  = /* accound for ocn<->seaice advect. heat flux */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_PDF        = /* sea-ice distribution (-) */
(PID.TID 0000.0001)                 1.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)     6 @  0.000000000000000E+00              /* K =  2:  7 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) IMAX_TICE         = /* iterations for ice surface temp */
(PID.TID 0000.0001)                      10
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) postSolvTempIter= /* flux calculation after surf. temp iter */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_dryIceAlb  = /* winter albedo */
(PID.TID 0000.0001)                 7.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_wetIceAlb  = /* summer albedo */
(PID.TID 0000.0001)                 6.600000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_drySnowAlb = /* dry snow albedo */
(PID.TID 0000.0001)                 8.400000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_wetSnowAlb = /* wet snow albedo */
(PID.TID 0000.0001)                 7.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_dryIceAlb_south = /* Southern Ocean dryIceAlb */
(PID.TID 0000.0001)                 7.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_wetIceAlb_south = /* Southern Ocean wetIceAlb */
(PID.TID 0000.0001)                 6.600000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_drySnowAlb_south= /* Southern Ocean drySnowAlb */
(PID.TID 0000.0001)                 8.400000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_wetSnowAlb_south= /* Southern Ocean wetSnowAlb */
(PID.TID 0000.0001)                 7.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_wetAlbTemp= /* Temp (o.C) threshold for wet-albedo */
(PID.TID 0000.0001)                -1.000000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_snow_emiss = /* snow emissivity */
(PID.TID 0000.0001)                 9.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_ice_emiss = /* seaice emissivity */
(PID.TID 0000.0001)                 9.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_cpAir      = /* heat capacity of air */
(PID.TID 0000.0001)                 1.005000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_dalton     = /* constant dalton number */
(PID.TID 0000.0001)                 1.750000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_iceConduct = /* sea-ice conductivity */
(PID.TID 0000.0001)                 2.165600000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_snowConduct= /* snow conductivity */
(PID.TID 0000.0001)                 3.100000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_snowThick  = /* cutoff snow thickness (for albedo) */
(PID.TID 0000.0001)                 1.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_shortwave  = /* penetration shortwave radiation */
(PID.TID 0000.0001)                 3.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMaykutSatVapPoly = /* use Maykut Polynomial for Sat.Vap.Pr */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) MIN_ATEMP         = /* minimum air temperature */
(PID.TID 0000.0001)                -5.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) MIN_LWDOWN        = /* minimum downward longwave */
(PID.TID 0000.0001)                 6.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) MIN_TICE          = /* minimum ice temperature */
(PID.TID 0000.0001)                -5.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Seaice initialization and IO config.,   > START <
(PID.TID 0000.0001)    -------------------------------------------------
(PID.TID 0000.0001) SEAICE_initialHEFF= /* initial sea-ice thickness */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AreaFile = /* Initial ice concentration File */
(PID.TID 0000.0001)               'const100.bin'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HeffFile = /* Initial effective ice thickness File */
(PID.TID 0000.0001)               'heff_quartic.bin'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HsnowFile = /* Initial snow thickness File */
(PID.TID 0000.0001)               'const_00.bin'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uIceFile = /* Initial U-ice velocity File */
(PID.TID 0000.0001)               ''
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) vIceFile = /* Initial V-ice velocity File */
(PID.TID 0000.0001)               ''
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICEwriteState  = /* write sea ice state to file */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_monFreq  = /* monitor frequency */
(PID.TID 0000.0001)                 1.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_dumpFreq   = /* dump frequency */
(PID.TID 0000.0001)                 8.640000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_taveFreq   = /* time-averaging frequency */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_mon_stdio  = /* write monitor to std-outp */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_dump_mdsio = /* write snap-shot   using MDSIO */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_tave_mdsio = /* write TimeAverage using MDSIO */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001)    Seaice regularization numbers,   > START <
(PID.TID 0000.0001)    -----------------------------------------------
(PID.TID 0000.0001) SEAICE_deltaMin   = /* reduce singularities in Delta */
(PID.TID 0000.0001)                 1.000000000000000E-10
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_EPS        = /* small number */
(PID.TID 0000.0001)                 1.000000000000000E-10
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_EPS_SQ     = /* small number squared */
(PID.TID 0000.0001)                 1.000000000000000E-20
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_area_reg   = /* reduce derivative singularities */
(PID.TID 0000.0001)                 1.000000000000000E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_hice_reg   = /* reduce derivative singularities */
(PID.TID 0000.0001)                 5.000000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SEAICE_area_floor = /* reduce derivative singularities */
(PID.TID 0000.0001)                 1.000000000000000E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Seaice configuration (SEAICE_PARM01) >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGNOSTICS_SET_LEVELS: done
(PID.TID 0000.0001)  Total Nb of available Diagnostics: ndiagt=   226
(PID.TID 0000.0001)  write list of available Diagnostics to file: available_diagnostics.log
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #   163 SIuice
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #   164 SIvice
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #   149 SIheff
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #   146 SIarea
(PID.TID 0000.0001)   space allocated for all diagnostics:       4 levels
(PID.TID 0000.0001)   set mate pointer for diag #   163  SIuice   , Parms: UU      M1 , mate:   164
(PID.TID 0000.0001)   set mate pointer for diag #   164  SIvice   , Parms: VV      M1 , mate:   163
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: snapshot
(PID.TID 0000.0001)  Levels:       1.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: done
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGSTATS_SET_REGIONS: define no region
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) SETDIAG: Allocate  1 Levels for Stats-Diag #   146 SIarea
(PID.TID 0000.0001) SETDIAG: Allocate  1 Levels for Stats-Diag #   149 SIheff
(PID.TID 0000.0001) SETDIAG: Allocate  1 Levels for Stats-Diag #   151 SIhsnow
(PID.TID 0000.0001) SETDIAG: Allocate  1 Levels for Stats-Diag #   163 SIuice
(PID.TID 0000.0001) SETDIAG: Allocate  1 Levels for Stats-Diag #   164 SIvice
(PID.TID 0000.0001)   space allocated for all stats-diags:       5 levels
(PID.TID 0000.0001) DIAGSTATS_SET_POINTERS: done
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGSTATS_INI_IO: open file: iceStDiag.0000000000.txt , unit=     9
(PID.TID 0000.0001) %MON fCori_max                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCori_min                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCori_mean                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCori_sd                     =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_max                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_min                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_mean                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_sd                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_max                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_min                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_mean                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_sd                  =   0.0000000000000E+00
(PID.TID 0000.0001) INI_CG2D: CG2D normalisation factor =  1.0000000000000001E-01
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model configuration
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0000.0001)               'OCEANIC'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0000.0001)                -1.620000000000000E+00       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sRef =   /* Reference salinity profile ( psu ) */
(PID.TID 0000.0001)                 3.000000000000000E+01       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 3.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0000.0001)                 3.000000000000000E-02       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomVisc_pCell = /* Partial-cell in bottom Visc. BC */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0000.0001)                 5.000000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectBotDragQuadr = /* select quadratic bottom drag options */
(PID.TID 0000.0001)                      -1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0000.0001)                 0.000000000000000E+00       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0000.0001)                 0.000000000000000E+00       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                -2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0000.0001)                -8.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 1.000000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosType =  /* Type of Equation of State */
(PID.TID 0000.0001)               'LINEAR'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tAlpha = /* Linear EOS thermal expansion coefficient ( 1/oC ) */
(PID.TID 0000.0001)                 2.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sBeta  = /* Linear EOS haline contraction coefficient ( 1/psu ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoNil    = /* Reference density for Linear EOS ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.030000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectP_inEOS_Zc = /* select pressure to use in EOS (0,1,2,3) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= -g*rhoConst*z ; 1= pRef (from tRef,sRef); 2= Hyd P ; 3= Hyd+NH P
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) surf_pRef = /* Surface reference pressure ( Pa ) */
(PID.TID 0000.0001)                 1.013250000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0000.0001)                 3.986000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.030000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0000.0001)                 1.000000000000000E+00       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0000.0001)     2 @  1.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacC = /* gravity factor (vs surf.) @ cell-Center (-) */
(PID.TID 0000.0001)                 1.000000000000000E+00       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacF = /* gravity factor (vs surf.) @ W-Interface (-) */
(PID.TID 0000.0001)     2 @  1.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0000.0001)                 8.616400000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0000.0001)                 7.292123516990375E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicDiv2DFlow =  /* Barot. Flow Div. implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exactConserv =  /* Exact Volume Conservation on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(psu)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(psu)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(psu)*/
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectImplicitDrag= /* Implicit bot Drag options (0,1,2)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= Expl. ; 1= Impl. on provis. Vel ; 2= Fully Impl (with surf.P)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) metricTerms =  /* metric-Terms on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3dCoriolis = /* 3-D Coriolis on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriScheme= /* Scheme selector for Coriolis-Term */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)    = 0 : original discretization (simple averaging, no hFac)
(PID.TID 0000.0001)    = 1 : Wet-point averaging (Jamar & Ozer 1986)
(PID.TID 0000.0001)    = 2 : energy conserving scheme (no hFac weight)
(PID.TID 0000.0001)    = 3 : energy conserving scheme using Wet-point averaging
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  rwSuffixType =   /* select format of mds file suffix */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : myIter (I10.10) ;   = 1 : 100*myTime (100th sec) ;
(PID.TID 0000.0001)    = 2 : myTime (seconds);   = 3 : myTime/360 (10th of hr);
(PID.TID 0000.0001)    = 4 : myTime/3600 (hours)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0000.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0000.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0000.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0000.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0000.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0000.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0000.0001) debugLevel =  /* select debug printing level */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  plotLevel =  /* select PLOT_FIELD printing level */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0000.0001)                     500
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dChkResFreq =   /* 2d con. grad convergence test frequency */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0000.0001)                 1.000000000000000E-12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0000.0001)                 1.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0000.0001)                 1.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0000.0001)                 1.800000000000000E+03       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0000.0001)                 1.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) applyExchUV_early = /* Apply EXCH to U,V earlier in time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0000.0001)                      12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0000.0001)                      12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0000.0001)                 2.160000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 3.600000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0000.0001)                 8.640000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0000.0001)                 2.160000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 2.592000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0000.0001)                 6.300000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMin4hFacEdges = /* set hFacW,S as minimum of adjacent hFacC factor */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interViscAr_pCell = /* account for partial-cell in interior vert. viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interDiffKr_pCell = /* account for partial-cell in interior vert. diffusion */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pCellMix_select = /* option to enhance mixing near surface & bottom */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) seaLev_Z =  /* reference height of sea-level [m] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) top_Pres =  /* reference pressure at the top [Pa] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0000.0001)                 9.708737864077669E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0000.0001)                 1.030000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0000.0001)     2 @  5.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0000.0001)                 1.000000000000000E+01       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    80 @  5.000000000000000E+03              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    42 @  5.000000000000000E+03              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                -1.100000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0000.0001)                 6.370000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 2.500000000000000E+03,      /* I =  1 */
(PID.TID 0000.0001)                 7.500000000000000E+03,      /* I =  2 */
(PID.TID 0000.0001)                 1.250000000000000E+04,      /* I =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.750000000000000E+04,      /* I = 18 */
(PID.TID 0000.0001)                 9.250000000000000E+04,      /* I = 19 */
(PID.TID 0000.0001)                 9.750000000000000E+04,      /* I = 20 */
(PID.TID 0000.0001)                 1.025000000000000E+05,      /* I = 21 */
(PID.TID 0000.0001)                 1.075000000000000E+05,      /* I = 22 */
(PID.TID 0000.0001)                 1.125000000000000E+05,      /* I = 23 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.875000000000000E+05,      /* I = 38 */
(PID.TID 0000.0001)                 1.925000000000000E+05,      /* I = 39 */
(PID.TID 0000.0001)                 1.975000000000000E+05,      /* I = 40 */
(PID.TID 0000.0001)                 2.025000000000000E+05,      /* I = 41 */
(PID.TID 0000.0001)                 2.075000000000000E+05,      /* I = 42 */
(PID.TID 0000.0001)                 2.125000000000000E+05,      /* I = 43 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 2.875000000000000E+05,      /* I = 58 */
(PID.TID 0000.0001)                 2.925000000000000E+05,      /* I = 59 */
(PID.TID 0000.0001)                 2.975000000000000E+05,      /* I = 60 */
(PID.TID 0000.0001)                 3.025000000000000E+05,      /* I = 61 */
(PID.TID 0000.0001)                 3.075000000000000E+05,      /* I = 62 */
(PID.TID 0000.0001)                 3.125000000000000E+05,      /* I = 63 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 3.875000000000000E+05,      /* I = 78 */
(PID.TID 0000.0001)                 3.925000000000000E+05,      /* I = 79 */
(PID.TID 0000.0001)                 3.975000000000000E+05       /* I = 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                -1.075000000000000E+05,      /* J =  1 */
(PID.TID 0000.0001)                -1.025000000000000E+05,      /* J =  2 */
(PID.TID 0000.0001)                -9.750000000000000E+04,      /* J =  3 */
(PID.TID 0000.0001)                -9.250000000000000E+04,      /* J =  4 */
(PID.TID 0000.0001)                -8.750000000000000E+04,      /* J =  5 */
(PID.TID 0000.0001)                -8.250000000000000E+04,      /* J =  6 */
(PID.TID 0000.0001)                -7.750000000000000E+04,      /* J =  7 */
(PID.TID 0000.0001)                -7.250000000000000E+04,      /* J =  8 */
(PID.TID 0000.0001)                -6.750000000000000E+04,      /* J =  9 */
(PID.TID 0000.0001)                -6.250000000000000E+04,      /* J = 10 */
(PID.TID 0000.0001)                -5.750000000000000E+04,      /* J = 11 */
(PID.TID 0000.0001)                -5.250000000000000E+04,      /* J = 12 */
(PID.TID 0000.0001)                -4.750000000000000E+04,      /* J = 13 */
(PID.TID 0000.0001)                -4.250000000000000E+04,      /* J = 14 */
(PID.TID 0000.0001)                -3.750000000000000E+04,      /* J = 15 */
(PID.TID 0000.0001)                -3.250000000000000E+04,      /* J = 16 */
(PID.TID 0000.0001)                -2.750000000000000E+04,      /* J = 17 */
(PID.TID 0000.0001)                -2.250000000000000E+04,      /* J = 18 */
(PID.TID 0000.0001)                -1.750000000000000E+04,      /* J = 19 */
(PID.TID 0000.0001)                -1.250000000000000E+04,      /* J = 20 */
(PID.TID 0000.0001)                -7.500000000000000E+03,      /* J = 21 */
(PID.TID 0000.0001)                -2.500000000000000E+03,      /* J = 22 */
(PID.TID 0000.0001)                 2.500000000000000E+03,      /* J = 23 */
(PID.TID 0000.0001)                 7.500000000000000E+03,      /* J = 24 */
(PID.TID 0000.0001)                 1.250000000000000E+04,      /* J = 25 */
(PID.TID 0000.0001)                 1.750000000000000E+04,      /* J = 26 */
(PID.TID 0000.0001)                 2.250000000000000E+04,      /* J = 27 */
(PID.TID 0000.0001)                 2.750000000000000E+04,      /* J = 28 */
(PID.TID 0000.0001)                 3.250000000000000E+04,      /* J = 29 */
(PID.TID 0000.0001)                 3.750000000000000E+04,      /* J = 30 */
(PID.TID 0000.0001)                 4.250000000000000E+04,      /* J = 31 */
(PID.TID 0000.0001)                 4.750000000000000E+04,      /* J = 32 */
(PID.TID 0000.0001)                 5.250000000000000E+04,      /* J = 33 */
(PID.TID 0000.0001)                 5.750000000000000E+04,      /* J = 34 */
(PID.TID 0000.0001)                 6.250000000000000E+04,      /* J = 35 */
(PID.TID 0000.0001)                 6.750000000000000E+04,      /* J = 36 */
(PID.TID 0000.0001)                 7.250000000000000E+04,      /* J = 37 */
(PID.TID 0000.0001)                 7.750000000000000E+04,      /* J = 38 */
(PID.TID 0000.0001)                 8.250000000000000E+04,      /* J = 39 */
(PID.TID 0000.0001)                 8.750000000000000E+04,      /* J = 40 */
(PID.TID 0000.0001)                 9.250000000000000E+04,      /* J = 41 */
(PID.TID 0000.0001)                 9.750000000000000E+04       /* J = 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0000.0001)                -5.000000000000000E+00       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -1.000000000000000E+01       /* K =  2 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0000.0001)                 1.000000000000000E+00       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0000.0001)     2 @  1.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rVel2wUnit = /* convert units: rVel -> wSpeed (=1 if z-coord)*/
(PID.TID 0000.0001)     2 @  1.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) wUnit2rVel = /* convert units: wSpeed -> rVel (=1 if z-coord)*/
(PID.TID 0000.0001)     2 @  1.000000000000000E+00              /* K =  1:  2 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0000.0001)                 0.000000000000000E+00       /* K =  1 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    80 @  5.000000000000000E+03              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    42 @  5.000000000000000E+03              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    80 @  5.000000000000000E+03              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    42 @  5.000000000000000E+03              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    80 @  5.000000000000000E+03              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    42 @  5.000000000000000E+03              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    80 @  5.000000000000000E+03              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    42 @  5.000000000000000E+03              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    80 @  5.000000000000000E+03              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    42 @  5.000000000000000E+03              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    80 @  5.000000000000000E+03              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    42 @  5.000000000000000E+03              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    80 @  5.000000000000000E+03              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    42 @  5.000000000000000E+03              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    80 @  5.000000000000000E+03              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    42 @  5.000000000000000E+03              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    80 @  2.500000000000000E+07              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)    42 @  2.500000000000000E+07              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    80 @  2.500000000000000E+07              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)    42 @  2.500000000000000E+07              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    80 @  2.500000000000000E+07              /* I =  1: 80 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)    42 @  2.500000000000000E+07              /* J =  1: 42 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0000.0001)                 6.950000000000000E+10
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End of Model config. summary
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) == Packages configuration : Check & print summary ==
(PID.TID 0000.0001) 
(PID.TID 0000.0001) EXF_CHECK: #define ALLOW_EXF
(PID.TID 0000.0001) SEAICE_CHECK: #define ALLOW_SEAICE
(PID.TID 0000.0001) GAD_CHECK: #define ALLOW_GENERIC_ADVDIFF
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0000.0001) // CONFIG_CHECK : Normal End
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: uVel_3c0.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: vVel_3c0.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: eta_3c0.bin
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  write diagnostics summary to file ioUnit:      6
Iter.Nb:         0 ; Time(s):  0.0000000000000E+00
------------------------------------------------------------------------
2D/3D diagnostics: Number of lists:     1
------------------------------------------------------------------------
listId=    1 ; file name: snapshot
 nFlds, nActive,       freq     &     phase        , nLev               
    4  |    4  |    -86400.000000      3600.000000 |   1
 levels:   1
 diag# | name   |   ipt  |  iMate | kLev|   count |   mate.C|           
   163 |SIuice  |      1 |      2 |   1 |       0 |       0 |
   164 |SIvice  |      2 |      1 |   1 |       0 |       0 |
   149 |SIheff  |      3 |      0 |   1 |       0 |
   146 |SIarea  |      4 |      0 |   1 |       0 |
------------------------------------------------------------------------
Global & Regional Statistics diagnostics: Number of lists:     1
------------------------------------------------------------------------
listId=   1 ; file name: iceStDiag
 nFlds, nActive,       freq     &     phase        |                    
    5  |    5  |      7200.000000      1800.000000 |
 Regions:   0
 diag# | name   |   ipt  |  iMate |    Volume   |   mate-Vol. |         
   146 |SIarea  |      1 |      0 | 0.00000E+00 |
   149 |SIheff  |      2 |      0 | 0.00000E+00 |
   151 |SIhsnow |      3 |      0 | 0.00000E+00 |
   163 |SIuice  |      4 |      0 | 0.00000E+00 |
   164 |SIvice  |      5 |      0 | 0.00000E+00 |
------------------------------------------------------------------------
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: windx.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: tair_4x.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: qa70_4x.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: const_00.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: dsw_100.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: dlw_250.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: tocn.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: heff_quartic.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: const100.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: const_00.bin
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     0
(PID.TID 0000.0001) %MON time_secondsf                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.4855271423662E-02
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.5547625271979E-02
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -6.8609663050809E-19
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.6185276903544E-03
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.4210904025025E-06
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   5.4694595665363E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   8.1797628424127E-02
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   3.2603530929361E-01
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   8.4661197148990E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.3392731599312E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   2.2780617104059E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -1.4793000868950E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =  -3.2450632095700E-04
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   6.0970835295293E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   8.1836652323282E-05
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.6555698845343E-04
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -2.4393468746960E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.8006686469634E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   1.8006622332191E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   3.4047422448573E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =  -1.6200000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -1.6200000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =  -1.6200000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.0000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.0000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.0000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.9690054439531E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   8.2010221574612E-02
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   8.7816487489057E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   1.5484032096270E-05
(PID.TID 0000.0001) %MON ke_max                       =   1.4564487757410E-01
(PID.TID 0000.0001) %MON ke_mean                      =   5.8130401708830E-02
(PID.TID 0000.0001) %MON ke_vol                       =   6.9500000000000E+11
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.4191202448594E-04
(PID.TID 0000.0001) %MON vort_r_max                   =   8.9657385579761E-05
(PID.TID 0000.0001) %MON vort_a_mean                  =  -6.5586096803907E-22
(PID.TID 0000.0001) %MON vort_a_sd                    =   1.5889649807104E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -6.8228760045090E-22
(PID.TID 0000.0001) %MON vort_p_sd                    =   3.0669223294758E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =  -1.4394880171946E-21
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.6750406018264E-20
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                     0
(PID.TID 0000.0001) %MON seaice_time_sec              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_uice_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_uice_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_uice_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_uice_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_uice_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_vice_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_vice_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_vice_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_vice_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_vice_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_max              =   1.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_min              =   1.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   1.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6257965109702E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   1.3015410245731E-05
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9238269172251E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2084104540500E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   4.7611843052501E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR EXF statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON exf_tsnumber                 =                     0
(PID.TID 0000.0001) %MON exf_time_sec                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_ustress_max              =   1.5090582345178E-01
(PID.TID 0000.0001) %MON exf_ustress_min              =   1.2184383176727E-01
(PID.TID 0000.0001) %MON exf_ustress_mean             =   1.3639677841392E-01
(PID.TID 0000.0001) %MON exf_ustress_sd               =   1.0660482943078E-02
(PID.TID 0000.0001) %MON exf_ustress_del2             =   5.0007679327149E-06
(PID.TID 0000.0001) %MON exf_vstress_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_vstress_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_vstress_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_vstress_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_vstress_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_hflux_max                =   6.5891206537299E+01
(PID.TID 0000.0001) %MON exf_hflux_min                =  -8.1404237426772E+01
(PID.TID 0000.0001) %MON exf_hflux_mean               =  -1.2615253864378E+01
(PID.TID 0000.0001) %MON exf_hflux_sd                 =   5.2562085706909E+01
(PID.TID 0000.0001) %MON exf_hflux_del2               =   2.4884597814969E-01
(PID.TID 0000.0001) %MON exf_sflux_max                =   2.4349220321116E-08
(PID.TID 0000.0001) %MON exf_sflux_min                =  -2.4559554123212E-09
(PID.TID 0000.0001) %MON exf_sflux_mean               =   1.1240274785629E-08
(PID.TID 0000.0001) %MON exf_sflux_sd                 =   9.7326718386416E-09
(PID.TID 0000.0001) %MON exf_sflux_del2               =   7.9927232086011E-11
(PID.TID 0000.0001) %MON exf_uwind_max                =   1.0000000000000E+01
(PID.TID 0000.0001) %MON exf_uwind_min                =   1.0000000000000E+01
(PID.TID 0000.0001) %MON exf_uwind_mean               =   1.0000000000000E+01
(PID.TID 0000.0001) %MON exf_uwind_sd                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_uwind_del2               =   5.9106750809910E-02
(PID.TID 0000.0001) %MON exf_vwind_max                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_vwind_min                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_vwind_mean               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_vwind_sd                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_vwind_del2               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_wspeed_max               =   1.0000000000000E+01
(PID.TID 0000.0001) %MON exf_wspeed_min               =   1.0000000000000E+01
(PID.TID 0000.0001) %MON exf_wspeed_mean              =   1.0000000000000E+01
(PID.TID 0000.0001) %MON exf_wspeed_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_wspeed_del2              =   5.9106750809910E-02
(PID.TID 0000.0001) %MON exf_atemp_max                =   2.7714691614496E+02
(PID.TID 0000.0001) %MON exf_atemp_min                =   2.6915308385504E+02
(PID.TID 0000.0001) %MON exf_atemp_mean               =   2.7315000000000E+02
(PID.TID 0000.0001) %MON exf_atemp_sd                 =   2.9037718208063E+00
(PID.TID 0000.0001) %MON exf_atemp_del2               =   1.2859997507300E-02
(PID.TID 0000.0001) %MON exf_aqh_max                  =   3.7064806789606E-03
(PID.TID 0000.0001) %MON exf_aqh_min                  =   2.1441807824757E-03
(PID.TID 0000.0001) %MON exf_aqh_mean                 =   2.8804761552935E-03
(PID.TID 0000.0001) %MON exf_aqh_sd                   =   5.6734393616353E-04
(PID.TID 0000.0001) %MON exf_aqh_del2                 =   1.7078962742152E-05
(PID.TID 0000.0001) %MON exf_lwflux_max               =   5.6469966707287E+01
(PID.TID 0000.0001) %MON exf_lwflux_min               =   5.6469966707287E+01
(PID.TID 0000.0001) %MON exf_lwflux_mean              =   5.6469966707288E+01
(PID.TID 0000.0001) %MON exf_lwflux_sd                =   7.6028072726331E-13
(PID.TID 0000.0001) %MON exf_lwflux_del2              =   3.3377562504116E-01
(PID.TID 0000.0001) %MON exf_evap_max                 =   2.4349220321116E-08
(PID.TID 0000.0001) %MON exf_evap_min                 =  -2.4559554123212E-09
(PID.TID 0000.0001) %MON exf_evap_mean                =   1.1240274785629E-08
(PID.TID 0000.0001) %MON exf_evap_sd                  =   9.7326718386416E-09
(PID.TID 0000.0001) %MON exf_evap_del2                =   7.9927232086011E-11
(PID.TID 0000.0001) %MON exf_precip_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_precip_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_precip_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_precip_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_precip_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_swflux_max               =  -9.0000000000000E+01
(PID.TID 0000.0001) %MON exf_swflux_min               =  -9.0000000000000E+01
(PID.TID 0000.0001) %MON exf_swflux_mean              =  -9.0000000000000E+01
(PID.TID 0000.0001) %MON exf_swflux_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_swflux_del2              =   5.3196075728919E-01
(PID.TID 0000.0001) %MON exf_swdown_max               =   1.0000000000000E+02
(PID.TID 0000.0001) %MON exf_swdown_min               =   1.0000000000000E+02
(PID.TID 0000.0001) %MON exf_swdown_mean              =   1.0000000000000E+02
(PID.TID 0000.0001) %MON exf_swdown_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_swdown_del2              =   5.9106750809910E-01
(PID.TID 0000.0001) %MON exf_lwdown_max               =   2.5000000000000E+02
(PID.TID 0000.0001) %MON exf_lwdown_min               =   2.5000000000000E+02
(PID.TID 0000.0001) %MON exf_lwdown_mean              =   2.5000000000000E+02
(PID.TID 0000.0001) %MON exf_lwdown_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON exf_lwdown_del2              =   1.4776687702478E+00
(PID.TID 0000.0001) %MON exf_climsst_max              =  -1.1200000000000E+00
(PID.TID 0000.0001) %MON exf_climsst_min              =  -1.9000000000000E+00
(PID.TID 0000.0001) %MON exf_climsst_mean             =  -1.4758380996034E+00
(PID.TID 0000.0001) %MON exf_climsst_sd               =   2.7690286535789E-01
(PID.TID 0000.0001) %MON exf_climsst_del2             =   1.0615551600389E-04
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR EXF statistics
(PID.TID 0000.0001) // =======================================================
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  9.24106196E-01  1.17296801E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  8.85662486E+02  2.08251541E+02
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  6.32371401E-06  1.43573007E+00
 SEAICE_LSR (ipass=   1) iters,dV,Resid=   272  9.57417739E-13  6.31107157E-09
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  1.07958570E+00  4.14679524E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  7.79521472E+02  1.26524975E+02
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  8.80342310E-06  1.85071944E+00
 SEAICE_LSR (ipass=   2) iters,dV,Resid=   144  8.10294540E-13  2.33810200E-09
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                     1
(PID.TID 0000.0001) %MON seaice_time_sec              =   1.8000000000000E+03
(PID.TID 0000.0001) %MON seaice_uice_max              =   4.5501172010391E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   1.8320915382542E-02
(PID.TID 0000.0001) %MON seaice_uice_mean             =   1.1783918135520E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   1.5174085220464E-01
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.3648672953237E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   6.5669958021762E-02
(PID.TID 0000.0001) %MON seaice_vice_min              =  -5.8329612802282E-02
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -8.6151447920027E-04
(PID.TID 0000.0001) %MON seaice_vice_sd               =   1.4520275861260E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   2.4610735448366E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9999985023495E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.6524932912375E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   1.6182614455150E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.2065961966255E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6254861823847E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9235072729840E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2083682848396E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   4.7613380554169E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 Compute Stats, Diag. #    146  SIarea    vol(   0 ): 6.950E+10  Parms: SM      M1      
 Compute Stats, Diag. #    149  SIheff    vol(   0 ): 6.950E+10  Parms: SM      M1      
 Compute Stats, Diag. #    151  SIhsnow   vol(   0 ): 6.950E+10  Parms: SM      M1      
 Compute Stats, Diag. #    163  SIuice    vol(   0 ): 6.900E+10  Parms: UU      M1      
 Compute Stats, Diag. #    164  SIvice    vol(   0 ): 6.750E+10  Parms: VV      M1      
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  1.24575219E+00  5.65574080E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  6.98968798E+02  1.59233563E+02
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  1.20886598E-05  2.01173847E+00
 SEAICE_LSR (ipass=   1) iters,dV,Resid=    96  8.19677659E-13  1.30024085E-10
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  1.22796014E+00  4.91202394E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  6.42332623E+02  1.75612999E+02
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  1.29511562E-05  1.89993829E+00
 SEAICE_LSR (ipass=   2) iters,dV,Resid=    96  8.43818071E-13  6.07003562E-12
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep          1
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                     2
(PID.TID 0000.0001) %MON seaice_time_sec              =   3.6000000000000E+03
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.5738545184736E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   4.7655276683295E-02
(PID.TID 0000.0001) %MON seaice_uice_mean             =   2.4300349613666E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   1.8992634701850E-01
(PID.TID 0000.0001) %MON seaice_uice_del2             =   4.4358596016640E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.0968690029464E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.1684368787448E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -8.2359995954803E-03
(PID.TID 0000.0001) %MON seaice_vice_sd               =   3.5584913789692E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   5.5259111065158E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9999973409823E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.5592095131220E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   1.7829650333387E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.2720303759741E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6252332313723E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9232275589035E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2082378933471E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   4.7953010548024E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  1.18112490E+00  4.36067762E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  5.14915068E+02  1.78353453E+02
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  1.46513630E-05  1.72670357E+00
 SEAICE_LSR (ipass=   1) iters,dV,Resid=   104  7.75407516E-13  6.39167648E-13
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  1.12940782E+00  4.14228430E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  4.94198666E+02  1.81598400E+02
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  1.44197849E-05  1.51485787E+00
 SEAICE_LSR (ipass=   2) iters,dV,Resid=   136  7.44349027E-13  1.00710889E-12
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep          2
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                     3
(PID.TID 0000.0001) %MON seaice_time_sec              =   5.4000000000000E+03
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.1531385250657E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   8.2028144595619E-02
(PID.TID 0000.0001) %MON seaice_uice_mean             =   3.0077928673361E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   1.7282187429730E-01
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.6933238011124E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.1699495889048E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.5426137886543E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -1.7770078339897E-02
(PID.TID 0000.0001) %MON seaice_vice_sd               =   4.7436132705440E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   6.3438647961208E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9999860558161E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.4934826974180E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   1.8770710235892E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.3389489709644E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6250359076917E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9229869404420E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2078109192560E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   4.9820803046719E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 Computing Diagnostic #    163  SIuice       Counter:       1   Parms: UU      M1      
           Vector  Mate for  SIuice       Diagnostic #    164  SIvice   exists 
 Computing Diagnostic #    164  SIvice       Counter:       1   Parms: VV      M1      
           Vector  Mate for  SIvice       Diagnostic #    163  SIuice   exists 
 Computing Diagnostic #    149  SIheff       Counter:       1   Parms: SM      M1      
 Computing Diagnostic #    146  SIarea       Counter:       1   Parms: SM      M1      
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  1.06731930E+00  4.01043367E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  4.44095285E+02  1.84282709E+02
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  1.51266169E-05  1.27063009E+00
 SEAICE_LSR (ipass=   1) iters,dV,Resid=   288  9.37694367E-13  6.54072385E-12
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  1.01719225E+00  4.01763341E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  4.44089278E+02  1.82525006E+02
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  1.42146860E-05  1.07118516E+00
 SEAICE_LSR (ipass=   2) iters,dV,Resid=   332  9.58094715E-13  9.26520130E-12
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep          3
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  2 in timestep          3
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                     4
(PID.TID 0000.0001) %MON seaice_time_sec              =   7.2000000000000E+03
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.7823170463799E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   1.1686696853561E-01
(PID.TID 0000.0001) %MON seaice_uice_mean             =   3.3819234814838E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   1.6308192722722E-01
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.5588554075202E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.1575851556318E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.7901253481097E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -2.4980831416111E-02
(PID.TID 0000.0001) %MON seaice_vice_sd               =   5.4095082955701E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   6.2077615628916E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9999618698801E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.4390187514123E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   1.9451841809443E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.3958733342904E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6248772087685E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9227783636900E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2070505356732E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   5.3743449596156E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  9.30565922E-01  3.81663010E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  3.95327049E+02  1.58858520E+02
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  1.43143283E-05  9.20058095E-01
 SEAICE_LSR (ipass=   1) iters,dV,Resid=   466  9.77162795E-13  1.67612503E-11
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  8.67937459E-01  3.45982301E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  3.69549715E+02  1.36777310E+02
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  1.37767852E-05  8.08443990E-01
 SEAICE_LSR (ipass=   2) iters,dV,Resid=   488  9.58413904E-13  1.84418533E-11
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep          4
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  2 in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    5) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    6) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    6) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    7) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    7) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    7) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    8) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    8) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    8) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    8) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    8) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    8) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    8) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    9) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    9) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    9) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    9) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    9) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    9) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    9) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    9) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    9) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    9) in timestep          4
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    9) in timestep          4
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                     5
(PID.TID 0000.0001) %MON seaice_time_sec              =   9.0000000000000E+03
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.8420100115673E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   1.5034743597109E-01
(PID.TID 0000.0001) %MON seaice_uice_mean             =   3.6276968026684E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   1.5074970861256E-01
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.5977928408406E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.1639655838579E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.8879456840451E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -2.8653271088081E-02
(PID.TID 0000.0001) %MON seaice_vice_sd               =   5.7089022163774E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   6.2524138269790E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9999606121869E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.3900970346375E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   2.0070281841584E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.4798110884318E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6247439950128E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9225963118004E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2060522572403E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   5.9641814855643E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 Compute Stats, Diag. #    146  SIarea    vol(   0 ): 2.780E+11  Parms: SM      M1      
 Compute Stats, Diag. #    149  SIheff    vol(   0 ): 2.780E+11  Parms: SM      M1      
 Compute Stats, Diag. #    151  SIhsnow   vol(   0 ): 2.780E+11  Parms: SM      M1      
 Compute Stats, Diag. #    163  SIuice    vol(   0 ): 2.760E+11  Parms: UU      M1      
 Compute Stats, Diag. #    164  SIvice    vol(   0 ): 2.700E+11  Parms: VV      M1      
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  7.45091590E-01  3.35291470E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  3.06811178E+02  1.07191932E+02
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  1.47161602E-05  7.45103601E-01
 SEAICE_LSR (ipass=   1) iters,dV,Resid=   570  9.54139545E-13  2.46840311E-11
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  6.98098795E-01  2.98015186E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.88782642E+02  9.59597214E+01
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  1.41196470E-05  6.68024527E-01
 SEAICE_LSR (ipass=   2) iters,dV,Resid=   594  9.89028304E-13  2.82407426E-11
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep          5
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  2 in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    4) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    5) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    6) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    7) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    8) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    9) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10   11) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26   11) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13   12) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   12) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   12) in timestep          5
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21   12) in timestep          5
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                     6
(PID.TID 0000.0001) %MON seaice_time_sec              =   1.0800000000000E+04
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.8006199803456E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   1.8513653867067E-01
(PID.TID 0000.0001) %MON seaice_uice_mean             =   3.8249642631729E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   1.3762185327402E-01
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.6751680909510E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.1707230095253E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.8960684604735E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -3.0127180004765E-02
(PID.TID 0000.0001) %MON seaice_vice_sd               =   5.8105176492401E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   7.7356159829783E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9999516274166E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.3483552483658E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   2.0511418797442E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.4826573895740E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6245826413930E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9224370847005E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2049143336432E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   6.6759479918914E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  6.52994273E-01  2.69804133E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.45986258E+02  8.14558848E+01
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  1.47039805E-05  6.46512752E-01
 SEAICE_LSR (ipass=   1) iters,dV,Resid=   678  9.96175364E-13  3.77884268E-11
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  6.42938244E-01  2.27519422E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.40090512E+02  7.68048751E+01
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  1.34928442E-05  5.94829059E-01
 SEAICE_LSR (ipass=   2) iters,dV,Resid=   700  9.87446236E-13  4.23844466E-11
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep          6
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  2 in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    3) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    5) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    5) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    5) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    5) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    5) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    5) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    5) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    5) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    6) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    7) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   13    8) in timestep          6
 0.1979E-04 0.4679E+00 0.4679E+00 0.2522E-04 0.4787E+00 0.4487E+00 0.4721E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    8) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    9) in timestep          6
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13   12) in timestep          6
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                     7
(PID.TID 0000.0001) %MON seaice_time_sec              =   1.2600000000000E+04
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.7647792592897E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   2.1924912243453E-01
(PID.TID 0000.0001) %MON seaice_uice_mean             =   3.9908917415814E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   1.2504799299929E-01
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.7416572003942E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.1768454550770E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.8697965637756E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -3.0236929820826E-02
(PID.TID 0000.0001) %MON seaice_vice_sd               =   5.8110767908527E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   9.4547800883335E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9999339675307E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.3108694151116E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   2.0880881668223E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.4888729383884E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6243768951951E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9222966998908E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2037187517493E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   7.4453142764657E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  6.47549513E-01  1.96333553E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.20813127E+02  7.18284536E+01
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  1.31980526E-05  6.29943980E-01
 SEAICE_LSR (ipass=   1) iters,dV,Resid=   952  9.89652804E-13  5.92590968E-11
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  6.41729906E-01  2.01797699E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.22690524E+02  7.06612830E+01
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  1.18845977E-05  5.83147770E-01
 SEAICE_LSR (ipass=   2) iters,dV,Resid=  1000  9.76524417E-13  6.69839080E-11
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep          7
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  2 in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    1) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    1) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    1) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    1) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    1) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    1) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    1) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   33    1) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   34    1) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    4) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   33    5) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    8    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   33    6) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    8    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   14    7) in timestep          7
 0.3221E-04 0.4775E+00 0.4775E+00 0.2464E-04 0.4802E+00 0.4545E+00 0.4795E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    7) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    7    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   11    8) in timestep          7
 0.2575E-04 0.4752E+00 0.4753E+00 0.2335E-04 0.4786E+00 0.4499E+00 0.4772E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   27    8) in timestep          7
 0.2967E-04 0.4730E+00 0.4731E+00 0.2875E-04 0.4803E+00 0.4543E+00 0.4780E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   28    8) in timestep          7
 0.2482E-04 0.4759E+00 0.4760E+00 0.2906E-04 0.4773E+00 0.4528E+00 0.4768E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   33    8) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    7    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    8    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   12    9) in timestep          7
 0.2756E-04 0.4745E+00 0.4745E+00 0.3023E-04 0.4805E+00 0.4545E+00 0.4787E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   13    9) in timestep          7
 0.2658E-04 0.4775E+00 0.4776E+00 0.3606E-04 0.4796E+00 0.4571E+00 0.4792E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   25    9) in timestep          7
 0.2953E-04 0.4750E+00 0.4750E+00 0.3418E-04 0.4832E+00 0.4600E+00 0.4831E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   26    9) in timestep          7
 0.2489E-04 0.4757E+00 0.4757E+00 0.3495E-04 0.4813E+00 0.4598E+00 0.4811E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   33    9) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11   10) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   11   10) in timestep          7
 0.2229E-04 0.4718E+00 0.4719E+00 0.2913E-04 0.4782E+00 0.4504E+00 0.4752E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   10) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   17   10) in timestep          7
 0.2691E-04 0.4729E+00 0.4729E+00 0.4495E-04 0.4729E+00 0.4442E+00 0.4729E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   10) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   18   10) in timestep          7
 0.2704E-04 0.4730E+00 0.4730E+00 0.4519E-04 0.4731E+00 0.4442E+00 0.4730E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   10) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   19   10) in timestep          7
 0.2702E-04 0.4730E+00 0.4730E+00 0.4492E-04 0.4733E+00 0.4444E+00 0.4731E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24   10) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   24   10) in timestep          7
 0.2455E-04 0.4728E+00 0.4728E+00 0.3679E-04 0.4753E+00 0.4454E+00 0.4739E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   10) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   25   10) in timestep          7
 0.2655E-04 0.4719E+00 0.4719E+00 0.3056E-04 0.4820E+00 0.4523E+00 0.4778E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26   10) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   26   10) in timestep          7
 0.2302E-04 0.4723E+00 0.4723E+00 0.3085E-04 0.4781E+00 0.4486E+00 0.4752E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   11) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   15   11) in timestep          7
 0.2941E-04 0.4720E+00 0.4720E+00 0.3010E-04 0.4844E+00 0.4531E+00 0.4796E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   11) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   11) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   11) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   11) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   11) in timestep          7
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   20   11) in timestep          7
 0.2814E-04 0.4723E+00 0.4723E+00 0.3138E-04 0.4828E+00 0.4513E+00 0.4783E+00 0.4604E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                     8
(PID.TID 0000.0001) %MON seaice_time_sec              =   1.4400000000000E+04
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.7439459229558E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   2.4952657807566E-01
(PID.TID 0000.0001) %MON seaice_uice_mean             =   4.1271957722124E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   1.1438647387119E-01
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.7800629549017E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.1829226838691E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.8289935175931E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -2.9577891522348E-02
(PID.TID 0000.0001) %MON seaice_vice_sd               =   5.7608959505962E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   9.9795784030771E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9999100609788E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.2759194288882E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   2.1235674285611E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.5031158701423E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6242678683743E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9221719105387E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2025216914198E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   8.1663820353819E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  6.09136714E-01  2.11027205E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.16746423E+02  6.95977408E+01
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  1.14825411E-05  5.85098773E-01
 SEAICE_LSR (ipass=   1) iters,dV,Resid=  1302  9.97903149E-13  1.02684761E-10
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  5.93106012E-01  2.05396688E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.20851265E+02  6.83696000E+01
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  1.03813179E-05  5.30719729E-01
 SEAICE_LSR (ipass=   2) iters,dV,Resid=  1396  9.96307203E-13  1.24676895E-10
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep          8
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  2 in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    1) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    1) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    1) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    1) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    1) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    1) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    2) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    2) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    3) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    4) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    4) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    4) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    8    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    5) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    6) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    7) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    6    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    8) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (    9    9) in timestep          8
 0.2553E-04 0.4757E+00 0.4757E+00 0.2249E-04 0.4817E+00 0.4592E+00 0.4812E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   30    9) in timestep          8
 0.2915E-04 0.4758E+00 0.4758E+00 0.2606E-04 0.4770E+00 0.4483E+00 0.4764E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    9) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26   10) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   12   11) in timestep          8
 0.2928E-04 0.4705E+00 0.4705E+00 0.4084E-04 0.4743E+00 0.4485E+00 0.4723E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   13   11) in timestep          8
 0.3619E-04 0.4700E+00 0.4700E+00 0.3927E-04 0.4790E+00 0.4519E+00 0.4748E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   14   11) in timestep          8
 0.4209E-04 0.4698E+00 0.4698E+00 0.3767E-04 0.4828E+00 0.4546E+00 0.4779E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   22   11) in timestep          8
 0.3880E-04 0.4702E+00 0.4702E+00 0.4010E-04 0.4807E+00 0.4531E+00 0.4762E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   23   11) in timestep          8
 0.3404E-04 0.4704E+00 0.4704E+00 0.4164E-04 0.4774E+00 0.4506E+00 0.4739E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   24   11) in timestep          8
 0.2935E-04 0.4708E+00 0.4708E+00 0.4253E-04 0.4742E+00 0.4481E+00 0.4723E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   25   11) in timestep          8
 0.2534E-04 0.4712E+00 0.4712E+00 0.4252E-04 0.4712E+00 0.4455E+00 0.4712E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27   11) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   27   11) in timestep          8
 0.2555E-04 0.4705E+00 0.4705E+00 0.3173E-04 0.4759E+00 0.4482E+00 0.4729E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   12) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   14   12) in timestep          8
 0.2532E-04 0.4713E+00 0.4713E+00 0.4169E-04 0.4719E+00 0.4457E+00 0.4716E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   12) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   15   12) in timestep          8
 0.2600E-04 0.4714E+00 0.4714E+00 0.4301E-04 0.4721E+00 0.4459E+00 0.4717E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   12) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   16   12) in timestep          8
 0.2699E-04 0.4713E+00 0.4713E+00 0.4335E-04 0.4727E+00 0.4465E+00 0.4719E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   12) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   17   12) in timestep          8
 0.2718E-04 0.4713E+00 0.4713E+00 0.4348E-04 0.4728E+00 0.4466E+00 0.4720E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   12) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   18   12) in timestep          8
 0.2676E-04 0.4713E+00 0.4713E+00 0.4355E-04 0.4725E+00 0.4462E+00 0.4718E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22   12) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   22   12) in timestep          8
 0.2595E-04 0.4709E+00 0.4709E+00 0.3556E-04 0.4759E+00 0.4491E+00 0.4733E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   12) in timestep          8
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   25   12) in timestep          8
 0.2055E-04 0.4712E+00 0.4712E+00 0.3051E-04 0.4732E+00 0.4457E+00 0.4720E+00 0.4604E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                     9
(PID.TID 0000.0001) %MON seaice_time_sec              =   1.6200000000000E+04
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.7330113993649E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   2.7578879871184E-01
(PID.TID 0000.0001) %MON seaice_uice_mean             =   4.2400032890917E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   1.0562783766312E-01
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.8136434389677E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.1901481644885E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.7913695067768E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -2.8547247838630E-02
(PID.TID 0000.0001) %MON seaice_vice_sd               =   5.6910024273437E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   9.8483202600961E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9998862335943E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.2430856497082E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   2.1588044417322E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.5140237072094E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6241798921269E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9220601304366E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2013544930330E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   8.8348433710035E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 Compute Stats, Diag. #    146  SIarea    vol(   0 ): 2.780E+11  Parms: SM      M1      
 Compute Stats, Diag. #    149  SIheff    vol(   0 ): 2.780E+11  Parms: SM      M1      
 Compute Stats, Diag. #    151  SIhsnow   vol(   0 ): 2.780E+11  Parms: SM      M1      
 Compute Stats, Diag. #    163  SIuice    vol(   0 ): 2.760E+11  Parms: UU      M1      
 Compute Stats, Diag. #    164  SIvice    vol(   0 ): 2.700E+11  Parms: VV      M1      
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  5.54926457E-01  1.72691859E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.21168498E+02  6.68872813E+01
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  9.97760509E-06  5.18064758E-01
 SEAICE_LSR (ipass=   1) iters,dV,Resid=  1500  1.11697387E-11  1.98288649E-09
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  5.42968453E-01  1.66631934E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.27250679E+02  6.57590632E+01
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  9.04052485E-06  4.74575606E-01
 SEAICE_LSR (ipass=   2) iters,dV,Resid=  1500  1.50034221E-11  2.89309241E-09
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep          9
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  2 in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    7    1) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    8    1) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    2) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    3) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    3) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    3) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    3) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    4) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    4) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    4) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   33    4) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    5) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    6) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    7) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    8) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    8    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   33    9) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11   10) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   10) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   10) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   10) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   10) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   10) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21   10) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   10) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27   11) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10   12) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   10   12) in timestep          9
 0.2313E-04 0.4697E+00 0.4697E+00 0.3940E-04 0.4699E+00 0.4472E+00 0.4698E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   12) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   12) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   12) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   12) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   12) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22   12) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   13) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   14   13) in timestep          9
 0.2709E-04 0.4696E+00 0.4696E+00 0.4088E-04 0.4715E+00 0.4479E+00 0.4704E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   13) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   15   13) in timestep          9
 0.2919E-04 0.4694E+00 0.4694E+00 0.4064E-04 0.4728E+00 0.4490E+00 0.4709E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   13) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   16   13) in timestep          9
 0.3010E-04 0.4693E+00 0.4693E+00 0.4053E-04 0.4733E+00 0.4494E+00 0.4711E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   13) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   17   13) in timestep          9
 0.2991E-04 0.4693E+00 0.4693E+00 0.4062E-04 0.4732E+00 0.4494E+00 0.4711E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   13) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   18   13) in timestep          9
 0.2891E-04 0.4694E+00 0.4694E+00 0.4083E-04 0.4726E+00 0.4490E+00 0.4708E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   13) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   19   13) in timestep          9
 0.2705E-04 0.4695E+00 0.4695E+00 0.4113E-04 0.4715E+00 0.4484E+00 0.4704E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   13) in timestep          9
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   20   13) in timestep          9
 0.2487E-04 0.4697E+00 0.4697E+00 0.4125E-04 0.4697E+00 0.4469E+00 0.4697E+00 0.4604E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                    10
(PID.TID 0000.0001) %MON seaice_time_sec              =   1.8000000000000E+04
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.7299217759958E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   2.9846278270342E-01
(PID.TID 0000.0001) %MON seaice_uice_mean             =   4.3340885265237E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   9.8500666707424E-02
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.8543677570023E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.1969853117209E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.7611370983055E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -2.7355475114559E-02
(PID.TID 0000.0001) %MON seaice_vice_sd               =   5.6176565057413E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   9.6259655195999E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9998658897306E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.2132317089598E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   2.1887123036721E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.5095898819718E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6241073903120E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9219597283562E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.2002333693714E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   9.4827533208206E-04
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  5.14003468E-01  1.46717073E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.31140554E+02  6.40347154E+01
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  8.62493665E-06  4.67567814E-01
 SEAICE_LSR (ipass=   1) iters,dV,Resid=  1500  2.00340175E-10  5.26389754E-08
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  5.04617086E-01  1.43862717E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.37672046E+02  6.28745518E+01
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  7.84928074E-06  4.33878153E-01
 SEAICE_LSR (ipass=   2) iters,dV,Resid=  1500  2.55308399E-10  7.51401209E-08
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep         10
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  2 in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27   21) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    7    1) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    1) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    2) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    3) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    3) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    3) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    4) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    4) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    4) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    4) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    4) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   34    4) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    5) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    6    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    6) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   35    7) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    8    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   33    8) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    8    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   30    9) in timestep         10
 0.5829E-04 0.4748E+00 0.4748E+00 0.3148E-04 0.4818E+00 0.4591E+00 0.4813E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    9) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   26   10) in timestep         10
 0.7660E-04 0.4676E+00 0.4676E+00 0.5194E-04 0.4795E+00 0.4558E+00 0.4749E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   29   10) in timestep         10
 0.6478E-04 0.4675E+00 0.4675E+00 0.3247E-04 0.4851E+00 0.4576E+00 0.4802E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30   10) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27   11) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   13) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   13) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   13) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   13) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   13) in timestep         10
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   13) in timestep         10
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                    11
(PID.TID 0000.0001) %MON seaice_time_sec              =   1.9800000000000E+04
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.7321629191521E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   3.1289310016742E-01
(PID.TID 0000.0001) %MON seaice_uice_mean             =   4.4130726213752E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   9.2772315456347E-02
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.8990782156707E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.2034845668412E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.7334529944150E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -2.6123136143020E-02
(PID.TID 0000.0001) %MON seaice_vice_sd               =   5.5485935827896E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   9.3983522880382E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9998493898273E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.1854087621309E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   2.2156004513772E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.5155469510755E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6240488913442E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9218688025146E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.1991663013731E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   1.0081125651861E-03
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    1  4.81923212E-01  1.37544208E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.44784762E+02  6.07526285E+01
 SEAICE_LSR (ipass=   1) iters,dU,Resid=  1500  7.43371858E-06  4.30400896E-01
 SEAICE_LSR (ipass=   1) iters,dV,Resid=  1500  1.13592202E-09  4.02489514E-07
 SEAICE_LSR: Residual Initial ipass,Uice,Vice=    2  4.73413931E-01  1.38900070E-01
 SEAICE_LSR: Residual FrDrift U_fd,V_fd=  2.52370664E+02  5.94195483E+01
 SEAICE_LSR (ipass=   2) iters,dU,Resid=  1500  6.79935390E-06  4.03361492E-01
 SEAICE_LSR (ipass=   2) iters,dV,Resid=  1500  1.02788430E-09  3.82535427E-07
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  1 in timestep         11
(PID.TID 0000.0001) SEAICE_DO_RIDGING: Repeat ridging after iteration  2 in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13   21) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   21) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    1) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    2) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    2) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    3) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    3) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    3) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    3) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    3) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    7    4) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    4) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    4) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    5) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   34    6) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    7    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    7) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    8    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    8) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    7    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    8    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   31    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   32    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   33    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   34    9) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (    9   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (    9   10) in timestep         11
 0.4001E-04 0.4659E+00 0.4659E+00 0.4644E-04 0.4702E+00 0.4529E+00 0.4677E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   10   10) in timestep         11
 0.5588E-04 0.4659E+00 0.4659E+00 0.5203E-04 0.4729E+00 0.4551E+00 0.4695E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30   10) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   10   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   28   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   29   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   30   11) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   30   11) in timestep         11
 0.4030E-04 0.4661E+00 0.4661E+00 0.5394E-04 0.4679E+00 0.4506E+00 0.4667E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   11   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   12   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   13   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   14   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   22   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   22   12) in timestep         11
 0.8381E-04 0.4675E+00 0.4675E+00 0.5893E-04 0.4791E+00 0.4558E+00 0.4746E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   23   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   23   12) in timestep         11
 0.7746E-04 0.4666E+00 0.4666E+00 0.5942E-04 0.4779E+00 0.4561E+00 0.4734E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   24   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   25   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   26   12) in timestep         11
 0.6645E-04 0.4673E+00 0.4673E+00 0.4354E-04 0.4802E+00 0.4564E+00 0.4755E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   27   12) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   27   12) in timestep         11
 0.6709E-04 0.4666E+00 0.4666E+00 0.3374E-04 0.4846E+00 0.4574E+00 0.4787E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   15   13) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   16   13) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   17   13) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   18   13) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   19   13) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   20   13) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   20   13) in timestep         11
 0.6390E-04 0.4661E+00 0.4661E+00 0.4840E-04 0.4778E+00 0.4554E+00 0.4723E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   21   13) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   21   13) in timestep         11
 0.5019E-04 0.4668E+00 0.4668E+00 0.5724E-04 0.4722E+00 0.4530E+00 0.4693E+00 0.4604E+00
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k) >= hLimitNew(k) for category   1 at (   26   13) in timestep         11
(PID.TID 0000.0001) SEAICE_ITD_REMAP: hActual(k+1) <= hLimitNew(k) for category   1 at (   26   13) in timestep         11
 0.3431E-04 0.4668E+00 0.4668E+00 0.4208E-04 0.4704E+00 0.4520E+00 0.4683E+00 0.4604E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    12
(PID.TID 0000.0001) %MON time_secondsf                =   2.1600000000000E+04
(PID.TID 0000.0001) %MON dynstat_eta_max              =   1.4855271423662E-02
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -1.5547625271979E-02
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -6.8609663050809E-19
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   5.6185276903544E-03
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   3.4210904025025E-06
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   5.4694595665363E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   8.1797628424127E-02
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   3.2603530929361E-01
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   8.4661197148990E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.3392731599312E-04
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   2.2780617104059E-01
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -1.4793000868950E-01
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =  -3.2450632095700E-04
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   6.0970835295293E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   8.1836652323282E-05
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.6555698845343E-04
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -2.4393468746960E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.8006686469634E-21
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   1.8006622332191E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   3.4047422448573E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =  -1.5751098890513E+00
(PID.TID 0000.0001) %MON dynstat_theta_min            =  -1.6340295440875E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =  -1.6300996407746E+00
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   7.9149536676971E-03
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   2.7747256716343E-05
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.0000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.0000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.0000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.9690054439531E-01
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   8.2010221574612E-02
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   2.9800257921617E-02
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.9690054439531E-01
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   8.2010221574612E-02
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   8.7816487489057E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   1.5484032096270E-05
(PID.TID 0000.0001) %MON ke_max                       =   1.4564487757410E-01
(PID.TID 0000.0001) %MON ke_mean                      =   5.8130401708830E-02
(PID.TID 0000.0001) %MON ke_vol                       =   6.9500000000000E+11
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.4191202448594E-04
(PID.TID 0000.0001) %MON vort_r_max                   =   8.9657385579761E-05
(PID.TID 0000.0001) %MON vort_a_mean                  =  -6.5586096803907E-22
(PID.TID 0000.0001) %MON vort_a_sd                    =   1.5889649807104E-05
(PID.TID 0000.0001) %MON vort_p_mean                  =  -6.8228760045090E-22
(PID.TID 0000.0001) %MON vort_p_sd                    =   3.0669223294758E-05
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   2.0050663764520E-08
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   1.6750406018264E-20
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON seaice_tsnumber              =                    12
(PID.TID 0000.0001) %MON seaice_time_sec              =   2.1600000000000E+04
(PID.TID 0000.0001) %MON seaice_uice_max              =   6.7376158663174E-01
(PID.TID 0000.0001) %MON seaice_uice_min              =   3.1281567902083E-01
(PID.TID 0000.0001) %MON seaice_uice_mean             =   4.4795621668761E-01
(PID.TID 0000.0001) %MON seaice_uice_sd               =   8.8205811669317E-02
(PID.TID 0000.0001) %MON seaice_uice_del2             =   1.9456733274743E-04
(PID.TID 0000.0001) %MON seaice_vice_max              =   1.2096267141006E-01
(PID.TID 0000.0001) %MON seaice_vice_min              =  -1.7086775562559E-01
(PID.TID 0000.0001) %MON seaice_vice_mean             =  -2.4912457794878E-02
(PID.TID 0000.0001) %MON seaice_vice_sd               =   5.4870949009937E-02
(PID.TID 0000.0001) %MON seaice_vice_del2             =   9.3260878634334E-05
(PID.TID 0000.0001) %MON seaice_area_max              =   9.9998361535629E-01
(PID.TID 0000.0001) %MON seaice_area_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_area_mean             =   9.1588808978220E-01
(PID.TID 0000.0001) %MON seaice_area_sd               =   2.2416628337219E-01
(PID.TID 0000.0001) %MON seaice_area_del2             =   1.5373918821092E-03
(PID.TID 0000.0001) %MON seaice_heff_max              =   7.6240023929793E+00
(PID.TID 0000.0001) %MON seaice_heff_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_heff_mean             =   1.9217856601190E+00
(PID.TID 0000.0001) %MON seaice_heff_sd               =   2.1981559481990E+00
(PID.TID 0000.0001) %MON seaice_heff_del2             =   1.0620776124093E-03
(PID.TID 0000.0001) %MON seaice_hsnow_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON seaice_hsnow_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR SEAICE statistics
(PID.TID 0000.0001) // =======================================================
 Compute Stats, Diag. #    146  SIarea    vol(   0 ): 2.085E+11  Parms: SM      M1      
 Compute Stats, Diag. #    149  SIheff    vol(   0 ): 2.085E+11  Parms: SM      M1      
 Compute Stats, Diag. #    151  SIhsnow   vol(   0 ): 2.085E+11  Parms: SM      M1      
 Compute Stats, Diag. #    163  SIuice    vol(   0 ): 2.070E+11  Parms: UU      M1      
 Compute Stats, Diag. #    164  SIvice    vol(   0 ): 2.025E+11  Parms: VV      M1      
(PID.TID 0000.0001) DIAGSTATS_CLOSE_IO: close file: iceStDiag.0000000000.txt , unit=     9
(PID.TID 0000.0001) %CHECKPOINT        12 ckptA
(PID.TID 0000.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   30.714825600152835
(PID.TID 0000.0001)         System time:   7.0687003200873733E-002
(PID.TID 0000.0001)     Wall clock time:   31.406586170196533
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   2.8110000188462436E-002
(PID.TID 0000.0001)         System time:   5.2389999618753791E-003
(PID.TID 0000.0001)     Wall clock time:   4.3164968490600586E-002
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "THE_MAIN_LOOP          [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   30.686679877340794
(PID.TID 0000.0001)         System time:   6.5426003187894821E-002
(PID.TID 0000.0001)     Wall clock time:   31.363374948501587
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   6.1368998140096664E-002
(PID.TID 0000.0001)         System time:   2.9780999291688204E-002
(PID.TID 0000.0001)     Wall clock time:  0.69542980194091797
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   30.625275246798992
(PID.TID 0000.0001)         System time:   3.5635001957416534E-002
(PID.TID 0000.0001)     Wall clock time:   30.667905092239380
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN_DO_LOOP        [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   30.625183567404747
(PID.TID 0000.0001)         System time:   3.5632003098726273E-002
(PID.TID 0000.0001)     Wall clock time:   30.667811393737793
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "FORWARD_STEP        [MAIN_DO_LOOP]":
(PID.TID 0000.0001)           User time:   30.625001713633537
(PID.TID 0000.0001)         System time:   3.5628002136945724E-002
(PID.TID 0000.0001)     Wall clock time:   30.667621612548828
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "DO_STATEVARS_DIAGS  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.1797681450843811E-002
(PID.TID 0000.0001)         System time:   1.1004507541656494E-005
(PID.TID 0000.0001)     Wall clock time:   1.1827707290649414E-002
(PID.TID 0000.0001)          No. starts:          36
(PID.TID 0000.0001)           No. stops:          36
(PID.TID 0000.0001)   Seconds in section "LOAD_FIELDS_DRIVER  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   5.3895257413387299E-002
(PID.TID 0000.0001)         System time:   3.9950050413608551E-003
(PID.TID 0000.0001)     Wall clock time:   5.7893753051757812E-002
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "EXF_GETFORCING     [LOAD_FLDS_DRIVER]":
(PID.TID 0000.0001)           User time:   5.3537636995315552E-002
(PID.TID 0000.0001)         System time:   3.9510056376457214E-003
(PID.TID 0000.0001)     Wall clock time:   5.7507038116455078E-002
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "EXTERNAL_FLDS_LOAD [LOAD_FLDS_DRIVER]":
(PID.TID 0000.0001)           User time:   9.6499919891357422E-005
(PID.TID 0000.0001)         System time:   1.1004507541656494E-005
(PID.TID 0000.0001)     Wall clock time:   1.0085105895996094E-004
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.0074675083160400E-004
(PID.TID 0000.0001)         System time:   1.1000782251358032E-005
(PID.TID 0000.0001)     Wall clock time:   1.0728836059570312E-004
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   30.484348274767399
(PID.TID 0000.0001)         System time:   2.7557998895645142E-002
(PID.TID 0000.0001)     Wall clock time:   30.518909931182861
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "SEAICE_MODEL    [DO_OCEANIC_PHYS]":
(PID.TID 0000.0001)           User time:   30.472625687718391
(PID.TID 0000.0001)         System time:   2.7502000331878662E-002
(PID.TID 0000.0001)     Wall clock time:   30.507157087326050
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "SEAICE_DYNSOLVER   [SEAICE_MODEL]":
(PID.TID 0000.0001)           User time:   29.104806676506996
(PID.TID 0000.0001)         System time:   2.7307000011205673E-002
(PID.TID 0000.0001)     Wall clock time:   29.139119148254395
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.6848316192626953E-003
(PID.TID 0000.0001)         System time:   6.9998204708099365E-006
(PID.TID 0000.0001)     Wall clock time:   2.6991367340087891E-003
(PID.TID 0000.0001)          No. starts:          24
(PID.TID 0000.0001)           No. stops:          24
(PID.TID 0000.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.2188901901245117E-002
(PID.TID 0000.0001)         System time:   2.1997839212417603E-005
(PID.TID 0000.0001)     Wall clock time:   2.2220134735107422E-002
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "TRC_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.0275840759277344E-004
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   1.0466575622558594E-004
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "MONITOR             [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.9183368682861328E-003
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   4.9178600311279297E-003
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   3.5763025283813477E-002
(PID.TID 0000.0001)         System time:   3.9799995720386505E-003
(PID.TID 0000.0001)     Wall clock time:   3.9755105972290039E-002
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "DO_WRITE_PICKUP     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   7.7185630798339844E-003
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   7.7202320098876953E-003
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile communication statistics
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // o Tile number: 000001
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000002
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000003
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000004
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Thread number: 000001
(PID.TID 0000.0001) //            No. barriers =          57106
(PID.TID 0000.0001) //      Max. barrier spins =              1
(PID.TID 0000.0001) //      Min. barrier spins =              1
(PID.TID 0000.0001) //     Total barrier spins =          57106
(PID.TID 0000.0001) //      Avg. barrier spins =       1.00E+00
PROGRAM MAIN: Execution ended Normally
