(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) //                      MITgcm UV
(PID.TID 0000.0001) //                      =========
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // execution environment starting up...
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // MITgcmUV version:  checkpoint67x
(PID.TID 0000.0001) // Build user:        jm_c
(PID.TID 0000.0001) // Build host:        node384
(PID.TID 0000.0001) // Build date:        Wed Apr 14 22:38:34 EDT 2021
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Execution Environment parameter file "eedata"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Example "eedata" file
(PID.TID 0000.0001) ># Lines beginning "#" are comments
(PID.TID 0000.0001) ># nTx - No. threads per process in X
(PID.TID 0000.0001) ># nTy - No. threads per process in Y
(PID.TID 0000.0001) > &EEPARMS
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Note: Some systems use & as the
(PID.TID 0000.0001) ># namelist terminator. Other systems
(PID.TID 0000.0001) ># use a / character (as shown here).
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0000.0001) //                                  ( and "eedata"       )
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001)      nPx =    1 ; /* No. processes in X */
(PID.TID 0000.0001)      nPy =    1 ; /* No. processes in Y */
(PID.TID 0000.0001)      nSx =    2 ; /* No. tiles in X per process */
(PID.TID 0000.0001)      nSy =    4 ; /* No. tiles in Y per process */
(PID.TID 0000.0001)      sNx =   25 ; /* Tile size in X */
(PID.TID 0000.0001)      sNy =   25 ; /* Tile size in Y */
(PID.TID 0000.0001)      OLx =    3 ; /* Tile overlap distance in X */
(PID.TID 0000.0001)      OLy =    3 ; /* Tile overlap distance in Y */
(PID.TID 0000.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0000.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0000.0001)       Nr =   30 ; /* No. levels in the vertical   */
(PID.TID 0000.0001)       Nx =   50 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0000.0001)       Ny =  100 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0000.0001)   nTiles =    8 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0000.0001)   nProcs =    1 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0000.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0000.0001) usingMPI =    F ; /* Flag used to control whether MPI is in use */
(PID.TID 0000.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0000.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0000.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0000.0001) useCoupler=   F ; /* Flag used to control communications with   */
(PID.TID 0000.0001)                   /*  other model components, through a coupler */
(PID.TID 0000.0001) useNest2W_parent =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) useNest2W_child  =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0000.0001) printMapIncludesZeros=    F ; /* print zeros in Std.Output maps */
(PID.TID 0000.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Mapping of tiles to threads
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // -o- Thread   1, tiles (   1:   2,   1:   4)
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile connectvity table
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile number: 000001 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000007, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000004
(PID.TID 0000.0001) //       NORTH: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) // Tile number: 000002 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000008, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000004
(PID.TID 0000.0001) //       NORTH: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) // Tile number: 000003 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //        EAST: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //       SOUTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000005, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000003
(PID.TID 0000.0001) // Tile number: 000004 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //        EAST: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //       SOUTH: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000006, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000003
(PID.TID 0000.0001) // Tile number: 000005 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000006, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000003
(PID.TID 0000.0001) //        EAST: Tile = 000006, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000003
(PID.TID 0000.0001) //       SOUTH: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //       NORTH: Tile = 000007, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000004
(PID.TID 0000.0001) // Tile number: 000006 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000005, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000003
(PID.TID 0000.0001) //        EAST: Tile = 000005, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000003
(PID.TID 0000.0001) //       SOUTH: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //       NORTH: Tile = 000008, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000004
(PID.TID 0000.0001) // Tile number: 000007 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000008, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000004
(PID.TID 0000.0001) //        EAST: Tile = 000008, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000004
(PID.TID 0000.0001) //       SOUTH: Tile = 000005, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000003
(PID.TID 0000.0001) //       NORTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) // Tile number: 000008 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000007, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000004
(PID.TID 0000.0001) //        EAST: Tile = 000007, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000004
(PID.TID 0000.0001) //       SOUTH: Tile = 000006, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000003
(PID.TID 0000.0001) //       NORTH: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) ># | Model parameters |
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># Continuous equation parameters
(PID.TID 0000.0001) > &PARM01
(PID.TID 0000.0001) > Tref = 30*-1.9,
(PID.TID 0000.0001) > Sref = 30*34.4,
(PID.TID 0000.0001) > viscAz=1.E-3,
(PID.TID 0000.0001) > viscAh=600.0,
(PID.TID 0000.0001) > no_slip_sides=.FALSE.,
(PID.TID 0000.0001) > no_slip_bottom=.FALSE.,
(PID.TID 0000.0001) > diffKhT=100.0,
(PID.TID 0000.0001) >#- diffKzT unused when compiled with ALLOW_3D_DIFFKR
(PID.TID 0000.0001) >#diffKzT=5.E-5,
(PID.TID 0000.0001) > diffKhS=100.0,
(PID.TID 0000.0001) > diffKzS=5.E-5,
(PID.TID 0000.0001) > bottomDragQuadratic=2.5E-3,
(PID.TID 0000.0001) > eosType='JMD95Z',
(PID.TID 0000.0001) > HeatCapacity_Cp = 3974.0,
(PID.TID 0000.0001) > rhoConst=1030.,
(PID.TID 0000.0001) > gravity=9.81,
(PID.TID 0000.0001) > convertFW2Salt = 33.4,
(PID.TID 0000.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0000.0001) > exactConserv=.TRUE.,
(PID.TID 0000.0001) > hFacMin=0.10,
(PID.TID 0000.0001) > nonHydrostatic=.FALSE.,
(PID.TID 0000.0001) > useCDScheme = .TRUE.,
(PID.TID 0000.0001) >#ph(
(PID.TID 0000.0001) > implicitDiffusion=.TRUE.,
(PID.TID 0000.0001) ># ivdc_kappa = 7200.,
(PID.TID 0000.0001) > staggerTimeStep=.TRUE.,
(PID.TID 0000.0001) > vectorInvariantMomentum=.TRUE.,
(PID.TID 0000.0001) > nonlinFreeSurf=2,
(PID.TID 0000.0001) > hFacInf=0.05,
(PID.TID 0000.0001) > hFacSup=2.0,
(PID.TID 0000.0001) >#ph)
(PID.TID 0000.0001) > readBinaryPrec=64,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Elliptic solver parameters
(PID.TID 0000.0001) > &PARM02
(PID.TID 0000.0001) > cg2dMaxIters=1000,
(PID.TID 0000.0001) > cg2dTargetResidual=1.E-13,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Time stepping parameters
(PID.TID 0000.0001) > &PARM03
(PID.TID 0000.0001) > nIter0=8640,
(PID.TID 0000.0001) > nTimeSteps=10,
(PID.TID 0000.0001) > deltaT=1800.0,
(PID.TID 0000.0001) > abEps=0.1,
(PID.TID 0000.0001) > cAdjFreq = 1.,
(PID.TID 0000.0001) > tauCD = 400000.,
(PID.TID 0000.0001) > pChkptFreq=0.0,
(PID.TID 0000.0001) > chkptFreq=0.0,
(PID.TID 0000.0001) > dumpFreq=0.0,
(PID.TID 0000.0001) > taveFreq=0.0,
(PID.TID 0000.0001) > monitorFreq=0.,
(PID.TID 0000.0001) ># monitorSelect=2,
(PID.TID 0000.0001) ># adjMonitorFreq=1800.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Gridding parameters
(PID.TID 0000.0001) > &PARM04
(PID.TID 0000.0001) > usingSphericalPolarGrid=.TRUE.,
(PID.TID 0000.0001) > ygOrigin = -80.0,
(PID.TID 0000.0001) > delX=50*0.3,
(PID.TID 0000.0001) > delY=100*0.1,
(PID.TID 0000.0001) > delZ=30*30.0,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Input datasets
(PID.TID 0000.0001) > &PARM05
(PID.TID 0000.0001) > bathyFile='bathy.box',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0000.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0000.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0000.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0000.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0000.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0000.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0000.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.pkg"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Packages
(PID.TID 0000.0001) > &PACKAGES
(PID.TID 0000.0001) > useMNC=.FALSE.,
(PID.TID 0000.0001) > useShelfIce=.TRUE.,
(PID.TID 0000.0001) > useGrdchk=.TRUE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0000.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/gmredi               compiled but not used ( useGMRedi                = F )
 pkg/autodiff             compiled   and   used ( useAUTODIFF              = T )
 pkg/grdchk               compiled   and   used ( useGrdchk                = T )
 pkg/ctrl                 compiled   and   used ( useCTRL                  = T )
 pkg/shelfice             compiled   and   used ( useShelfIce              = T )
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled   and   used ( useGAD                   = T )
 pkg/mom_common           compiled   and   used ( momStepping              = T )
 pkg/mom_vecinv           compiled   and   used ( +vectorInvariantMomentum = T )
 pkg/mom_fluxform         compiled but not used ( & not vectorInvariantMom = F )
 pkg/cd_code              compiled   and   used ( useCDscheme              = T )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
 pkg/autodiff             compiled   and   used
 pkg/openad               compiled   and   used
 pkg/cost                 compiled   and   used
(PID.TID 0000.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  SHELFICE_READPARMS: opening data.shelfice
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.shelfice
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.shelfice"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ===================================
(PID.TID 0000.0001) ># | Parameters for SHELFICE package |
(PID.TID 0000.0001) ># ===================================
(PID.TID 0000.0001) > &SHELFICE_PARM01
(PID.TID 0000.0001) > SHELFICEboundaryLayer = .TRUE.,
(PID.TID 0000.0001) > SHELFICEtopoFile='icetopo.exp1',
(PID.TID 0000.0001) > SHELFICEloadAnomalyFile = 'phi0surf.exp1.jmd95z',
(PID.TID 0000.0001) > useISOMIPTD = .TRUE.,
(PID.TID 0000.0001) > no_slip_shelfice = .false.,
(PID.TID 0000.0001) > SHELFICEwriteState = .TRUE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  SHELFICE_READPARMS: finished reading data.shelfice
(PID.TID 0000.0001) AUTODIFF_READPARMS: opening data.autodiff
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.autodiff
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.autodiff"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># =========================
(PID.TID 0000.0001) ># pkg AUTODIFF parameters :
(PID.TID 0000.0001) ># =========================
(PID.TID 0000.0001) >#  inAdExact :: get an exact adjoint (no approximation) (def=.True.)
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > &AUTODIFF_PARM01
(PID.TID 0000.0001) ># inAdExact = .FALSE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) AUTODIFF_READPARMS: finished reading data.autodiff
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // AUTODIFF parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) inAdExact = /* get an exact adjoint (no approximation) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useApproxAdvectionInAdMode = /* approximate AD-advection */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useKPPinAdMode = /* use KPP in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useGMRediInAdMode = /* use GMRedi in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSEAICEinAdMode = /* use SEAICE in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useGGL90inAdMode = /* use GGL90 in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSALT_PLUMEinAdMode = /* use SALT_PLUME in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpAdVarExch = /* control adexch before dumpinp */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mon_AdVarExch = /* control adexch before monitor */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscFacInFw = /* viscosity factor for forward model */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscFacInAd = /* viscosity factor for adjoint */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SIregFacInAd = /* sea ice factor for adjoint model */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SIregFacInFw = /* sea ice factor for forward model */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001) OPTIM_READPARMS: opening data.optim
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.optim
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.optim"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) > &OPTIM
(PID.TID 0000.0001) > optimcycle=0,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) OPTIM_READPARMS: finished reading data.optim
(PID.TID 0000.0001) CTRL_READPARMS: opening data.ctrl
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.ctrl
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.ctrl"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># ECCO controlvariables
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &CTRL_NML
(PID.TID 0000.0001) > xx_theta_file      ='xx_theta',
(PID.TID 0000.0001) > xx_salt_file       ='xx_salt',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_hfluxstartdate1 = 19790101,
(PID.TID 0000.0001) > xx_hfluxstartdate2 = 000000,
(PID.TID 0000.0001) > xx_hfluxperiod     = 864000.0,
(PID.TID 0000.0001) > xx_hflux_file      = 'xx_hfl',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_sfluxstartdate1 = 19790101,
(PID.TID 0000.0001) > xx_sfluxstartdate2 = 000000,
(PID.TID 0000.0001) > xx_sfluxperiod     = 864000.0,
(PID.TID 0000.0001) > xx_sflux_file      = 'xx_sfl',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_tauustartdate1 = 19790101,
(PID.TID 0000.0001) > xx_tauustartdate2 = 000000,
(PID.TID 0000.0001) > xx_tauuperiod     = 864000.0,
(PID.TID 0000.0001) > xx_tauu_file      = 'xx_tauu',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_tauvstartdate1 = 19790101,
(PID.TID 0000.0001) > xx_tauvstartdate2 = 000000,
(PID.TID 0000.0001) > xx_tauvperiod     = 864000.0,
(PID.TID 0000.0001) > xx_tauv_file      = 'xx_tauv',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_atempstartdate1 = 19790101,
(PID.TID 0000.0001) > xx_atempstartdate2 = 000000,
(PID.TID 0000.0001) > xx_atempperiod     = 864000.0,
(PID.TID 0000.0001) > xx_atemp_file      = 'xx_atemp',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_aqhstartdate1 = 19790101,
(PID.TID 0000.0001) > xx_aqhstartdate2 = 000000,
(PID.TID 0000.0001) > xx_aqhperiod     = 864000.0,
(PID.TID 0000.0001) > xx_aqh_file      = 'xx_aqh',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_precipstartdate1 = 19790101,
(PID.TID 0000.0001) > xx_precipstartdate2 = 000000,
(PID.TID 0000.0001) > xx_precipperiod     = 864000.0,
(PID.TID 0000.0001) > xx_precip_file      = 'xx_precip',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_swdownstartdate1 = 19790101,
(PID.TID 0000.0001) > xx_swdownstartdate2 = 000000,
(PID.TID 0000.0001) > xx_swdownperiod     = 864000.0,
(PID.TID 0000.0001) > xx_swdown_file      = 'xx_swdown',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_uwindstartdate1 = 19790101,
(PID.TID 0000.0001) > xx_uwindstartdate2 = 000000,
(PID.TID 0000.0001) > xx_uwindperiod     = 864000.0,
(PID.TID 0000.0001) > xx_uwind_file      = 'xx_uwind',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_vwindstartdate1 = 19790101,
(PID.TID 0000.0001) > xx_vwindstartdate2 = 000000,
(PID.TID 0000.0001) > xx_vwindperiod     = 864000.0,
(PID.TID 0000.0001) > xx_vwind_file      = 'xx_vwind',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_sststartdate1 = 19790101,
(PID.TID 0000.0001) > xx_sststartdate2 = 000000,
(PID.TID 0000.0001) > xx_sstperiod     = 864000.0,
(PID.TID 0000.0001) > xx_sst_file      = 'xx_sst',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_sssstartdate1 = 19790101,
(PID.TID 0000.0001) > xx_sssstartdate2 = 000000,
(PID.TID 0000.0001) > xx_sssperiod     = 864000.0,
(PID.TID 0000.0001) > xx_sss_file      = 'xx_sss',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># names for ctrl_pack/unpack
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &CTRL_PACKNAMES
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) CTRL_READPARMS: finished reading data.ctrl
(PID.TID 0000.0001) COST_READPARMS: opening data.cost
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.cost
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.cost"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># ******************
(PID.TID 0000.0001) ># cost function
(PID.TID 0000.0001) ># ******************
(PID.TID 0000.0001) > &COST_NML
(PID.TID 0000.0001) >#revert to default 1 month
(PID.TID 0000.0001) ># lastinterval=7776000.,
(PID.TID 0000.0001) > mult_test=1.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) COST_READPARMS: finished reading data.cost
(PID.TID 0000.0001) GRDCHK_READPARMS: opening data.grdchk
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.grdchk
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.grdchk"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># *******************
(PID.TID 0000.0001) ># ECCO gradient check
(PID.TID 0000.0001) ># *******************
(PID.TID 0000.0001) > &GRDCHK_NML
(PID.TID 0000.0001) > grdchk_eps       = 1.d-2,
(PID.TID 0000.0001) >  iglopos         = 20,
(PID.TID 0000.0001) >  jglopos         = 24,
(PID.TID 0000.0001) >  kglopos         = 20,
(PID.TID 0000.0001) ># nbeg             = 1,
(PID.TID 0000.0001) > nstep            = 1,
(PID.TID 0000.0001) > nend             = 4,
(PID.TID 0000.0001) > grdchkvarindex   = 1,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GRDCHK_READPARMS: finished reading data.grdchk
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient check configuration  >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)   grdchkvarindex :                          1
(PID.TID 0000.0001)   eps:                              0.100E-01
(PID.TID 0000.0001)   First location:                           0
(PID.TID 0000.0001)   Last location:                            4
(PID.TID 0000.0001)   Increment:                                1
(PID.TID 0000.0001)   grdchkWhichProc:                          0
(PID.TID 0000.0001)   iLocTile =       1  ,    jLocTile =       1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient check configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SET_PARMS: done
(PID.TID 0000.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0000.0001) GAD_INIT_FIXED: GAD_OlMinSize=  1  0  1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // GAD parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) ctrl-wet 1:    nvarlength =       301350
(PID.TID 0000.0001) ctrl-wet 2: surface wet C =            0
(PID.TID 0000.0001) ctrl-wet 3: surface wet W =            0
(PID.TID 0000.0001) ctrl-wet 4: surface wet S =            0
(PID.TID 0000.0001) ctrl-wet 4a:surface wet V =            0
(PID.TID 0000.0001) ctrl-wet 5: 3D wet points =         7200
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     1           1
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     2           1
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     3           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     4           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     5           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     6           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     7           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     8           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     9           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    10           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    11           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    12           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    13           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    14           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    15           1
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    16           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    17           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    18           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    19           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    20           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    21           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    22           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    23           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    24           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    25           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    26           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    27           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    28           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    29           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    30           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    31           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    32           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    33           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    34           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    35           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    36           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    37           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    38           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    39           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    40           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    41           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    42           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    43           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    44           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    45           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    46           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    47           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    48           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    49           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    50           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    51           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    52           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    53           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    54           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    55           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    56           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    57           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    58           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    59           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    60           0
(PID.TID 0000.0001) ctrl-wet 7: flux         14400
(PID.TID 0000.0001) ctrl-wet 8: atmos        14400
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl-wet 13: global nvarlength for Nr =   30      301350
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    1           0           0           0           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    2           0           0           0           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    3           0           0           0           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    4           0           0           0           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    5           0           0           0           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    6           0           0           0           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    7        2989        2940        2928           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    8        3087        3038        3024           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    9        3185        3136        3120           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   10        3332        3283        3264           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   11        3430        3381        3360           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   12        3577        3528        3504           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   13        3675        3626        3600           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   14        3773        3724        3696           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   15        3920        3871        3840           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   16        4018        3969        3936           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   17        4165        4116        4080           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   18        4263        4214        4176           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   19        4361        4312        4272           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   20        4508        4459        4416           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   21        4606        4557        4512           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   22        4753        4704        4656           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   23        4851        4802        4752           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   24        4851        4802        4752           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   25        4851        4802        4752           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   26        4851        4802        4752           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   27        4851        4802        4752           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   28        4851        4802        4752           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   29        4851        4802        4752           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=   30        4851        4802        4752           0
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl_init_wet: no. of control variables:            3
(PID.TID 0000.0001) ctrl_init_wet: control vector length:          301350
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // control vector configuration  >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  Total number of ocean points per tile:
(PID.TID 0000.0001)  --------------------------------------
(PID.TID 0000.0001)  snx*sny*nr =    18750
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  Number of ocean points per tile:
(PID.TID 0000.0001)  --------------------------------
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0001 0001 007200 006792 006900
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0002 0001 007500 007075 007500
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0001 0002 013200 013032 012650
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0002 0002 013750 013575 013750
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0001 0003 014400 014400 013800
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0002 0003 015000 015000 015000
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0001 0004 014400 014400 013800
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0002 0004 015000 015000 015000
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  Initial state temperature contribution:
(PID.TID 0000.0001)  Control variable index:    0101
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  Initial state salinity contribution:
(PID.TID 0000.0001)  Control variable index:    0102
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // control vector configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) INI_CG2D: CG2D normalisation factor =  1.0404366262810520E-03
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model configuration
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0000.0001)               'OCEANIC'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0000.0001)    30 @ -1.900000000000000E+00              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sRef =   /* Reference salinity profile ( g/kg ) */
(PID.TID 0000.0001)    30 @  3.440000000000000E+01              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 6.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0000.0001)    30 @  1.000000000000000E-03              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomVisc_pCell = /* Partial-cell in bottom Visc. BC */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0000.0001)                 2.500000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectBotDragQuadr = /* select quadratic bottom drag options */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0000.0001)    30 @  0.000000000000000E+00              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0000.0001)    30 @  5.000000000000000E-05              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                -2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0000.0001)                -8.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 1.000000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosType =  /* Type of Equation of State */
(PID.TID 0000.0001)               'JMD95Z'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosRefP0 = /* Reference atmospheric pressure for EOS ( Pa ) */
(PID.TID 0000.0001)                 1.013250000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectP_inEOS_Zc = /* select pressure to use in EOS (0,1,2,3) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= -g*rhoConst*z ; 1= pRef (from tRef,sRef); 2= Hyd P ; 3= Hyd+NH P
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) surf_pRef = /* Surface reference pressure ( Pa ) */
(PID.TID 0000.0001)                 1.013250000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0000.0001)                 3.974000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.030000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0000.0001)    30 @  1.000000000000000E+00              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0000.0001)    31 @  1.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 1.030000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacC = /* gravity factor (vs surf.) @ cell-Center (-) */
(PID.TID 0000.0001)    30 @  1.000000000000000E+00              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacF = /* gravity factor (vs surf.) @ W-Interface (-) */
(PID.TID 0000.0001)    31 @  1.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0000.0001)                 8.616400000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0000.0001)                 7.292123516990375E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0000.0001)                 9.999999999999999E-12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicDiv2DFlow =  /* Barot. Flow Div. implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exactConserv =  /* Exact Volume Conservation on/off flag*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 5.000000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(g/kg)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(g/kg)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(g/kg)*/
(PID.TID 0000.0001)                 3.340000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectImplicitDrag= /* Implicit bot Drag options (0,1,2)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= Expl. ; 1= Impl. on provis. Vel ; 2= Fully Impl (with surf.P)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) metricTerms =  /* metric-Terms on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3dCoriolis = /* 3-D Coriolis on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriScheme= /* Scheme selector for Coriolis-Term */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : original discretization (simple averaging, no hFac)
(PID.TID 0000.0001)    = 1 : Wet-point averaging (Jamar & Ozer 1986)
(PID.TID 0000.0001)    = 2 : hFac weighted average (Angular Mom. conserving)
(PID.TID 0000.0001)    = 3 : energy conserving scheme using hFac weighted average
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useAbsVorticity= /* V.I Works with f+zeta in Coriolis */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectVortScheme= /* V.I Scheme selector for Vorticity-Term */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)    = 0 : enstrophy (Shallow-Water Eq.) conserving scheme by Sadourny, JAS 75
(PID.TID 0000.0001)    = 1 : same as 0 with modified hFac
(PID.TID 0000.0001)    = 2 : energy conserving scheme (used by Sadourny in JAS 75 paper)
(PID.TID 0000.0001)    = 3 : energy (general) and enstrophy (2D, nonDiv.) conserving scheme
(PID.TID 0000.0001)          from Sadourny (Burridge & Haseler, ECMWF Rep.4, 1977)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartMomAdv= /* V.I Non-linear terms Jamart flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindVorticity= /* V.I Upwind bias vorticity flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) highOrderVorticity= /* V.I High order vort. advect. flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindShear= /* V.I Upwind vertical Shear advection flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectKEscheme= /* V.I Kinetic Energy scheme selector */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momTidalForcing = /* Momentum Tidal forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0000.0001)                      32
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  rwSuffixType =   /* select format of mds file suffix */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : myIter (I10.10) ;   = 1 : 100*myTime (100th sec) ;
(PID.TID 0000.0001)    = 2 : myTime (seconds);   = 3 : myTime/360 (10th of hr);
(PID.TID 0000.0001)    = 4 : myTime/3600 (hours)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0000.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0000.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0000.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0000.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0000.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0000.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0000.0001) debugLevel =  /* select debug printing level */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  plotLevel =  /* select PLOT_FIELD printing level */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0000.0001)                    1000
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dChkResFreq =   /* 2d con. grad convergence test frequency */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0000.0001)                 1.000000000000000E-13
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0000.0001)                 1.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0000.0001)                 1.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0000.0001)    30 @  1.800000000000000E+03              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0000.0001)                 1.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) applyExchUV_early = /* Apply EXCH to U,V earlier in time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauCD =   /* CD coupling time-scale ( s ) */
(PID.TID 0000.0001)                 4.000000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rCD =   /* Normalised CD coupling parameter */
(PID.TID 0000.0001)                 9.955000000000001E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) epsAB_CD = /* AB-2 stabilizing weight for CD-scheme*/
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0000.0001)                    8640
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0000.0001)                      10
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0000.0001)                    8650
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0000.0001)                 1.555200000000000E+07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0000.0001)                 1.557000000000000E+07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       3
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0000.0001)                 1.800000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMin4hFacEdges = /* set hFacW,S as minimum of adjacent hFacC factor */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interViscAr_pCell = /* account for partial-cell in interior vert. viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interDiffKr_pCell = /* account for partial-cell in interior vert. diffusion */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pCellMix_select = /* option to enhance mixing near surface & bottom */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) seaLev_Z =  /* reference height of sea-level [m] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) top_Pres =  /* reference pressure at the top [Pa] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0000.0001)                 9.708737864077669E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0000.0001)                 1.030000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0000.0001)                 1.500000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)    29 @  3.000000000000000E+01,             /* K =  2: 30 */
(PID.TID 0000.0001)                 1.500000000000000E+01       /* K = 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0000.0001)    30 @  3.000000000000000E+01              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    50 @  3.000000000000000E-01              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)   100 @  1.000000000000000E-01              /* J =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                -8.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0000.0001)                 6.370000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 1.500000000000001E-01,      /* I =  1 */
(PID.TID 0000.0001)                 4.500000000000001E-01,      /* I =  2 */
(PID.TID 0000.0001)                 7.500000000000002E-01,      /* I =  3 */
(PID.TID 0000.0001)                 1.050000000000000E+00,      /* I =  4 */
(PID.TID 0000.0001)                 1.350000000000000E+00,      /* I =  5 */
(PID.TID 0000.0001)                 1.650000000000000E+00,      /* I =  6 */
(PID.TID 0000.0001)                 1.950000000000000E+00,      /* I =  7 */
(PID.TID 0000.0001)                 2.250000000000000E+00,      /* I =  8 */
(PID.TID 0000.0001)                 2.550000000000000E+00,      /* I =  9 */
(PID.TID 0000.0001)                 2.850000000000000E+00,      /* I = 10 */
(PID.TID 0000.0001)                 3.149999999999999E+00,      /* I = 11 */
(PID.TID 0000.0001)                 3.449999999999999E+00,      /* I = 12 */
(PID.TID 0000.0001)                 3.749999999999999E+00,      /* I = 13 */
(PID.TID 0000.0001)                 4.049999999999999E+00,      /* I = 14 */
(PID.TID 0000.0001)                 4.350000000000000E+00,      /* I = 15 */
(PID.TID 0000.0001)                 4.649999999999999E+00,      /* I = 16 */
(PID.TID 0000.0001)                 4.949999999999999E+00,      /* I = 17 */
(PID.TID 0000.0001)                 5.249999999999998E+00,      /* I = 18 */
(PID.TID 0000.0001)                 5.549999999999999E+00,      /* I = 19 */
(PID.TID 0000.0001)                 5.849999999999998E+00,      /* I = 20 */
(PID.TID 0000.0001)                 6.149999999999999E+00,      /* I = 21 */
(PID.TID 0000.0001)                 6.449999999999998E+00,      /* I = 22 */
(PID.TID 0000.0001)                 6.749999999999998E+00,      /* I = 23 */
(PID.TID 0000.0001)                 7.049999999999997E+00,      /* I = 24 */
(PID.TID 0000.0001)                 7.349999999999997E+00,      /* I = 25 */
(PID.TID 0000.0001)                 7.649999999999997E+00,      /* I = 26 */
(PID.TID 0000.0001)                 7.949999999999998E+00,      /* I = 27 */
(PID.TID 0000.0001)                 8.249999999999998E+00,      /* I = 28 */
(PID.TID 0000.0001)                 8.549999999999999E+00,      /* I = 29 */
(PID.TID 0000.0001)                 8.850000000000000E+00,      /* I = 30 */
(PID.TID 0000.0001)                 9.150000000000000E+00,      /* I = 31 */
(PID.TID 0000.0001)                 9.450000000000001E+00,      /* I = 32 */
(PID.TID 0000.0001)                 9.750000000000002E+00,      /* I = 33 */
(PID.TID 0000.0001)                 1.005000000000000E+01,      /* I = 34 */
(PID.TID 0000.0001)                 1.035000000000000E+01,      /* I = 35 */
(PID.TID 0000.0001)                 1.065000000000000E+01,      /* I = 36 */
(PID.TID 0000.0001)                 1.095000000000001E+01,      /* I = 37 */
(PID.TID 0000.0001)                 1.125000000000001E+01,      /* I = 38 */
(PID.TID 0000.0001)                 1.155000000000000E+01,      /* I = 39 */
(PID.TID 0000.0001)                 1.185000000000001E+01,      /* I = 40 */
(PID.TID 0000.0001)                 1.215000000000001E+01,      /* I = 41 */
(PID.TID 0000.0001)                 1.245000000000001E+01,      /* I = 42 */
(PID.TID 0000.0001)                 1.275000000000001E+01,      /* I = 43 */
(PID.TID 0000.0001)                 1.305000000000001E+01,      /* I = 44 */
(PID.TID 0000.0001)                 1.335000000000001E+01,      /* I = 45 */
(PID.TID 0000.0001)                 1.365000000000001E+01,      /* I = 46 */
(PID.TID 0000.0001)                 1.395000000000001E+01,      /* I = 47 */
(PID.TID 0000.0001)                 1.425000000000001E+01,      /* I = 48 */
(PID.TID 0000.0001)                 1.455000000000001E+01,      /* I = 49 */
(PID.TID 0000.0001)                 1.485000000000001E+01       /* I = 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                -7.995000000000000E+01,      /* J =  1 */
(PID.TID 0000.0001)                -7.985000000000001E+01,      /* J =  2 */
(PID.TID 0000.0001)                -7.975000000000001E+01,      /* J =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                -7.775000000000013E+01,      /* J = 23 */
(PID.TID 0000.0001)                -7.765000000000013E+01,      /* J = 24 */
(PID.TID 0000.0001)                -7.755000000000014E+01,      /* J = 25 */
(PID.TID 0000.0001)                -7.745000000000014E+01,      /* J = 26 */
(PID.TID 0000.0001)                -7.735000000000015E+01,      /* J = 27 */
(PID.TID 0000.0001)                -7.725000000000016E+01,      /* J = 28 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                -7.525000000000027E+01,      /* J = 48 */
(PID.TID 0000.0001)                -7.515000000000028E+01,      /* J = 49 */
(PID.TID 0000.0001)                -7.505000000000028E+01,      /* J = 50 */
(PID.TID 0000.0001)                -7.495000000000029E+01,      /* J = 51 */
(PID.TID 0000.0001)                -7.485000000000029E+01,      /* J = 52 */
(PID.TID 0000.0001)                -7.475000000000030E+01,      /* J = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                -7.275000000000041E+01,      /* J = 73 */
(PID.TID 0000.0001)                -7.265000000000042E+01,      /* J = 74 */
(PID.TID 0000.0001)                -7.255000000000042E+01,      /* J = 75 */
(PID.TID 0000.0001)                -7.245000000000043E+01,      /* J = 76 */
(PID.TID 0000.0001)                -7.235000000000043E+01,      /* J = 77 */
(PID.TID 0000.0001)                -7.225000000000044E+01,      /* J = 78 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                -7.025000000000055E+01,      /* J = 98 */
(PID.TID 0000.0001)                -7.015000000000056E+01,      /* J = 99 */
(PID.TID 0000.0001)                -7.005000000000057E+01       /* J =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0000.0001)                -1.500000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)                -4.500000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -7.500000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                -1.050000000000000E+02,      /* K =  4 */
(PID.TID 0000.0001)                -1.350000000000000E+02,      /* K =  5 */
(PID.TID 0000.0001)                -1.650000000000000E+02,      /* K =  6 */
(PID.TID 0000.0001)                -1.950000000000000E+02,      /* K =  7 */
(PID.TID 0000.0001)                -2.250000000000000E+02,      /* K =  8 */
(PID.TID 0000.0001)                -2.550000000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                -2.850000000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                -3.150000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -3.450000000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                -3.750000000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                -4.050000000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                -4.350000000000000E+02,      /* K = 15 */
(PID.TID 0000.0001)                -4.650000000000000E+02,      /* K = 16 */
(PID.TID 0000.0001)                -4.950000000000000E+02,      /* K = 17 */
(PID.TID 0000.0001)                -5.250000000000000E+02,      /* K = 18 */
(PID.TID 0000.0001)                -5.550000000000000E+02,      /* K = 19 */
(PID.TID 0000.0001)                -5.850000000000000E+02,      /* K = 20 */
(PID.TID 0000.0001)                -6.150000000000000E+02,      /* K = 21 */
(PID.TID 0000.0001)                -6.450000000000000E+02,      /* K = 22 */
(PID.TID 0000.0001)                -6.750000000000000E+02,      /* K = 23 */
(PID.TID 0000.0001)                -7.050000000000000E+02,      /* K = 24 */
(PID.TID 0000.0001)                -7.350000000000000E+02,      /* K = 25 */
(PID.TID 0000.0001)                -7.650000000000000E+02,      /* K = 26 */
(PID.TID 0000.0001)                -7.950000000000000E+02,      /* K = 27 */
(PID.TID 0000.0001)                -8.250000000000000E+02,      /* K = 28 */
(PID.TID 0000.0001)                -8.550000000000000E+02,      /* K = 29 */
(PID.TID 0000.0001)                -8.850000000000000E+02       /* K = 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -3.000000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                -6.000000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                -9.000000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                -1.200000000000000E+02,      /* K =  5 */
(PID.TID 0000.0001)                -1.500000000000000E+02,      /* K =  6 */
(PID.TID 0000.0001)                -1.800000000000000E+02,      /* K =  7 */
(PID.TID 0000.0001)                -2.100000000000000E+02,      /* K =  8 */
(PID.TID 0000.0001)                -2.400000000000000E+02,      /* K =  9 */
(PID.TID 0000.0001)                -2.700000000000000E+02,      /* K = 10 */
(PID.TID 0000.0001)                -3.000000000000000E+02,      /* K = 11 */
(PID.TID 0000.0001)                -3.300000000000000E+02,      /* K = 12 */
(PID.TID 0000.0001)                -3.600000000000000E+02,      /* K = 13 */
(PID.TID 0000.0001)                -3.900000000000000E+02,      /* K = 14 */
(PID.TID 0000.0001)                -4.200000000000000E+02,      /* K = 15 */
(PID.TID 0000.0001)                -4.500000000000000E+02,      /* K = 16 */
(PID.TID 0000.0001)                -4.800000000000000E+02,      /* K = 17 */
(PID.TID 0000.0001)                -5.100000000000000E+02,      /* K = 18 */
(PID.TID 0000.0001)                -5.400000000000000E+02,      /* K = 19 */
(PID.TID 0000.0001)                -5.700000000000000E+02,      /* K = 20 */
(PID.TID 0000.0001)                -6.000000000000000E+02,      /* K = 21 */
(PID.TID 0000.0001)                -6.300000000000000E+02,      /* K = 22 */
(PID.TID 0000.0001)                -6.600000000000000E+02,      /* K = 23 */
(PID.TID 0000.0001)                -6.900000000000000E+02,      /* K = 24 */
(PID.TID 0000.0001)                -7.200000000000000E+02,      /* K = 25 */
(PID.TID 0000.0001)                -7.500000000000000E+02,      /* K = 26 */
(PID.TID 0000.0001)                -7.800000000000000E+02,      /* K = 27 */
(PID.TID 0000.0001)                -8.100000000000000E+02,      /* K = 28 */
(PID.TID 0000.0001)                -8.400000000000000E+02,      /* K = 29 */
(PID.TID 0000.0001)                -8.700000000000000E+02,      /* K = 30 */
(PID.TID 0000.0001)                -9.000000000000000E+02       /* K = 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0000.0001)    30 @  1.000000000000000E+00              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0000.0001)    31 @  1.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rVel2wUnit = /* convert units: rVel -> wSpeed (=1 if z-coord)*/
(PID.TID 0000.0001)    31 @  1.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) wUnit2rVel = /* convert units: wSpeed -> rVel (=1 if z-coord)*/
(PID.TID 0000.0001)    31 @  1.000000000000000E+00              /* K =  1: 31 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0000.0001)    30 @  0.000000000000000E+00              /* K =  1: 30 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    50 @  5.820391490558873E+03              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.820391490558873E+03,      /* J =  1 */
(PID.TID 0000.0001)                 5.877701765291693E+03,      /* J =  2 */
(PID.TID 0000.0001)                 5.934994135525598E+03,      /* J =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.076813247621209E+03,      /* J = 23 */
(PID.TID 0000.0001)                 7.133689397375062E+03,      /* J = 24 */
(PID.TID 0000.0001)                 7.190543816673854E+03,      /* J = 25 */
(PID.TID 0000.0001)                 7.247376332329164E+03,      /* J = 26 */
(PID.TID 0000.0001)                 7.304186771219292E+03,      /* J = 27 */
(PID.TID 0000.0001)                 7.360974960289787E+03,      /* J = 28 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.491800393599013E+03,      /* J = 48 */
(PID.TID 0000.0001)                 8.548081485571185E+03,      /* J = 49 */
(PID.TID 0000.0001)                 8.604336538604706E+03,      /* J = 50 */
(PID.TID 0000.0001)                 8.660565381336924E+03,      /* J = 51 */
(PID.TID 0000.0001)                 8.716767842485038E+03,      /* J = 52 */
(PID.TID 0000.0001)                 8.772943750846602E+03,      /* J = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.890622914885220E+03,      /* J = 73 */
(PID.TID 0000.0001)                 9.946201814818334E+03,      /* J = 74 */
(PID.TID 0000.0001)                 1.000175041689580E+04,      /* J = 75 */
(PID.TID 0000.0001)                 1.005726855190695E+04,      /* J = 76 */
(PID.TID 0000.0001)                 1.011275605073392E+04,      /* J = 77 */
(PID.TID 0000.0001)                 1.016821274435215E+04,      /* J = 78 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.127061807330668E+04,      /* J = 98 */
(PID.TID 0000.0001)                 1.132538898360582E+04,      /* J = 99 */
(PID.TID 0000.0001)                 1.138012539480601E+04       /* J =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    50 @  1.111774733520388E+04              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)   100 @  1.111774733520388E+04              /* J =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    50 @  5.791729693558576E+03              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.791729693558576E+03,      /* J =  1 */
(PID.TID 0000.0001)                 5.849048855077854E+03,      /* J =  2 */
(PID.TID 0000.0001)                 5.906350199379950E+03,      /* J =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.048367077963129E+03,      /* J = 23 */
(PID.TID 0000.0001)                 7.105254027978150E+03,      /* J = 24 */
(PID.TID 0000.0001)                 7.162119334157175E+03,      /* J = 25 */
(PID.TID 0000.0001)                 7.218962823278620E+03,      /* J = 26 */
(PID.TID 0000.0001)                 7.275784322187361E+03,      /* J = 27 */
(PID.TID 0000.0001)                 7.332583657795255E+03,      /* J = 28 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.463650136583461E+03,      /* J = 48 */
(PID.TID 0000.0001)                 8.519944183739161E+03,      /* J = 49 */
(PID.TID 0000.0001)                 8.576212277667308E+03,      /* J = 50 */
(PID.TID 0000.0001)                 8.632454246965530E+03,      /* J = 51 */
(PID.TID 0000.0001)                 8.688669920311038E+03,      /* J = 52 */
(PID.TID 0000.0001)                 8.744859126461139E+03,      /* J = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.862822156126382E+03,      /* J = 73 */
(PID.TID 0000.0001)                 9.918416141504455E+03,      /* J = 74 */
(PID.TID 0000.0001)                 9.973979913666863E+03,      /* J = 75 */
(PID.TID 0000.0001)                 1.002951330335672E+04,      /* J = 76 */
(PID.TID 0000.0001)                 1.008501614140969E+04,      /* J = 77 */
(PID.TID 0000.0001)                 1.014048825875450E+04,      /* J = 78 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.124321973312895E+04,      /* J = 98 */
(PID.TID 0000.0001)                 1.129800783041847E+04,      /* J = 99 */
(PID.TID 0000.0001)                 1.135276151201679E+04       /* J =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    50 @  1.111774733520388E+04              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)   100 @  1.111774733520388E+04              /* J =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    50 @  5.820391490558873E+03              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.820391490558873E+03,      /* J =  1 */
(PID.TID 0000.0001)                 5.877701765291693E+03,      /* J =  2 */
(PID.TID 0000.0001)                 5.934994135525598E+03,      /* J =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.076813247621209E+03,      /* J = 23 */
(PID.TID 0000.0001)                 7.133689397375062E+03,      /* J = 24 */
(PID.TID 0000.0001)                 7.190543816673854E+03,      /* J = 25 */
(PID.TID 0000.0001)                 7.247376332329164E+03,      /* J = 26 */
(PID.TID 0000.0001)                 7.304186771219292E+03,      /* J = 27 */
(PID.TID 0000.0001)                 7.360974960289787E+03,      /* J = 28 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.491800393599013E+03,      /* J = 48 */
(PID.TID 0000.0001)                 8.548081485571185E+03,      /* J = 49 */
(PID.TID 0000.0001)                 8.604336538604706E+03,      /* J = 50 */
(PID.TID 0000.0001)                 8.660565381336924E+03,      /* J = 51 */
(PID.TID 0000.0001)                 8.716767842485038E+03,      /* J = 52 */
(PID.TID 0000.0001)                 8.772943750846602E+03,      /* J = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.890622914885220E+03,      /* J = 73 */
(PID.TID 0000.0001)                 9.946201814818334E+03,      /* J = 74 */
(PID.TID 0000.0001)                 1.000175041689580E+04,      /* J = 75 */
(PID.TID 0000.0001)                 1.005726855190695E+04,      /* J = 76 */
(PID.TID 0000.0001)                 1.011275605073392E+04,      /* J = 77 */
(PID.TID 0000.0001)                 1.016821274435215E+04,      /* J = 78 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.127061807330668E+04,      /* J = 98 */
(PID.TID 0000.0001)                 1.132538898360582E+04,      /* J = 99 */
(PID.TID 0000.0001)                 1.138012539480601E+04       /* J =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    50 @  1.111774733520388E+04              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)   100 @  1.111774733520388E+04              /* J =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    50 @  5.791729693558576E+03              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 5.791729693558576E+03,      /* J =  1 */
(PID.TID 0000.0001)                 5.849048855077854E+03,      /* J =  2 */
(PID.TID 0000.0001)                 5.906350199379950E+03,      /* J =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.048367077963129E+03,      /* J = 23 */
(PID.TID 0000.0001)                 7.105254027978150E+03,      /* J = 24 */
(PID.TID 0000.0001)                 7.162119334157175E+03,      /* J = 25 */
(PID.TID 0000.0001)                 7.218962823278620E+03,      /* J = 26 */
(PID.TID 0000.0001)                 7.275784322187361E+03,      /* J = 27 */
(PID.TID 0000.0001)                 7.332583657795255E+03,      /* J = 28 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 8.463650136583461E+03,      /* J = 48 */
(PID.TID 0000.0001)                 8.519944183739161E+03,      /* J = 49 */
(PID.TID 0000.0001)                 8.576212277667308E+03,      /* J = 50 */
(PID.TID 0000.0001)                 8.632454246965530E+03,      /* J = 51 */
(PID.TID 0000.0001)                 8.688669920311038E+03,      /* J = 52 */
(PID.TID 0000.0001)                 8.744859126461139E+03,      /* J = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.862822156126382E+03,      /* J = 73 */
(PID.TID 0000.0001)                 9.918416141504455E+03,      /* J = 74 */
(PID.TID 0000.0001)                 9.973979913666863E+03,      /* J = 75 */
(PID.TID 0000.0001)                 1.002951330335672E+04,      /* J = 76 */
(PID.TID 0000.0001)                 1.008501614140969E+04,      /* J = 77 */
(PID.TID 0000.0001)                 1.014048825875450E+04,      /* J = 78 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.124321973312895E+04,      /* J = 98 */
(PID.TID 0000.0001)                 1.129800783041847E+04,      /* J = 99 */
(PID.TID 0000.0001)                 1.135276151201679E+04       /* J =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    50 @  1.111774733520388E+04              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)   100 @  1.111774733520388E+04              /* J =  1:100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    50 @  6.470963377080289E+07              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 6.470963377080289E+07,      /* J =  1 */
(PID.TID 0000.0001)                 6.534679484410103E+07,      /* J =  2 */
(PID.TID 0000.0001)                 6.598375685977946E+07,      /* J =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.867821163932663E+07,      /* J = 23 */
(PID.TID 0000.0001)                 7.931054622142966E+07,      /* J = 24 */
(PID.TID 0000.0001)                 7.994263920984066E+07,      /* J = 25 */
(PID.TID 0000.0001)                 8.057448867913349E+07,      /* J = 26 */
(PID.TID 0000.0001)                 8.120609270456599E+07,      /* J = 27 */
(PID.TID 0000.0001)                 8.183744936212724E+07,      /* J = 28 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.440967921416213E+07,      /* J = 48 */
(PID.TID 0000.0001)                 9.503539809503193E+07,      /* J = 49 */
(PID.TID 0000.0001)                 9.566082748163140E+07,      /* J = 50 */
(PID.TID 0000.0001)                 9.628596546870193E+07,      /* J = 51 */
(PID.TID 0000.0001)                 9.691081015209354E+07,      /* J = 52 */
(PID.TID 0000.0001)                 9.753535962826957E+07,      /* J = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.099614325987181E+08,      /* J = 73 */
(PID.TID 0000.0001)                 1.105793446869293E+08,      /* J = 74 */
(PID.TID 0000.0001)                 1.111969199312560E+08,      /* J = 75 */
(PID.TID 0000.0001)                 1.118141564504991E+08,      /* J = 76 */
(PID.TID 0000.0001)                 1.124310523644033E+08,      /* J = 77 */
(PID.TID 0000.0001)                 1.130476057938686E+08,      /* J = 78 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.253038681465363E+08,      /* J = 98 */
(PID.TID 0000.0001)                 1.259127972112936E+08,      /* J = 99 */
(PID.TID 0000.0001)                 1.265213427237870E+08       /* J =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    50 @  6.470963377080289E+07              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 6.470963377080289E+07,      /* J =  1 */
(PID.TID 0000.0001)                 6.534679484410103E+07,      /* J =  2 */
(PID.TID 0000.0001)                 6.598375685977946E+07,      /* J =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.867821163932663E+07,      /* J = 23 */
(PID.TID 0000.0001)                 7.931054622142966E+07,      /* J = 24 */
(PID.TID 0000.0001)                 7.994263920984066E+07,      /* J = 25 */
(PID.TID 0000.0001)                 8.057448867913349E+07,      /* J = 26 */
(PID.TID 0000.0001)                 8.120609270456599E+07,      /* J = 27 */
(PID.TID 0000.0001)                 8.183744936212724E+07,      /* J = 28 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.440967921416213E+07,      /* J = 48 */
(PID.TID 0000.0001)                 9.503539809503193E+07,      /* J = 49 */
(PID.TID 0000.0001)                 9.566082748163140E+07,      /* J = 50 */
(PID.TID 0000.0001)                 9.628596546870193E+07,      /* J = 51 */
(PID.TID 0000.0001)                 9.691081015209354E+07,      /* J = 52 */
(PID.TID 0000.0001)                 9.753535962826957E+07,      /* J = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.099614325987181E+08,      /* J = 73 */
(PID.TID 0000.0001)                 1.105793446869293E+08,      /* J = 74 */
(PID.TID 0000.0001)                 1.111969199312560E+08,      /* J = 75 */
(PID.TID 0000.0001)                 1.118141564504991E+08,      /* J = 76 */
(PID.TID 0000.0001)                 1.124310523644033E+08,      /* J = 77 */
(PID.TID 0000.0001)                 1.130476057938686E+08,      /* J = 78 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.253038681465363E+08,      /* J = 98 */
(PID.TID 0000.0001)                 1.259127972112936E+08,      /* J = 99 */
(PID.TID 0000.0001)                 1.265213427237870E+08       /* J =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    50 @  6.439097919401864E+07              /* I =  1: 50 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 6.439097919401864E+07,      /* J =  1 */
(PID.TID 0000.0001)                 6.502823906837178E+07,      /* J =  2 */
(PID.TID 0000.0001)                 6.566530085543715E+07,      /* J =  3 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 7.836195435256334E+07,      /* J = 23 */
(PID.TID 0000.0001)                 7.899440900921808E+07,      /* J = 24 */
(PID.TID 0000.0001)                 7.962662303520054E+07,      /* J = 25 */
(PID.TID 0000.0001)                 8.025859450470714E+07,      /* J = 26 */
(PID.TID 0000.0001)                 8.089032149259476E+07,      /* J = 27 */
(PID.TID 0000.0001)                 8.152180207452223E+07,      /* J = 28 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 9.409671180895932E+07,      /* J = 48 */
(PID.TID 0000.0001)                 9.472257472228888E+07,      /* J = 49 */
(PID.TID 0000.0001)                 9.534814909420149E+07,      /* J = 50 */
(PID.TID 0000.0001)                 9.597343301913188E+07,      /* J = 51 */
(PID.TID 0000.0001)                 9.659842459236403E+07,      /* J = 52 */
(PID.TID 0000.0001)                 9.722312190998377E+07,      /* J = 53 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.096523508263446E+08,      /* J = 73 */
(PID.TID 0000.0001)                 1.102704306306916E+08,      /* J = 74 */
(PID.TID 0000.0001)                 1.108881745321664E+08,      /* J = 75 */
(PID.TID 0000.0001)                 1.115055806490511E+08,      /* J = 76 */
(PID.TID 0000.0001)                 1.121226471005947E+08,      /* J = 77 */
(PID.TID 0000.0001)                 1.127393720071080E+08,      /* J = 78 */
(PID.TID 0000.0001)      . . .
(PID.TID 0000.0001)                 1.249992603617116E+08,      /* J = 98 */
(PID.TID 0000.0001)                 1.256083805070197E+08,      /* J = 99 */
(PID.TID 0000.0001)                 1.262171180274426E+08       /* J =100 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0000.0001)                 4.665024516720074E+11
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End of Model config. summary
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) == Packages configuration : Check & print summary ==
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SHELFICE_CHECK: #define ALLOW_SHELFICE
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SHELFICE_CHECK: start of SHELFICE config. summary
(PID.TID 0000.0001) SHELFICEisOn = /* package is turned on */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useISOMIPTD = /* use simple isomip thermodynamics */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEconserve = /* use a conservative form of boundary conditions */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEboundaryLayer = /* use simple boundary layer scheme to suppress noise */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHI_withBL_realFWflux = /* use real FW Flux in boundary layer scheme */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEadvDiffHeatFlux = /* use adv.-diff. instead of just diff. heat flux into the ice shelf */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEMassStepping = /* step forward ice shelf mass/thickness */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_shelfice = /* use no slip boundary conditions */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEdragLinear    = /* linear drag coefficient */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEdragQuadratic = /* quadratic drag coefficient */
(PID.TID 0000.0001)                 2.500000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEselectDragQuadr = /* select quadratic drag option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICElatentHeat      = /* latent heat of ice */
(PID.TID 0000.0001)                 3.340000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEheatCapacity_Cp = /* heat capacity of ice shelf */
(PID.TID 0000.0001)                 2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoShelfice   = /* density of ice shelf */
(PID.TID 0000.0001)                 9.170000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEkappa = /* thermal conductivity of ice shelf */
(PID.TID 0000.0001)                 1.540000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEthetaSurface = /* surface temperature above i.s. */
(PID.TID 0000.0001)                -2.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEheatTransCoeff = /* heat transfer coefficient */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEsaltTransCoeff = /* salt transfer coefficient */
(PID.TID 0000.0001)                 5.050000000000000E-07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEuseGammaFrict = /* use velocity dependent exchange coefficients */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEremeshFrequency = /* Frequency (in s) of Remeshing */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEloadAnomalyFile = /* file name of loaded loadAnomaly field */
(PID.TID 0000.0001)               'phi0surf.exp1.jmd95z'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEmassFile = /* file name of loaded mass field */
OAD: TIMING: stamp 0: 1618454982.192734
OAD: TIMING: stamp 1: 1618455012.900295
OAD: TIMING: delta stamps 1-0: 30.707561
OAD: TIMING: stamp 2: 1618455075.879623
OAD: TIMING: delta stamps 2-1: 62.979328
OAD: TIMING: delta stamps 2-0: 93.686889
OAD: TIMING: ratio stamps (2-1)/(1-0): 6.297933e+07/3.070756e+07=2.050939e+00
(PID.TID 0000.0001)               ''
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEtopoFile = /* file name of loaded under-ice topography */
(PID.TID 0000.0001)               'icetopo.exp1'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEMassDynTendFile = /* file name of loaded dynamic mass tendency field */
(PID.TID 0000.0001)               ''
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICEwriteState  = /* do simple standard output */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICE_dump_mdsio = /* use mdsio for snapshots */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICE_tave_mdsio = /* use mdsio for time averages */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICE_dump_mnc   = /* use netcdf for snapshots */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICE_tave_mnc   = /* use netcdf for time averages */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICE_dumpFreq = /* analoguous to dumpFreq */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICE_taveFreq = /* analoguous to taveFreq */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SHELFICE_CHECK: end of SHELFICE config. summary
(PID.TID 0000.0001) CTRL_CHECK:  --> Starts to check CTRL set-up
(PID.TID 0000.0001) CTRL_CHECK:  <-- Ends Normally
(PID.TID 0000.0001) 
(PID.TID 0000.0001) COST_CHECK: #define ALLOW_COST
(PID.TID 0000.0001) GRDCHK_CHECK: grdchk package
(PID.TID 0000.0001) GAD_CHECK: #define ALLOW_GENERIC_ADVDIFF
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0000.0001) // CONFIG_CHECK : Normal End
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
 OAD: IT+      1048576
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
 OAD: DT+      1048576
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03576086280577E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.16232628761304E-13  5.85496465663748E-02
 cg2d: Sum(rhs),rhsMax =   7.13276659958240E-13  5.84742692598052E-02
 cg2d: Sum(rhs),rhsMax =   7.16149362034457E-13  5.84584944375847E-02
 cg2d: Sum(rhs),rhsMax =   7.14955872282985E-13  5.84066473697759E-02
 cg2d: Sum(rhs),rhsMax =   7.18716752778903E-13  5.83776644739970E-02
 cg2d: Sum(rhs),rhsMax =   7.19986570363318E-13  5.84362198394048E-02
 cg2d: Sum(rhs),rhsMax =   7.20579845792102E-13  5.85065316933976E-02
 cg2d: Sum(rhs),rhsMax =   7.14664438739021E-13  5.85890460574158E-02
 OAD: IT+     17825792
 OAD: DT+     17825792
 OAD: IT+     34603008
 OAD: IT+     51380224
 OAD: IT+     68157440
 OAD: DT+     34603008
 OAD: IT+     84934656
 OAD: IT+    101711872
 OAD: IT+    118489088
 cg2d: Sum(rhs),rhsMax =   7.12698997040739E-13  5.86819976555202E-02
 OAD: DT+     51380224
 OAD: IT+    135266304
 OAD: IT+    152043520
 OAD: IT+    168820736
 OAD: IT+    185597952
 OAD: DT+     68157440
 OAD: IT+    202375168
 OAD: DT+     84934656
(PID.TID 0000.0001) %CHECKPOINT      8650 ckptA
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272836868119185D+05
 --> objf_test(bi,bj)   =  0.281193669253420D+05
 --> objf_test(bi,bj)   =  0.489493981291376D+05
 --> objf_test(bi,bj)   =  0.505808644699147D+05
 --> objf_test(bi,bj)   =  0.526424027837253D+05
 --> objf_test(bi,bj)   =  0.548341248351525D+05
 --> objf_test(bi,bj)   =  0.526405191842645D+05
 --> objf_test(bi,bj)   =  0.548338742031074D+05
(PID.TID 0000.0001)   local fc =  0.369884237342563D+06
(PID.TID 0000.0001)  global fc =  0.369884237342563D+06
 cg2d: Sum(rhs),rhsMax =  -9.10382880192628E-15  5.87890736423569E-05
 cg2d: Sum(rhs),rhsMax =   7.15153630759247E-13  5.85890460574160E-02
 cg2d: Sum(rhs),rhsMax =  -1.15185638804860E-15  7.51712107927840E-04
 cg2d: Sum(rhs),rhsMax =   7.16759984698001E-13  5.85065316933976E-02
 cg2d: Sum(rhs),rhsMax =  -4.71844785465692E-16  1.37422252013216E-03
 cg2d: Sum(rhs),rhsMax =   7.20631887496381E-13  5.84362198394043E-02
 cg2d: Sum(rhs),rhsMax =   2.28289609438548E-15  1.93745567323104E-03
 cg2d: Sum(rhs),rhsMax =   7.19951875893798E-13  5.83776644739970E-02
 cg2d: Sum(rhs),rhsMax =   7.06032454722560E-16  2.29808246597704E-03
 cg2d: Sum(rhs),rhsMax =   7.16926518151695E-13  5.84066473697762E-02
 cg2d: Sum(rhs),rhsMax =   7.52869988573934E-16  2.37509841422656E-03
 cg2d: Sum(rhs),rhsMax =   7.16926518151695E-13  5.84584944375846E-02
 cg2d: Sum(rhs),rhsMax =  -5.51642065360625E-16  2.14788366062592E-03
 cg2d: Sum(rhs),rhsMax =   7.17773063207972E-13  5.84742692598057E-02
 cg2d: Sum(rhs),rhsMax =   1.62370117351429E-15  1.66732107002434E-03
 cg2d: Sum(rhs),rhsMax =   7.17537140815239E-13  5.85496465663755E-02
 cg2d: Sum(rhs),rhsMax =   1.66533453693773E-15  1.97659111521151E-03
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.02327085377874E-13  5.97860431289983E-02
 cg2d: Sum(rhs),rhsMax =   6.66133814775094E-16  2.85670319444534E-03
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient-check starts (grdchk_main)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) grdchk reference fc: fcref       =  3.69884237342563E+05
grad-res -------------------------------
 grad-res  proc    #    i    j    k   bi   bj iobc       fc ref            fc + eps           fc - eps
 grad-res  proc    #    i    j    k   bi   bj iobc      adj grad            fd grad          1 - fd/adj
 grad-res exact position met: 
 grad-res     0 1579   20   24   20    1    1
(PID.TID 0000.0001) ====== Starts gradient-check number   1 (=ichknum) =======
 ph-test icomp, ncvarcomp, ichknum         1579      100450           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1          48           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1         168           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1         336           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1         576           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1         864           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1        1200           1
 ph-grd -->hit<--           20          24          20           1
(PID.TID 0000.0001) grdchk pos: i,j,k=   20   24   20 ; bi,bj=   1   1 ; iobc=  1 ; rec=   1
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03631597431809E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.14872605556138E-13  5.85496459646400E-02
 cg2d: Sum(rhs),rhsMax =   7.20784543162267E-13  5.84742688930641E-02
 cg2d: Sum(rhs),rhsMax =   7.18342052508092E-13  5.84584946077673E-02
 cg2d: Sum(rhs),rhsMax =   7.20118409347492E-13  5.84066477809966E-02
 cg2d: Sum(rhs),rhsMax =   7.17745307632356E-13  5.83776647381407E-02
 cg2d: Sum(rhs),rhsMax =   7.16565695668692E-13  5.84362200923067E-02
 cg2d: Sum(rhs),rhsMax =   7.13217679360056E-13  5.85065319809276E-02
 cg2d: Sum(rhs),rhsMax =   7.13432785071078E-13  5.85890463854734E-02
 cg2d: Sum(rhs),rhsMax =   7.17207543354803E-13  5.86819979944583E-02
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272836486299371D+05
 --> objf_test(bi,bj)   =  0.281193669252972D+05
 --> objf_test(bi,bj)   =  0.489493981289786D+05
 --> objf_test(bi,bj)   =  0.505808644699034D+05
 --> objf_test(bi,bj)   =  0.526424027837223D+05
 --> objf_test(bi,bj)   =  0.548341248351535D+05
 --> objf_test(bi,bj)   =  0.526405191842602D+05
 --> objf_test(bi,bj)   =  0.548338742031056D+05
(PID.TID 0000.0001)   local fc =  0.369884199160358D+06
(PID.TID 0000.0001)  global fc =  0.369884199160358D+06
(PID.TID 0000.0001) grdchk perturb(+)fc: fcpertplus  =  3.69884199160358E+05
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03631597431809E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.16121606458842E-13  5.85496471662112E-02
 cg2d: Sum(rhs),rhsMax =   7.19341253230255E-13  5.84742696252864E-02
 cg2d: Sum(rhs),rhsMax =   7.16413040002806E-13  5.84584942681453E-02
 cg2d: Sum(rhs),rhsMax =   7.15483228219682E-13  5.84066469597881E-02
 cg2d: Sum(rhs),rhsMax =   7.16274262124728E-13  5.83776642104507E-02
 cg2d: Sum(rhs),rhsMax =   7.18189396842206E-13  5.84362195870379E-02
 cg2d: Sum(rhs),rhsMax =   7.15354858682460E-13  5.85065314065646E-02
 cg2d: Sum(rhs),rhsMax =   7.15649761673376E-13  5.85890457298747E-02
 cg2d: Sum(rhs),rhsMax =   7.14832706916191E-13  5.86819973176061E-02
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272837251560532D+05
 --> objf_test(bi,bj)   =  0.281193669253867D+05
 --> objf_test(bi,bj)   =  0.489493981293049D+05
 --> objf_test(bi,bj)   =  0.505808644699259D+05
 --> objf_test(bi,bj)   =  0.526424027837285D+05
 --> objf_test(bi,bj)   =  0.548341248351515D+05
 --> objf_test(bi,bj)   =  0.526405191842689D+05
 --> objf_test(bi,bj)   =  0.548338742031092D+05
(PID.TID 0000.0001)   local fc =  0.369884275686929D+06
(PID.TID 0000.0001)  global fc =  0.369884275686929D+06
(PID.TID 0000.0001) grdchk perturb(-)fc: fcpertminus =  3.69884275686929E+05
grad-res -------------------------------
 grad-res     0    1   20   24   20    1    1    1   3.69884237343E+05  3.69884199160E+05  3.69884275687E+05
 grad-res     0    1    1 1579    0    1    1    1  -3.82632855132E+00 -3.82632854744E+00  1.01510189143E-09
(PID.TID 0000.0001)  ADM  ref_cost_function      =  3.69884237342563E+05
(PID.TID 0000.0001)  ADM  adjoint_gradient       = -3.82632855132272E+00
(PID.TID 0000.0001)  ADM  finite-diff_grad       = -3.82632854743861E+00
(PID.TID 0000.0001) ====== End of gradient-check number   1 (ierr=  0) =======
(PID.TID 0000.0001) ====== Starts gradient-check number   2 (=ichknum) =======
 ph-test icomp, ncvarcomp, ichknum         1580      100450           2
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1        1579           2
 ph-grd -->hit<--           21          24          20           1
(PID.TID 0000.0001) grdchk pos: i,j,k=   21   24   20 ; bi,bj=   1   1 ; iobc=  1 ; rec=   1
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03576086280577E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.15233428039141E-13  5.85496459987944E-02
 cg2d: Sum(rhs),rhsMax =   7.17231829483467E-13  5.84742688739039E-02
 cg2d: Sum(rhs),rhsMax =   7.16440795578421E-13  5.84584945354275E-02
 cg2d: Sum(rhs),rhsMax =   7.17953474449473E-13  5.84066476845914E-02
 cg2d: Sum(rhs),rhsMax =   7.18411441447131E-13  5.83776646127297E-02
 cg2d: Sum(rhs),rhsMax =   7.14657499845117E-13  5.84362199370132E-02
 cg2d: Sum(rhs),rhsMax =   7.20000448151126E-13  5.85065317922423E-02
 cg2d: Sum(rhs),rhsMax =   7.14955872282985E-13  5.85890461640643E-02
 cg2d: Sum(rhs),rhsMax =   7.14798012446671E-13  5.86819977414887E-02
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272836486353870D+05
 --> objf_test(bi,bj)   =  0.281193669252718D+05
 --> objf_test(bi,bj)   =  0.489493981289835D+05
 --> objf_test(bi,bj)   =  0.505808644699044D+05
 --> objf_test(bi,bj)   =  0.526424027837226D+05
 --> objf_test(bi,bj)   =  0.548341248351536D+05
 --> objf_test(bi,bj)   =  0.526405191842606D+05
 --> objf_test(bi,bj)   =  0.548338742031059D+05
(PID.TID 0000.0001)   local fc =  0.369884199165789D+06
(PID.TID 0000.0001)  global fc =  0.369884199165789D+06
(PID.TID 0000.0001) grdchk perturb(+)fc: fcpertplus  =  3.69884199165789E+05
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03687108583040E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.17759185420164E-13  5.85496471321850E-02
 cg2d: Sum(rhs),rhsMax =   7.17065296029773E-13  5.84742696446134E-02
 cg2d: Sum(rhs),rhsMax =   7.20493109618303E-13  5.84584943401366E-02
 cg2d: Sum(rhs),rhsMax =   7.19604931198603E-13  5.84066470557914E-02
 cg2d: Sum(rhs),rhsMax =   7.19202475352176E-13  5.83776643358433E-02
 cg2d: Sum(rhs),rhsMax =   7.17474690770104E-13  5.84362197421850E-02
 cg2d: Sum(rhs),rhsMax =   7.13266251617384E-13  5.85065315949033E-02
 cg2d: Sum(rhs),rhsMax =   7.18168580160494E-13  5.85890459505529E-02
 cg2d: Sum(rhs),rhsMax =   7.15122405736679E-13  5.86819975696820E-02
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272837251506036D+05
 --> objf_test(bi,bj)   =  0.281193669254120D+05
 --> objf_test(bi,bj)   =  0.489493981293000D+05
 --> objf_test(bi,bj)   =  0.505808644699249D+05
 --> objf_test(bi,bj)   =  0.526424027837282D+05
 --> objf_test(bi,bj)   =  0.548341248351514D+05
 --> objf_test(bi,bj)   =  0.526405191842684D+05
 --> objf_test(bi,bj)   =  0.548338742031089D+05
(PID.TID 0000.0001)   local fc =  0.369884275681497D+06
(PID.TID 0000.0001)  global fc =  0.369884275681497D+06
(PID.TID 0000.0001) grdchk perturb(-)fc: fcpertminus =  3.69884275681497E+05
grad-res -------------------------------
 grad-res     0    2   21   24   20    1    1    1   3.69884237343E+05  3.69884199166E+05  3.69884275681E+05
 grad-res     0    2    2 1580    0    1    1    1  -3.82578540961E+00 -3.82578539720E+00  3.24392912532E-09
(PID.TID 0000.0001)  ADM  ref_cost_function      =  3.69884237342563E+05
(PID.TID 0000.0001)  ADM  adjoint_gradient       = -3.82578540961328E+00
(PID.TID 0000.0001)  ADM  finite-diff_grad       = -3.82578539720271E+00
(PID.TID 0000.0001) ====== End of gradient-check number   2 (ierr=  0) =======
(PID.TID 0000.0001) ====== Starts gradient-check number   3 (=ichknum) =======
 ph-test icomp, ncvarcomp, ichknum         1581      100450           3
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1        1580           3
 ph-grd -->hit<--           22          24          20           1
(PID.TID 0000.0001) grdchk pos: i,j,k=   22   24   20 ; bi,bj=   1   1 ; iobc=  1 ; rec=   1
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03687108583040E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.15941195217340E-13  5.85496460319304E-02
 cg2d: Sum(rhs),rhsMax =   7.18744508354519E-13  5.84742688587049E-02
 cg2d: Sum(rhs),rhsMax =   7.16579573456499E-13  5.84584944704235E-02
 cg2d: Sum(rhs),rhsMax =   7.18577974900825E-13  5.84066475974795E-02
 cg2d: Sum(rhs),rhsMax =   7.23573978511638E-13  5.83776645037090E-02
 cg2d: Sum(rhs),rhsMax =   7.21041282236712E-13  5.84362198022053E-02
 cg2d: Sum(rhs),rhsMax =   7.16423448343662E-13  5.85065316288236E-02
 cg2d: Sum(rhs),rhsMax =   7.17027132113301E-13  5.85890459719352E-02
 cg2d: Sum(rhs),rhsMax =   7.13372069749418E-13  5.86819975227751E-02
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272836486392339D+05
 --> objf_test(bi,bj)   =  0.281193669250376D+05
 --> objf_test(bi,bj)   =  0.489493981289748D+05
 --> objf_test(bi,bj)   =  0.505808644698983D+05
 --> objf_test(bi,bj)   =  0.526424027837228D+05
 --> objf_test(bi,bj)   =  0.548341248351537D+05
 --> objf_test(bi,bj)   =  0.526405191842610D+05
 --> objf_test(bi,bj)   =  0.548338742031062D+05
(PID.TID 0000.0001)   local fc =  0.369884199169388D+06
(PID.TID 0000.0001)  global fc =  0.369884199169388D+06
(PID.TID 0000.0001) grdchk perturb(+)fc: fcpertplus  =  3.69884199169388E+05
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03576086280577E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.19022064110675E-13  5.85496470992789E-02
 cg2d: Sum(rhs),rhsMax =   7.15427717068451E-13  5.84742696596956E-02
 cg2d: Sum(rhs),rhsMax =   7.19563297835180E-13  5.84584944050030E-02
 cg2d: Sum(rhs),rhsMax =   7.18800019505750E-13  5.84066471428122E-02
 cg2d: Sum(rhs),rhsMax =   7.19285742079023E-13  5.83776644443066E-02
 cg2d: Sum(rhs),rhsMax =   7.18480830386170E-13  5.84362198766411E-02
 cg2d: Sum(rhs),rhsMax =   7.16968151515118E-13  5.85065317580032E-02
 cg2d: Sum(rhs),rhsMax =   7.18668180521576E-13  5.85890461418978E-02
 cg2d: Sum(rhs),rhsMax =   7.14898626408278E-13  5.86819977876204E-02
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272837251467574D+05
 --> objf_test(bi,bj)   =  0.281193669256454D+05
 --> objf_test(bi,bj)   =  0.489493981293089D+05
 --> objf_test(bi,bj)   =  0.505808644699309D+05
 --> objf_test(bi,bj)   =  0.526424027837279D+05
 --> objf_test(bi,bj)   =  0.548341248351513D+05
 --> objf_test(bi,bj)   =  0.526405191842681D+05
 --> objf_test(bi,bj)   =  0.548338742031086D+05
(PID.TID 0000.0001)   local fc =  0.369884275677899D+06
(PID.TID 0000.0001)  global fc =  0.369884275677899D+06
(PID.TID 0000.0001) grdchk perturb(-)fc: fcpertminus =  3.69884275677899E+05
grad-res -------------------------------
 grad-res     0    3   22   24   20    1    1    1   3.69884237343E+05  3.69884199169E+05  3.69884275678E+05
 grad-res     0    3    3 1581    0    1    1    1  -3.82542550871E+00 -3.82542551379E+00 -1.32619537574E-09
(PID.TID 0000.0001)  ADM  ref_cost_function      =  3.69884237342563E+05
(PID.TID 0000.0001)  ADM  adjoint_gradient       = -3.82542550871393E+00
(PID.TID 0000.0001)  ADM  finite-diff_grad       = -3.82542551378720E+00
(PID.TID 0000.0001) ====== End of gradient-check number   3 (ierr=  0) =======
(PID.TID 0000.0001) ====== Starts gradient-check number   4 (=ichknum) =======
 ph-test icomp, ncvarcomp, ichknum         1582      100450           4
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1        1581           4
 ph-grd -->hit<--           23          24          20           1
(PID.TID 0000.0001) grdchk pos: i,j,k=   23   24   20 ; bi,bj=   1   1 ; iobc=  1 ; rec=   1
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03687108583040E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.16315895488151E-13  5.85496460635958E-02
 cg2d: Sum(rhs),rhsMax =   7.17342851785929E-13  5.84742688471461E-02
 cg2d: Sum(rhs),rhsMax =   7.17911841086050E-13  5.84584944121166E-02
 cg2d: Sum(rhs),rhsMax =   7.20062898196261E-13  5.84066475186294E-02
 cg2d: Sum(rhs),rhsMax =   7.16524062305268E-13  5.83776644091389E-02
 cg2d: Sum(rhs),rhsMax =   7.18848591763077E-13  5.84362196853075E-02
 cg2d: Sum(rhs),rhsMax =   7.17263054506034E-13  5.85065314867784E-02
 cg2d: Sum(rhs),rhsMax =   7.15590781075193E-13  5.85890458061772E-02
 cg2d: Sum(rhs),rhsMax =   7.16884884788271E-13  5.86819973343524E-02
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272836486423887D+05
 --> objf_test(bi,bj)   =  0.281193669242548D+05
 --> objf_test(bi,bj)   =  0.489493981290268D+05
 --> objf_test(bi,bj)   =  0.505808644698216D+05
 --> objf_test(bi,bj)   =  0.526424027837231D+05
 --> objf_test(bi,bj)   =  0.548341248351538D+05
 --> objf_test(bi,bj)   =  0.526405191842613D+05
 --> objf_test(bi,bj)   =  0.548338742031064D+05
(PID.TID 0000.0001)   local fc =  0.369884199171736D+06
(PID.TID 0000.0001)  global fc =  0.369884199171736D+06
(PID.TID 0000.0001) grdchk perturb(+)fc: fcpertplus  =  3.69884199171736E+05
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03798130885502E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.14733827678060E-13  5.85496470676359E-02
 cg2d: Sum(rhs),rhsMax =   7.17342851785929E-13  5.84742696711771E-02
 cg2d: Sum(rhs),rhsMax =   7.17814696571395E-13  5.84584944628465E-02
 cg2d: Sum(rhs),rhsMax =   7.20548620769534E-13  5.84066472216095E-02
 cg2d: Sum(rhs),rhsMax =   7.19604931198603E-13  5.83776645388117E-02
 cg2d: Sum(rhs),rhsMax =   7.15261183614757E-13  5.84362199927118E-02
 cg2d: Sum(rhs),rhsMax =   7.17564896390854E-13  5.85065318990530E-02
 cg2d: Sum(rhs),rhsMax =   7.18963083512492E-13  5.85890463072109E-02
 cg2d: Sum(rhs),rhsMax =   7.15901296577393E-13  5.86819979755548E-02
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272837251436050D+05
 --> objf_test(bi,bj)   =  0.281193669264260D+05
 --> objf_test(bi,bj)   =  0.489493981292570D+05
 --> objf_test(bi,bj)   =  0.505808644700074D+05
 --> objf_test(bi,bj)   =  0.526424027837277D+05
 --> objf_test(bi,bj)   =  0.548341248351512D+05
 --> objf_test(bi,bj)   =  0.526405191842677D+05
 --> objf_test(bi,bj)   =  0.548338742031083D+05
(PID.TID 0000.0001)   local fc =  0.369884275675550D+06
(PID.TID 0000.0001)  global fc =  0.369884275675550D+06
(PID.TID 0000.0001) grdchk perturb(-)fc: fcpertminus =  3.69884275675550E+05
grad-res -------------------------------
 grad-res     0    4   23   24   20    1    1    1   3.69884237343E+05  3.69884199172E+05  3.69884275676E+05
 grad-res     0    4    4 1582    0    1    1    1  -3.82519070501E+00 -3.82519069244E+00  3.28649085723E-09
(PID.TID 0000.0001)  ADM  ref_cost_function      =  3.69884237342563E+05
(PID.TID 0000.0001)  ADM  adjoint_gradient       = -3.82519070501299E+00
(PID.TID 0000.0001)  ADM  finite-diff_grad       = -3.82519069244154E+00
(PID.TID 0000.0001) ====== End of gradient-check number   4 (ierr=  0) =======
(PID.TID 0000.0001) ====== Starts gradient-check number   5 (=ichknum) =======
 ph-test icomp, ncvarcomp, ichknum         1583      100450           5
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1        1582           5
 ph-grd -->hit<--           24          24          20           1
(PID.TID 0000.0001) grdchk pos: i,j,k=   24   24   20 ; bi,bj=   1   1 ; iobc=  1 ; rec=   1
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03687108583040E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.16732229122385E-13  5.85496460938311E-02
 cg2d: Sum(rhs),rhsMax =   7.16912640363887E-13  5.84742688388732E-02
 cg2d: Sum(rhs),rhsMax =   7.15455472644067E-13  5.84584943599507E-02
 cg2d: Sum(rhs),rhsMax =   7.17842452147011E-13  5.84066474473465E-02
 cg2d: Sum(rhs),rhsMax =   7.17800818783587E-13  5.83776643267649E-02
 cg2d: Sum(rhs),rhsMax =   7.18425319234939E-13  5.84362195843235E-02
 cg2d: Sum(rhs),rhsMax =   7.15098119608015E-13  5.85065313643046E-02
 cg2d: Sum(rhs),rhsMax =   7.12221948084846E-13  5.85890456625861E-02
 cg2d: Sum(rhs),rhsMax =   7.17079173817581E-13  5.86819971713511E-02
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272836486458056D+05
 --> objf_test(bi,bj)   =  0.281193669224377D+05
 --> objf_test(bi,bj)   =  0.489493981293243D+05
 --> objf_test(bi,bj)   =  0.505808644695019D+05
 --> objf_test(bi,bj)   =  0.526424027837233D+05
 --> objf_test(bi,bj)   =  0.548341248351538D+05
 --> objf_test(bi,bj)   =  0.526405191842617D+05
 --> objf_test(bi,bj)   =  0.548338742031068D+05
(PID.TID 0000.0001)   local fc =  0.369884199173315D+06
(PID.TID 0000.0001)  global fc =  0.369884199173315D+06
(PID.TID 0000.0001) grdchk perturb(+)fc: fcpertplus  =  3.69884199173315E+05
(PID.TID 0000.0001)  nRecords = 243 ; filePrec =  64 ; fileIter =      8640
(PID.TID 0000.0001)     nDims =   2 , dims:
(PID.TID 0000.0001)    1:  50   1  50
(PID.TID 0000.0001)    2: 100   1 100
(PID.TID 0000.0001)     nFlds =  11 , nFl3D =   8 , fields:
(PID.TID 0000.0001)  >Uvel    < >Vvel    < >Theta   < >Salt    < >GuNm1   < >GvNm1   < >GtNm1   < >GsNm1   < >EtaN    < >dEtaHdt < >EtaH    <
(PID.TID 0000.0001) missingVal=  1.00000000000000E+00 ; nTimRec =   1 , timeList:
(PID.TID 0000.0001)   1.555200000000E+07
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Uvel    ", #   1 in fldList, rec=   1
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Vvel    ", #   2 in fldList, rec=   2
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Theta   ", #   3 in fldList, rec=   3
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "Salt    ", #   4 in fldList, rec=   4
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GuNm1   ", #   5 in fldList, rec=   5
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GvNm1   ", #   6 in fldList, rec=   6
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GtNm1   ", #   7 in fldList, rec=   7
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "GsNm1   ", #   8 in fldList, rec=   8
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaN    ", #   9 in fldList, rec= 241
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "dEtaHdt ", #  10 in fldList, rec= 242
(PID.TID 0000.0001) READ_MFLDS_3D_RL: read field: "EtaH    ", #  11 in fldList, rec= 243
(PID.TID 0000.0001) READ_MFLDS_CHECK: - normal end ; reset MFLDS file-name: pickup.0000008640
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   7.03576086280577E-13  5.97860431289984E-02
 cg2d: Sum(rhs),rhsMax =   7.18161641266590E-13  5.85496470376316E-02
 cg2d: Sum(rhs),rhsMax =   7.17315096210314E-13  5.84742696794363E-02
 cg2d: Sum(rhs),rhsMax =   7.15497106007490E-13  5.84584945146461E-02
 cg2d: Sum(rhs),rhsMax =   7.19702075713258E-13  5.84066472926509E-02
 cg2d: Sum(rhs),rhsMax =   7.19271864291215E-13  5.83776646209068E-02
 cg2d: Sum(rhs),rhsMax =   7.16225689867400E-13  5.84362200936351E-02
 cg2d: Sum(rhs),rhsMax =   7.16728759675433E-13  5.85065320213725E-02
 cg2d: Sum(rhs),rhsMax =   7.14015652159006E-13  5.85890464504841E-02
 cg2d: Sum(rhs),rhsMax =   7.13292272469523E-13  5.86819981382931E-02
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
 --> objf_shelfice(bi,bj) =  0.000000000000000D+00
 --> objf_shifwflx(bi,bj) =  0.000000000000000D+00
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
 --> objf_test(bi,bj)   =  0.272837251401387D+05
 --> objf_test(bi,bj)   =  0.281193669282923D+05
 --> objf_test(bi,bj)   =  0.489493981289606D+05
 --> objf_test(bi,bj)   =  0.505808644703261D+05
 --> objf_test(bi,bj)   =  0.526424027837273D+05
 --> objf_test(bi,bj)   =  0.548341248351511D+05
 --> objf_test(bi,bj)   =  0.526405191842673D+05
 --> objf_test(bi,bj)   =  0.548338742031080D+05
(PID.TID 0000.0001)   local fc =  0.369884275673972D+06
(PID.TID 0000.0001)  global fc =  0.369884275673972D+06
(PID.TID 0000.0001) grdchk perturb(-)fc: fcpertminus =  3.69884275673972E+05
grad-res -------------------------------
 grad-res     0    5   24   24   20    1    1    1   3.69884237343E+05  3.69884199173E+05  3.69884275674E+05
 grad-res     0    5    5 1583    0    1    1    1  -3.82503281241E+00 -3.82503282162E+00 -2.41000086554E-09
(PID.TID 0000.0001)  ADM  ref_cost_function      =  3.69884237342563E+05
(PID.TID 0000.0001)  ADM  adjoint_gradient       = -3.82503281240528E+00
(PID.TID 0000.0001)  ADM  finite-diff_grad       = -3.82503282162361E+00
(PID.TID 0000.0001) ====== End of gradient-check number   5 (ierr=  0) =======
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient check results  >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  EPS =   1.000000E-02
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output h.p:  Id Itile Jtile LAYER   bi   bj   X(Id)           X(Id)+/-EPS
(PID.TID 0000.0001) grdchk output h.c:  Id  FC                   FC1                  FC2
(PID.TID 0000.0001) grdchk output h.g:  Id     FC1-FC2/(2*EPS)      ADJ GRAD(FC)         1-FDGRD/ADGRD
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output (p):   1    20    24    20    1    1   0.000000000E+00 -1.000000000E-02
(PID.TID 0000.0001) grdchk output (c):   1  3.6988423734256E+05  3.6988419916036E+05  3.6988427568693E+05
(PID.TID 0000.0001) grdchk output (g):   1    -3.8263285474386E+00 -3.8263285513227E+00  1.0151018914328E-09
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output (p):   2    21    24    20    1    1   0.000000000E+00 -1.000000000E-02
(PID.TID 0000.0001) grdchk output (c):   2  3.6988423734256E+05  3.6988419916579E+05  3.6988427568150E+05
(PID.TID 0000.0001) grdchk output (g):   2    -3.8257853972027E+00 -3.8257854096133E+00  3.2439291253183E-09
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output (p):   3    22    24    20    1    1   0.000000000E+00 -1.000000000E-02
(PID.TID 0000.0001) grdchk output (c):   3  3.6988423734256E+05  3.6988419916939E+05  3.6988427567790E+05
(PID.TID 0000.0001) grdchk output (g):   3    -3.8254255137872E+00 -3.8254255087139E+00 -1.3261953757393E-09
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output (p):   4    23    24    20    1    1   0.000000000E+00 -1.000000000E-02
(PID.TID 0000.0001) grdchk output (c):   4  3.6988423734256E+05  3.6988419917174E+05  3.6988427567555E+05
(PID.TID 0000.0001) grdchk output (g):   4    -3.8251906924415E+00 -3.8251907050130E+00  3.2864908572350E-09
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output (p):   5    24    24    20    1    1   0.000000000E+00 -1.000000000E-02
(PID.TID 0000.0001) grdchk output (c):   5  3.6988423734256E+05  3.6988419917332E+05  3.6988427567397E+05
(PID.TID 0000.0001) grdchk output (g):   5    -3.8250328216236E+00 -3.8250328124053E+00 -2.4100008655381E-09
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk  summary  :  RMS of    5 ratios =  2.4462799725827E-09
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient check results  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   265.84096957230940
(PID.TID 0000.0001)         System time:   4.2472850074991584
(PID.TID 0000.0001)     Wall clock time:   275.67367792129517
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:  0.49468301096931100
(PID.TID 0000.0001)         System time:   7.4990998022258282E-002
(PID.TID 0000.0001)     Wall clock time:   2.9417998790740967
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "THE_MAIN_LOOP (F)      [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   24.444079935550690
(PID.TID 0000.0001)         System time:   3.9076990485191345
(PID.TID 0000.0001)     Wall clock time:   30.707551956176758
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   3.9961181879043579
(PID.TID 0000.0001)         System time:  0.16225273162126541
(PID.TID 0000.0001)     Wall clock time:   4.6786918640136719
(PID.TID 0000.0001)          No. starts:          11
(PID.TID 0000.0001)           No. stops:          11
(PID.TID 0000.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   198.39634585380554
(PID.TID 0000.0001)         System time:   3.8262175172567368
(PID.TID 0000.0001)     Wall clock time:   204.16623401641846
(PID.TID 0000.0001)          No. starts:          11
(PID.TID 0000.0001)           No. stops:          11
(PID.TID 0000.0001)   Seconds in section "MAIN_DO_LOOP        [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   198.33629357814789
(PID.TID 0000.0001)         System time:   3.8261404633522034
(PID.TID 0000.0001)     Wall clock time:   204.10614657402039
(PID.TID 0000.0001)          No. starts:          11
(PID.TID 0000.0001)           No. stops:          11
(PID.TID 0000.0001)   Seconds in section "UPDATE_SURF_DR      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.23197495937347412
(PID.TID 0000.0001)         System time:   1.1701732873916626E-003
(PID.TID 0000.0001)     Wall clock time:  0.23323249816894531
(PID.TID 0000.0001)          No. starts:         238
(PID.TID 0000.0001)           No. stops:         238
(PID.TID 0000.0001)   Seconds in section "LOAD_FIELDS_DRIVER  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.4127960205078125E-003
(PID.TID 0000.0001)         System time:   4.5627355575561523E-005
(PID.TID 0000.0001)     Wall clock time:   2.4616718292236328E-003
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "EXTERNAL_FLDS_LOAD [LOAD_FLDS_DRIVER]":
(PID.TID 0000.0001)           User time:   7.7676773071289062E-004
(PID.TID 0000.0001)         System time:   1.3515353202819824E-005
(PID.TID 0000.0001)     Wall clock time:   8.6355209350585938E-004
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "CTRL_MAP_FORCING  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   7.4493885040283203E-004
(PID.TID 0000.0001)         System time:   1.1131167411804199E-005
(PID.TID 0000.0001)     Wall clock time:   7.6341629028320312E-004
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.28664636611938477
(PID.TID 0000.0001)         System time:   2.6832818984985352E-003
(PID.TID 0000.0001)     Wall clock time:  0.28938436508178711
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   7.3606485128402710
(PID.TID 0000.0001)         System time:   5.7166874408721924E-002
(PID.TID 0000.0001)     Wall clock time:   7.4192447662353516
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "SHELFICE_THERMODYNAMICS [DO_OCEANIC_PHYS]":
(PID.TID 0000.0001)           User time:  0.61490762233734131
(PID.TID 0000.0001)         System time:   1.0374188423156738E-003
(PID.TID 0000.0001)     Wall clock time:  0.61586022377014160
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "DYNAMICS            [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   92.168635368347168
(PID.TID 0000.0001)         System time:  0.85333801805973053
(PID.TID 0000.0001)     Wall clock time:   93.042864799499512
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "SOLVE_FOR_PRESSURE  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   37.643460988998413
(PID.TID 0000.0001)         System time:  0.19758713245391846
(PID.TID 0000.0001)     Wall clock time:   37.849582910537720
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "MOM_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.7910025119781494
(PID.TID 0000.0001)         System time:   8.0581605434417725E-003
(PID.TID 0000.0001)     Wall clock time:   2.7992734909057617
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "INTEGR_CONTINUITY   [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   5.3639750480651855
(PID.TID 0000.0001)         System time:   6.0160160064697266E-003
(PID.TID 0000.0001)     Wall clock time:   5.3711767196655273
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "CALC_SURF_DR      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.21436524391174316
(PID.TID 0000.0001)         System time:   1.0108947753906250E-003
(PID.TID 0000.0001)     Wall clock time:  0.21561694145202637
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.8788812160491943
(PID.TID 0000.0001)         System time:   9.3603134155273438E-004
(PID.TID 0000.0001)     Wall clock time:   2.8802292346954346
(PID.TID 0000.0001)          No. starts:         238
(PID.TID 0000.0001)           No. stops:         238
(PID.TID 0000.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   57.868805170059204
(PID.TID 0000.0001)         System time:   1.5035719871520996
(PID.TID 0000.0001)     Wall clock time:   59.384299993515015
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "TRC_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   12.676211595535278
(PID.TID 0000.0001)         System time:  0.64795017242431641
(PID.TID 0000.0001)     Wall clock time:   13.325975418090820
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "COST_TILE           [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   5.0524177551269531
(PID.TID 0000.0001)         System time:   1.9073486328125000E-006
(PID.TID 0000.0001)     Wall clock time:   5.0529780387878418
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.16273307800292969
(PID.TID 0000.0001)         System time:   9.8378658294677734E-003
(PID.TID 0000.0001)     Wall clock time:  0.46903610229492188
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "DO_WRITE_PICKUP     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.12366485595703125
(PID.TID 0000.0001)         System time:   2.5375843048095703E-002
(PID.TID 0000.0001)     Wall clock time:  0.33588004112243652
(PID.TID 0000.0001)          No. starts:         119
(PID.TID 0000.0001)           No. stops:         119
(PID.TID 0000.0001)   Seconds in section "COST_FINAL         [ADJOINT SPIN-DOWN]":
(PID.TID 0000.0001)           User time:   5.9820175170898438E-002
(PID.TID 0000.0001)         System time:   7.0810317993164062E-005
(PID.TID 0000.0001)     Wall clock time:   5.9868812561035156E-002
(PID.TID 0000.0001)          No. starts:          11
(PID.TID 0000.0001)           No. stops:          11
(PID.TID 0000.0001)   Seconds in section "THE_MAIN_LOOP (A)      [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   62.604223251342773
(PID.TID 0000.0001)         System time:  0.13065481185913086
(PID.TID 0000.0001)     Wall clock time:   62.979377985000610
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "GRDCHK_MAIN         [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   178.29791259765625
(PID.TID 0000.0001)         System time:  0.13392019271850586
(PID.TID 0000.0001)     Wall clock time:   179.04487919807434
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile communication statistics
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // o Tile number: 000001
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000002
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000003
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000004
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000005
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000006
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000007
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000008
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Thread number: 000001
(PID.TID 0000.0001) //            No. barriers =         155144
(PID.TID 0000.0001) //      Max. barrier spins =              1
(PID.TID 0000.0001) //      Min. barrier spins =              1
(PID.TID 0000.0001) //     Total barrier spins =         155144
(PID.TID 0000.0001) //      Avg. barrier spins =       1.00E+00
PROGRAM MAIN: Execution ended Normally
