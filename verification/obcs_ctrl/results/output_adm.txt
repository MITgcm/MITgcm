(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) //                      MITgcm UV
(PID.TID 0000.0001) //                      =========
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // execution environment starting up...
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // MITgcmUV version:  checkpoint67w
(PID.TID 0000.0001) // Build user:        jm_c
(PID.TID 0000.0001) // Build host:        villon
(PID.TID 0000.0001) // Build date:        Tue Apr 13 00:55:02 EDT 2021
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Execution Environment parameter file "eedata"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Example "eedata" file
(PID.TID 0000.0001) ># Lines beginning "#" are comments
(PID.TID 0000.0001) ># nTx - No. threads per process in X
(PID.TID 0000.0001) ># nTy - No. threads per process in Y
(PID.TID 0000.0001) > &EEPARMS
(PID.TID 0000.0001) > nTx=1,
(PID.TID 0000.0001) > nTy=1,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Note: Some systems use & as the
(PID.TID 0000.0001) ># namelist terminator. Other systems
(PID.TID 0000.0001) ># use a / character (as shown here).
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0000.0001) //                                  ( and "eedata"       )
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001)      nPx =    1 ; /* No. processes in X */
(PID.TID 0000.0001)      nPy =    1 ; /* No. processes in Y */
(PID.TID 0000.0001)      nSx =    2 ; /* No. tiles in X per process */
(PID.TID 0000.0001)      nSy =    2 ; /* No. tiles in Y per process */
(PID.TID 0000.0001)      sNx =   32 ; /* Tile size in X */
(PID.TID 0000.0001)      sNy =   32 ; /* Tile size in Y */
(PID.TID 0000.0001)      OLx =    2 ; /* Tile overlap distance in X */
(PID.TID 0000.0001)      OLy =    2 ; /* Tile overlap distance in Y */
(PID.TID 0000.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0000.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0000.0001)       Nr =    8 ; /* No. levels in the vertical   */
(PID.TID 0000.0001)       Nx =   64 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0000.0001)       Ny =   64 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0000.0001)   nTiles =    4 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0000.0001)   nProcs =    1 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0000.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0000.0001) usingMPI =    F ; /* Flag used to control whether MPI is in use */
(PID.TID 0000.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0000.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0000.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0000.0001) useCoupler=   F ; /* Flag used to control communications with   */
(PID.TID 0000.0001)                   /*  other model components, through a coupler */
(PID.TID 0000.0001) useNest2W_parent =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) useNest2W_child  =    F ;/* Control 2-W Nesting comm */
(PID.TID 0000.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0000.0001) printMapIncludesZeros=    F ; /* print zeros in Std.Output maps */
(PID.TID 0000.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Mapping of tiles to threads
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // -o- Thread   1, tiles (   1:   2,   1:   2)
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile connectvity table
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile number: 000001 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //       NORTH: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) // Tile number: 000002 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //       NORTH: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) // Tile number: 000003 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //        EAST: Tile = 000004, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000002
(PID.TID 0000.0001) //       SOUTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) // Tile number: 000004 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //        EAST: Tile = 000003, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000002
(PID.TID 0000.0001) //       SOUTH: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000002, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000002, bj = 000001
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Model parameters
(PID.TID 0000.0001) ># Continuous equation parameters
(PID.TID 0000.0001) > &PARM01
(PID.TID 0000.0001) > tRef=20.,16.,12.,10., 9., 8., 7., 6.,
(PID.TID 0000.0001) > sRef=35.,35.,35.,35.,35.,35.,35.,35.,
(PID.TID 0000.0001) > viscAz=1.E-4,
(PID.TID 0000.0001) > viscAh=1.E1,
(PID.TID 0000.0001) > no_slip_sides=.FALSE.,
(PID.TID 0000.0001) > no_slip_bottom=.TRUE.,
(PID.TID 0000.0001) > diffKhT=0.E0,
(PID.TID 0000.0001) > diffKzT=0.E-5,
(PID.TID 0000.0001) > rotationPeriod=86400.,
(PID.TID 0000.0001) > beta=1.E-11,
(PID.TID 0000.0001) > eosType='LINEAR',
(PID.TID 0000.0001) > tAlpha=2.E-4,
(PID.TID 0000.0001) > sBeta =0.,
(PID.TID 0000.0001) > gravity=9.81,
(PID.TID 0000.0001) > rigidLid=.FALSE.,
(PID.TID 0000.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0000.0001) > readBinaryPrec=32,
(PID.TID 0000.0001) ># extras...
(PID.TID 0000.0001) > implicitDiffusion=.true.,
(PID.TID 0000.0001) > implicitViscosity=.true.,
(PID.TID 0000.0001) > vectorInvariantMomentum=.TRUE.,
(PID.TID 0000.0001) > staggerTimeStep=.TRUE.,
(PID.TID 0000.0001) > multiDimAdvection=.FALSE.,
(PID.TID 0000.0001) > tempAdvScheme=30,
(PID.TID 0000.0001) > saltAdvScheme=30,
(PID.TID 0000.0001) > writeBinaryPrec=32,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Elliptic solver parameters
(PID.TID 0000.0001) > &PARM02
(PID.TID 0000.0001) > cg2dMaxIters=500,
(PID.TID 0000.0001) > cg2dTargetResidual=1.E-8,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Time stepping parameters
(PID.TID 0000.0001) > &PARM03
(PID.TID 0000.0001) > startTime=0.,
(PID.TID 0000.0001) > endTime=4800.,
(PID.TID 0000.0001) > deltaTmom=1200.0,
(PID.TID 0000.0001) > deltaTtracer=1200.0,
(PID.TID 0000.0001) > abEps=0.1,
(PID.TID 0000.0001) > dumpInitAndLast=.TRUE.,
(PID.TID 0000.0001) > pChkptFreq=0.0,
(PID.TID 0000.0001) > chkptFreq=0.0,
(PID.TID 0000.0001) > dumpFreq=2628000.0,
(PID.TID 0000.0001) > monitorSelect= 1,
(PID.TID 0000.0001) > monitorFreq = 4800.,
(PID.TID 0000.0001) > adjMonitorFreq=3600.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Gridding parameters
(PID.TID 0000.0001) > &PARM04
(PID.TID 0000.0001) > usingSphericalPolarGrid=.TRUE.,
(PID.TID 0000.0001) > ygOrigin=25.,
(PID.TID 0000.0001) > delX=64*0.25,
(PID.TID 0000.0001) > delY=64*0.25,
(PID.TID 0000.0001) > delZ=500.,500.,500.,500.,500.,500.,500.,500.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) > &PARM05
(PID.TID 0000.0001) > bathyFile='topog.box',
(PID.TID 0000.0001) > uVelInitFile=   'Uini.bin',
(PID.TID 0000.0001) > vVelInitFile=   'Vini.bin',
(PID.TID 0000.0001) >#hydrogThetaFile=,
(PID.TID 0000.0001) >#hydrogSaltFile=,
(PID.TID 0000.0001) >#zonalWindFile=,
(PID.TID 0000.0001) >#meridWindFile=,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0000.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0000.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0000.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0000.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0000.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0000.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0000.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.pkg"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Packages
(PID.TID 0000.0001) > &PACKAGES
(PID.TID 0000.0001) > useECCO=.TRUE.,
(PID.TID 0000.0001) > useOBCS=.TRUE.,
(PID.TID 0000.0001) > useEXF=.TRUE.,
(PID.TID 0000.0001) > useDiagnostics=.TRUE.,
(PID.TID 0000.0001) > useGrdchk = .TRUE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0000.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/obcs                 compiled   and   used ( useOBCS                  = T )
 pkg/cal                  compiled   and   used ( useCAL                   = T )
 pkg/exf                  compiled   and   used ( useEXF                   = T )
 pkg/autodiff             compiled   and   used ( useAUTODIFF              = T )
 pkg/grdchk               compiled   and   used ( useGrdchk                = T )
 pkg/ecco                 compiled   and   used ( useECCO                  = T )
 pkg/ctrl                 compiled   and   used ( useCTRL                  = T )
 pkg/diagnostics          compiled   and   used ( useDiagnostics           = T )
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled   and   used ( useGAD                   = T )
 pkg/mom_common           compiled   and   used ( momStepping              = T )
 pkg/mom_vecinv           compiled   and   used ( +vectorInvariantMomentum = T )
 pkg/monitor              compiled   and   used ( monitorFreq > 0.         = T )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
 pkg/autodiff             compiled   and   used
 pkg/cost                 compiled   and   used
(PID.TID 0000.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0000.0001) 
(PID.TID 0000.0001) CAL_READPARMS: opening data.cal
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.cal
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.cal"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># *******************
(PID.TID 0000.0001) ># Calendar Parameters
(PID.TID 0000.0001) ># *******************
(PID.TID 0000.0001) > &CAL_NML
(PID.TID 0000.0001) > TheCalendar='gregorian',
(PID.TID 0000.0001) ># TheCalendar='model',
(PID.TID 0000.0001) > startDate_1=20070101,
(PID.TID 0000.0001) > startDate_2= 000000,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) CAL_READPARMS: finished reading data.cal
(PID.TID 0000.0001) EXF_READPARMS: opening data.exf
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.exf
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.exf"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># External Forcing Data
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &EXF_NML_01
(PID.TID 0000.0001) > useExfCheckRange = .FALSE.,
(PID.TID 0000.0001) > exf_iprec         = 32,
(PID.TID 0000.0001) > exf_monFreq=0.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) > &EXF_NML_02
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) > &EXF_NML_03
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >#&EXF_NML_04
(PID.TID 0000.0001) >#&
(PID.TID 0000.0001) >
(PID.TID 0000.0001) > &EXF_NML_OBCS
(PID.TID 0000.0001) > obcsNstartdate1     = 20061231,
(PID.TID 0000.0001) > obcsNstartdate2     = 00000,
(PID.TID 0000.0001) > obcsNperiod         = 00.0,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > obcsSstartdate1     = 20061231,
(PID.TID 0000.0001) > obcsSstartdate2     = 00000,
(PID.TID 0000.0001) > obcsSperiod         = 00.0,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > obcsWstartdate1     = 20061231,
(PID.TID 0000.0001) > obcsWstartdate2     = 00000,
(PID.TID 0000.0001) > obcsWperiod         = 00.0,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > obcsEstartdate1     = 20061231,
(PID.TID 0000.0001) > obcsEstartdate2     = 00000,
(PID.TID 0000.0001) > obcsEperiod         = 00.0,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) EXF_READPARMS: reading EXF_NML_01
(PID.TID 0000.0001) EXF_READPARMS: reading EXF_NML_02
(PID.TID 0000.0001) EXF_READPARMS: reading EXF_NML_03
(PID.TID 0000.0001) EXF_READPARMS: reading EXF_NML_OBCS
(PID.TID 0000.0001) EXF_READPARMS: finished reading data.exf
(PID.TID 0000.0001)  OBCS_READPARMS: opening data.obcs
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.obcs
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.obcs"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ***************
(PID.TID 0000.0001) ># Open boundaries
(PID.TID 0000.0001) ># ***************
(PID.TID 0000.0001) > &OBCS_PARM01
(PID.TID 0000.0001) > OB_Jnorth=   64*64,
(PID.TID 0000.0001) > OB_Jsouth=   64*1,
(PID.TID 0000.0001) > OB_Iwest=    64*1,
(PID.TID 0000.0001) > OB_Ieast=    64*64,
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > useOrlanskiNorth=.FALSE.,
(PID.TID 0000.0001) > useOBCSsponge=.TRUE.,
(PID.TID 0000.0001) > useOBCSbalance=.FALSE.,
(PID.TID 0000.0001) > useOBCSprescribe=.TRUE.,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > OBNuFile='Unbc.bin',
(PID.TID 0000.0001) > OBNvFile='Vnbc.bin',
(PID.TID 0000.0001) > OBNtFile='Tnbc.bin',
(PID.TID 0000.0001) > OBNsFile='Snbc.bin',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > OBSuFile='Usbc.bin',
(PID.TID 0000.0001) > OBSvFile='Vsbc.bin',
(PID.TID 0000.0001) > OBStFile='Tsbc.bin',
(PID.TID 0000.0001) > OBSsFile='Ssbc.bin',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > OBWuFile='Uwbc.bin',
(PID.TID 0000.0001) > OBWvFile='Vwbc.bin',
(PID.TID 0000.0001) > OBWtFile='Twbc.bin',
(PID.TID 0000.0001) > OBWsFile='Swbc.bin',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > OBEuFile='Uebc.bin',
(PID.TID 0000.0001) > OBEvFile='Vebc.bin',
(PID.TID 0000.0001) > OBEtFile='Tebc.bin',
(PID.TID 0000.0001) > OBEsFile='Sebc.bin',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># *****************************************
(PID.TID 0000.0001) ># Orlanski Boundary Condition Parameters.
(PID.TID 0000.0001) ># *****************************************
(PID.TID 0000.0001) >#&OBCS_PARM02
(PID.TID 0000.0001) ># cvelTimeScale = 2000.,
(PID.TID 0000.0001) >#&
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># *****************************************
(PID.TID 0000.0001) ># Sponge Layer Parameters.
(PID.TID 0000.0001) ># *****************************************
(PID.TID 0000.0001) > &OBCS_PARM03
(PID.TID 0000.0001) > Urelaxobcsinner=432000.E0,
(PID.TID 0000.0001) > Urelaxobcsbound=43200.E0,
(PID.TID 0000.0001) > Vrelaxobcsinner=432000.E0,
(PID.TID 0000.0001) > Vrelaxobcsbound=43200.E0,
(PID.TID 0000.0001) > spongeThickness=08,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  OBCS_READPARMS: finished reading data.obcs
(PID.TID 0000.0001)  OB_indexUnset = /* unset OB index value (i.e. no OB) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  Northern OB global indices : OB_Jnorth =
(PID.TID 0000.0001)    64 @       64                            /* I =  1: 64 */
(PID.TID 0000.0001)  Southern OB global indices : OB_Jsouth =
(PID.TID 0000.0001)    64 @        1                            /* I =  1: 64 */
(PID.TID 0000.0001)  Eastern  OB global indices : OB_Ieast =
(PID.TID 0000.0001)    64 @       64                            /* J =  1: 64 */
(PID.TID 0000.0001)  Western  OB global indices : OB_Iwest =
(PID.TID 0000.0001)    64 @        1                            /* J =  1: 64 */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) AUTODIFF_READPARMS: opening data.autodiff
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.autodiff
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.autodiff"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># =========================
(PID.TID 0000.0001) ># pkg AUTODIFF parameters :
(PID.TID 0000.0001) ># =========================
(PID.TID 0000.0001) >#  inAdExact :: get an exact adjoint (no approximation) (def=.True.)
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > &AUTODIFF_PARM01
(PID.TID 0000.0001) ># inAdExact = .FALSE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) AUTODIFF_READPARMS: finished reading data.autodiff
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // AUTODIFF parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) inAdExact = /* get an exact adjoint (no approximation) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useApproxAdvectionInAdMode = /* approximate AD-advection */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useKPPinAdMode = /* use KPP in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useGMRediInAdMode = /* use GMRedi in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSEAICEinAdMode = /* use SEAICE in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useGGL90inAdMode = /* use GGL90 in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSALT_PLUMEinAdMode = /* use SALT_PLUME in adjoint mode */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpAdVarExch = /* control adexch before dumpinp */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mon_AdVarExch = /* control adexch before monitor */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscFacInFw = /* viscosity factor for forward model */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscFacInAd = /* viscosity factor for adjoint */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SIregFacInAd = /* sea ice factor for adjoint model */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) SIregFacInFw = /* sea ice factor for forward model */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001) OPTIM_READPARMS: opening data.optim
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.optim
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.optim"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ********************************
(PID.TID 0000.0001) ># Off-line optimization parameters
(PID.TID 0000.0001) ># ********************************
(PID.TID 0000.0001) > &OPTIM
(PID.TID 0000.0001) > optimcycle=0,
(PID.TID 0000.0001) > numiter=1,
(PID.TID 0000.0001) > nfunc=3,
(PID.TID 0000.0001) > fmin=30.0,
(PID.TID 0000.0001) > iprint=10,
(PID.TID 0000.0001) > nupdate=4,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) OPTIM_READPARMS: finished reading data.optim
(PID.TID 0000.0001) CTRL_READPARMS: opening data.ctrl
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.ctrl
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.ctrl"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># ECCO controlvariables
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &CTRL_NML
(PID.TID 0000.0001) >## doMainPack   =  .TRUE.,
(PID.TID 0000.0001) >## doMainUnpack =  .TRUE.,
(PID.TID 0000.0001) > doinitxx = .TRUE.,
(PID.TID 0000.0001) > doPackDiag = .FALSE.,
(PID.TID 0000.0001) > doZscalePack = .FALSE.,
(PID.TID 0000.0001) > delZexp = 1.,
(PID.TID 0000.0001) ># doSinglePrecTapelev = .TRUE.,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_obcsnstartdate1 = 20070101,
(PID.TID 0000.0001) > xx_obcsnstartdate2 =    00000,
(PID.TID 0000.0001) > xx_obcsnperiod     =      0.0,
(PID.TID 0000.0001) > xx_obcsn_file = 'xx_obcsn',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_obcssstartdate1 = 20070101,
(PID.TID 0000.0001) > xx_obcssstartdate2 =    00000,
(PID.TID 0000.0001) > xx_obcssperiod     =      0.0,
(PID.TID 0000.0001) > xx_obcss_file = 'xx_obcss',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_obcswstartdate1 = 20070101,
(PID.TID 0000.0001) > xx_obcswstartdate2 =   00000,
(PID.TID 0000.0001) > xx_obcswperiod     =     0.0,
(PID.TID 0000.0001) > xx_obcsw_file = 'xx_obcsw',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > xx_obcsestartdate1 = 20070101,
(PID.TID 0000.0001) > xx_obcsestartdate2 =    00000,
(PID.TID 0000.0001) > xx_obcseperiod     =      0.0,
(PID.TID 0000.0001) > xx_obcse_file = 'xx_obcse',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># names for ctrl_pack/unpack
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &CTRL_PACKNAMES
(PID.TID 0000.0001) > ctrlname = 'ecco_ctrl',
(PID.TID 0000.0001) > costname = 'ecco_cost',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) ># names for CTRL_GENARR, CTRL_GENTIM
(PID.TID 0000.0001) ># *********************
(PID.TID 0000.0001) > &CTRL_NML_GENARR
(PID.TID 0000.0001) > xx_genarr3d_file(1)       = 'xx_theta',
(PID.TID 0000.0001) > xx_genarr3d_weight(1)     = 'errorTtot.err64',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) CTRL_READPARMS: finished reading data.ctrl
(PID.TID 0000.0001) COST_READPARMS: opening data.cost
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.cost
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.cost"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ******************
(PID.TID 0000.0001) ># cost function
(PID.TID 0000.0001) ># ******************
(PID.TID 0000.0001) > &COST_NML
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) COST_READPARMS: finished reading data.cost
(PID.TID 0000.0001) GRDCHK_READPARMS: opening data.grdchk
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.grdchk
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.grdchk"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># *******************
(PID.TID 0000.0001) ># ECCO gradient check
(PID.TID 0000.0001) ># *******************
(PID.TID 0000.0001) > &GRDCHK_NML
(PID.TID 0000.0001) > grdchk_eps       = 1.d-4,
(PID.TID 0000.0001) ># nbeg             = 4,
(PID.TID 0000.0001) > iGloPos          = 1,
(PID.TID 0000.0001) > jGloPos          = 1,
(PID.TID 0000.0001) > kGloPos          = 4,
(PID.TID 0000.0001) >### iGloTile         = 1,
(PID.TID 0000.0001) >### jgloTile         = 1,
(PID.TID 0000.0001) > nstep            = 1,
(PID.TID 0000.0001) > nend             = 4,
(PID.TID 0000.0001) > grdchkvarindex   = 13,
(PID.TID 0000.0001) >#ph: currently only 12 and 13 work,
(PID.TID 0000.0001) >#ph: and only for South j=1 or West i=1
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GRDCHK_READPARMS: finished reading data.grdchk
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient check configuration  >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)   grdchkvarindex :                         13
(PID.TID 0000.0001)   eps:                              0.100E-03
(PID.TID 0000.0001)   First location:                           0
(PID.TID 0000.0001)   Last location:                            4
(PID.TID 0000.0001)   Increment:                                1
(PID.TID 0000.0001)   grdchkWhichProc:                          0
(PID.TID 0000.0001)   iLocTile =       1  ,    jLocTile =       1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient check configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ECCO_READPARMS: opening data.ecco
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.ecco
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.ecco"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ******************
(PID.TID 0000.0001) ># ECCO cost function
(PID.TID 0000.0001) ># ******************
(PID.TID 0000.0001) > &ECCO_COST_NML
(PID.TID 0000.0001) > data_errfile    = 'data.err',
(PID.TID 0000.0001) > tbarfile        = 'tbar',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > temp0errfile    = 'errorTtot.err',
(PID.TID 0000.0001) > temperrfile     = 'errorTtot.err',
(PID.TID 0000.0001) > tdatfile        = 'FinalThetaObs.bin',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > mult_temp0  = 1.0,
(PID.TID 0000.0001) > mult_temp   = 1.0,
(PID.TID 0000.0001) > mult_obcsn  = 1.0,
(PID.TID 0000.0001) > mult_obcss  = 1.0,
(PID.TID 0000.0001) > mult_obcsw  = 1.0,
(PID.TID 0000.0001) > mult_obcse  = 1.0,
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) > cost_iprec  = 32,
(PID.TID 0000.0001) > cost_yftype = 'RL',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) > &ECCO_GENCOST_NML
(PID.TID 0000.0001) > gencost_avgperiod(1)  = 'month',
(PID.TID 0000.0001) > gencost_barfile(1) = 'm_theta',
(PID.TID 0000.0001) > gencost_datafile(1) = 'FinalThetaObs.bin',
(PID.TID 0000.0001) > gencost_errfile(1) = 'errorTtot.err',
(PID.TID 0000.0001) > gencost_name(1) = 'theta',
(PID.TID 0000.0001) > gencost_is3d(1) = .TRUE.,
(PID.TID 0000.0001) > gencost_preproc(1,1) = 'clim',
(PID.TID 0000.0001) > gencost_preproc_i(1,1)=12,
(PID.TID 0000.0001) > gencost_spmin(1) = -1.8,
(PID.TID 0000.0001) > gencost_spmax(1) = 40.,
(PID.TID 0000.0001) > gencost_spzero(1) = 0.,
(PID.TID 0000.0001) ># this is default
(PID.TID 0000.0001) > gencost_outputlevel(1)=0,
(PID.TID 0000.0001) > mult_gencost(1) = 1.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ECCO_READPARMS: finished reading #1: ecco_cost_nml
(PID.TID 0000.0001) ECCO_READPARMS: finished reading #2: ecco_gencost_nml
(PID.TID 0000.0001) ECCO_READPARMS: done
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: opening data.diagnostics
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.diagnostics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.diagnostics"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Diagnostic Package Choices
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) >#  dumpAtLast (logical): always write output at the end of simulation (default=F)
(PID.TID 0000.0001) >#  diag_mnc   (logical): write to NetCDF files (default=useMNC)
(PID.TID 0000.0001) >#--for each output-stream:
(PID.TID 0000.0001) >#  fileName(n) : prefix of the output file name (max 80c long) for outp.stream n
(PID.TID 0000.0001) >#  frequency(n):< 0 : write snap-shot output every |frequency| seconds
(PID.TID 0000.0001) >#               > 0 : write time-average output every frequency seconds
(PID.TID 0000.0001) >#  timePhase(n)     : write at time = timePhase + multiple of |frequency|
(PID.TID 0000.0001) >#    averagingFreq  : frequency (in s) for periodic averaging interval
(PID.TID 0000.0001) >#    averagingPhase : phase     (in s) for periodic averaging interval
(PID.TID 0000.0001) >#    repeatCycle    : number of averaging intervals in 1 cycle
(PID.TID 0000.0001) >#  levels(:,n) : list of levels to write to file (Notes: declared as REAL)
(PID.TID 0000.0001) >#                when this entry is missing, select all common levels of this list
(PID.TID 0000.0001) >#  fields(:,n) : list of selected diagnostics fields (8.c) in outp.stream n
(PID.TID 0000.0001) >#                (see "available_diagnostics.log" file for the full list of diags)
(PID.TID 0000.0001) >#  missing_value(n) : missing value for real-type fields in output file "n"
(PID.TID 0000.0001) >#  fileFlags(n)     : specific code (8c string) for output file "n"
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) > &DIAGNOSTICS_LIST
(PID.TID 0000.0001) ># dumpAtLast   = .TRUE.,
(PID.TID 0000.0001) ># diag_mnc     = .FALSE.,
(PID.TID 0000.0001) >#---
(PID.TID 0000.0001) ># fields(1:1,1)  = 'DRHODR  ',
(PID.TID 0000.0001) >#  filename(1) = 'dRhodz_5',
(PID.TID 0000.0001) ># frequency(1) = 864000.0,
(PID.TID 0000.0001) >#---
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) ># Parameter for Diagnostics of per level statistics:
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) >#  diagSt_mnc (logical): write stat-diags to NetCDF files (default=diag_mnc)
(PID.TID 0000.0001) >#  diagSt_regMaskFile : file containing the region-mask to read-in
(PID.TID 0000.0001) >#  nSetRegMskFile   : number of region-mask sets within the region-mask file
(PID.TID 0000.0001) >#  set_regMask(i)   : region-mask set-index that identifies the region "i"
(PID.TID 0000.0001) >#  val_regMask(i)   : region "i" identifier value in the region mask
(PID.TID 0000.0001) >#--for each output-stream:
(PID.TID 0000.0001) >#  stat_fName(n) : prefix of the output file name (max 80c long) for outp.stream n
(PID.TID 0000.0001) >#  stat_freq(n):< 0 : write snap-shot output every |stat_freq| seconds
(PID.TID 0000.0001) >#               > 0 : write time-average output every stat_freq seconds
(PID.TID 0000.0001) >#  stat_phase(n)    : write at time = stat_phase + multiple of |stat_freq|
(PID.TID 0000.0001) >#  stat_region(:,n) : list of "regions" (default: 1 region only=global)
(PID.TID 0000.0001) >#  stat_fields(:,n) : list of selected diagnostics fields (8.c) in outp.stream n
(PID.TID 0000.0001) >#                (see "available_diagnostics.log" file for the full list of diags)
(PID.TID 0000.0001) >#--------------------
(PID.TID 0000.0001) > &DIAG_STATIS_PARMS
(PID.TID 0000.0001) ># an example just to check the agreement with MONITOR output:
(PID.TID 0000.0001) ># stat_fields(1:5,1)  = 'ETAN    ','UVEL    ','VVEL    ','WVEL    ', 'THETA   ',
(PID.TID 0000.0001) >#  stat_fName(1) = 'dynStDiag',
(PID.TID 0000.0001) >#   stat_freq(1) = -864000.,
(PID.TID 0000.0001) >#  stat_phase(1) = 0.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "diagnostics_list": start
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "diagnostics_list": OK
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "DIAG_STATIS_PARMS": start
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "DIAG_STATIS_PARMS": OK
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: global parameter summary:
(PID.TID 0000.0001)  dumpAtLast = /* always write time-ave diags at the end */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diag_mnc =   /* write NetCDF output files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useMissingValue = /* put MissingValue where mask = 0 */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_maxIters = /* max number of iters in diag_cg2d */
(PID.TID 0000.0001)                     500
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_resTarget = /* residual target for diag_cg2d */
(PID.TID 0000.0001)                 1.000000000000000E-08
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_pcOffDFac = /* preconditioner off-diagonal factor */
(PID.TID 0000.0001)                 9.611687812379854E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: active diagnostics summary:
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: statistics diags. summary:
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SET_PARMS: done
(PID.TID 0000.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0000.0001) %MON XC_max                       =   1.5875000000000E+01
(PID.TID 0000.0001) %MON XC_min                       =   1.2500000000000E-01
(PID.TID 0000.0001) %MON XC_mean                      =   8.0000000000000E+00
(PID.TID 0000.0001) %MON XC_sd                        =   4.6182383004778E+00
(PID.TID 0000.0001) %MON XG_max                       =   1.5750000000000E+01
(PID.TID 0000.0001) %MON XG_min                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON XG_mean                      =   7.8750000000000E+00
(PID.TID 0000.0001) %MON XG_sd                        =   4.6182383004778E+00
(PID.TID 0000.0001) %MON DXC_max                      =   2.5164565846439E+04
(PID.TID 0000.0001) %MON DXC_min                      =   2.1016408153767E+04
(PID.TID 0000.0001) %MON DXC_mean                     =   2.3234669796800E+04
(PID.TID 0000.0001) %MON DXC_sd                       =   1.2196670107312E+03
(PID.TID 0000.0001) %MON DXF_max                      =   2.5164565846439E+04
(PID.TID 0000.0001) %MON DXF_min                      =   2.1016408153767E+04
(PID.TID 0000.0001) %MON DXF_mean                     =   2.3234669796800E+04
(PID.TID 0000.0001) %MON DXF_sd                       =   1.2196670107312E+03
(PID.TID 0000.0001) %MON DXG_max                      =   2.5190252460503E+04
(PID.TID 0000.0001) %MON DXG_min                      =   2.1056040215949E+04
(PID.TID 0000.0001) %MON DXG_mean                     =   2.3267533068028E+04
(PID.TID 0000.0001) %MON DXG_sd                       =   1.2155846267781E+03
(PID.TID 0000.0001) %MON DXV_max                      =   2.5190252460503E+04
(PID.TID 0000.0001) %MON DXV_min                      =   2.1056040215949E+04
(PID.TID 0000.0001) %MON DXV_mean                     =   2.3267533068028E+04
(PID.TID 0000.0001) %MON DXV_sd                       =   1.2155846267781E+03
(PID.TID 0000.0001) %MON YC_max                       =   4.0875000000000E+01
(PID.TID 0000.0001) %MON YC_min                       =   2.5125000000000E+01
(PID.TID 0000.0001) %MON YC_mean                      =   3.3000000000000E+01
(PID.TID 0000.0001) %MON YC_sd                        =   4.6182383004778E+00
(PID.TID 0000.0001) %MON YG_max                       =   4.0750000000000E+01
(PID.TID 0000.0001) %MON YG_min                       =   2.5000000000000E+01
(PID.TID 0000.0001) %MON YG_mean                      =   3.2875000000000E+01
(PID.TID 0000.0001) %MON YG_sd                        =   4.6182383004778E+00
(PID.TID 0000.0001) %MON DYC_max                      =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYC_min                      =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYC_mean                     =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYC_sd                       =   4.7293724492192E-10
(PID.TID 0000.0001) %MON DYF_max                      =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYF_min                      =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYF_mean                     =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYF_sd                       =   4.7293724492192E-10
(PID.TID 0000.0001) %MON DYG_max                      =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYG_min                      =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYG_mean                     =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYG_sd                       =   4.7293724492192E-10
(PID.TID 0000.0001) %MON DYU_max                      =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYU_min                      =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYU_mean                     =   2.7794368338010E+04
(PID.TID 0000.0001) %MON DYU_sd                       =   4.7293724492192E-10
(PID.TID 0000.0001) %MON RA_max                       =   6.9943265735959E+08
(PID.TID 0000.0001) %MON RA_min                       =   5.8413732598622E+08
(PID.TID 0000.0001) %MON RA_mean                      =   6.4579245825328E+08
(PID.TID 0000.0001) %MON RA_sd                        =   3.3899847254083E+07
(PID.TID 0000.0001) %MON RAW_max                      =   6.9943265735959E+08
(PID.TID 0000.0001) %MON RAW_min                      =   5.8413732598622E+08
(PID.TID 0000.0001) %MON RAW_mean                     =   6.4579245825328E+08
(PID.TID 0000.0001) %MON RAW_sd                       =   3.3899847254083E+07
(PID.TID 0000.0001) %MON RAS_max                      =   7.0014660000591E+08
(PID.TID 0000.0001) %MON RAS_min                      =   5.8523887324667E+08
(PID.TID 0000.0001) %MON RAS_mean                     =   6.4670587139401E+08
(PID.TID 0000.0001) %MON RAS_sd                       =   3.3786380060804E+07
(PID.TID 0000.0001) %MON RAZ_max                      =   7.0014660000591E+08
(PID.TID 0000.0001) %MON RAZ_min                      =   5.8523887324667E+08
(PID.TID 0000.0001) %MON RAZ_mean                     =   6.4670587139401E+08
(PID.TID 0000.0001) %MON RAZ_sd                       =   3.3786380060804E+07
(PID.TID 0000.0001) %MON AngleCS_max                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_min                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_mean                 =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_max                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_min                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_mean                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Calendar configuration >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) modelstart = /* Start time of the model integration [s] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) modelend  = /* End time of the model integration [s] */
(PID.TID 0000.0001)                 4.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) modelStep = /* Time interval for a model forward step [s] */
(PID.TID 0000.0001)                 1.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingGregorianCalendar= /* Calendar Type: Gregorian Calendar */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingJulianCalendar = /* Calendar Type: Julian Calendar */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingNoLeapYearCal  = /* Calendar Type: without Leap Year */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingModelCalendar  = /* Calendar Type: Model Calendar */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) modelStartDate YYYYMMDD = /* Model start date YYYY-MM-DD */
(PID.TID 0000.0001)                20070101
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)   modelStartDate HHMMSS = /* Model start date HH-MM-SS  */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) modelEndDate   YYYYMMDD = /* Model end date YYYY-MM-DD */
(PID.TID 0000.0001)                20070101
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)   modelEndDate   HHMMSS = /* Model end date HH-MM-SS  */
(PID.TID 0000.0001)                   12000
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) intyears = /* Number of calendar years affected by the integration */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) intmonths= /* Number of calendar months affected by the integration */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) intdays = /* Number of calendar days affected by the integration */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) modelIter0 = /* Base timestep number  */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) modelIterEnd = /* Final timestep number  */
(PID.TID 0000.0001)                       4
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) modelIntSteps= /* Number of model timesteps  */
(PID.TID 0000.0001)                       4
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Calendar configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GAD_INIT_FIXED: GAD_OlMinSize=  2  0  1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // GAD parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0000.0001)                      30
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0000.0001)                      30
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0000.0001)                      30
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0000.0001)                      30
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // External forcing (EXF) configuration >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  EXF general parameters:
(PID.TID 0000.0001) 
(PID.TID 0000.0001) exf_iprec = /* exf file precision */
(PID.TID 0000.0001)                      32
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useExfYearlyFields = /* add extension _YEAR to input file names */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) twoDigitYear = /* use 2-digit year extension */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useExfCheckRange = /* check for fields range */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diags_opOceWeighted = /* weight flux diags by open-ocean fraction */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_debugLev = /* select EXF-debug printing level */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_monFreq  = /* EXF monitor frequency [ s ] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) repeatPeriod = /* period for cycling forcing dataset [ s ] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) climTempFreeze= /* Minimum climatological temperature [deg.C] */
(PID.TID 0000.0001)                -1.900000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) windStressMax = /* Maximum absolute windstress [ Pa ] */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) stressIsOnCgrid = /* set u,v_stress on Arakawa C-grid */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateStressOnAgrid = /* rotate u,v_stress on Arakawa A-grid */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cen2kel = /* conversion of deg. Centigrade to Kelvin [K] */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity_mks= /* gravitational acceleration [m/s^2] */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) atmrho =  /* mean atmospheric density [kg/m^3] */
(PID.TID 0000.0001)                 1.200000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) atmcp =  /* mean atmospheric specific heat [J/kg/K] */
(PID.TID 0000.0001)                 1.005000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) flamb =  /* latent heat of evaporation [J/kg] */
(PID.TID 0000.0001)                 2.500000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) flami =  /* latent heat of pure-ice melting [J/kg] */
(PID.TID 0000.0001)                 3.340000000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cvapor_fac = /* const. for Saturation calculation [?] */
(PID.TID 0000.0001)                 6.403800000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cvapor_exp = /* const. for Saturation calculation [?] */
(PID.TID 0000.0001)                 5.107400000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cvapor_fac_ice= /* const. for Saturation calculation [?] */
(PID.TID 0000.0001)                 1.163780000000000E+07
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cvapor_exp_ice= /* const. for Saturation calculation [?] */
(PID.TID 0000.0001)                 5.897800000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) humid_fac = /* humidity coef. in virtual temp. [(kg/kg)^-1] */
(PID.TID 0000.0001)                 6.060000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gamma_blk = /* adiabatic lapse rate [?] */
(PID.TID 0000.0001)                 1.000000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltsat = /* reduction of Qsat over salty water [-] */
(PID.TID 0000.0001)                 9.800000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) noNegativeEvap = /* prevent negative Evaporation */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sstExtrapol = /* extrapolation coeff from lev. 1 & 2 to surf [-] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cDrag_1 = /* coef used in drag calculation [?] */
(PID.TID 0000.0001)                 2.700000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cDrag_2 = /* coef used in drag calculation [?] */
(PID.TID 0000.0001)                 1.420000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cDrag_3 = /* coef used in drag calculation [?] */
(PID.TID 0000.0001)                 7.640000000000000E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cStanton_1 = /* coef used in Stanton number calculation [?] */
(PID.TID 0000.0001)                 3.270000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cStanton_2 = /* coef used in Stanton number calculation [?] */
(PID.TID 0000.0001)                 1.800000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cDalton = /* coef used in Dalton number calculation [?] */
(PID.TID 0000.0001)                 3.460000000000000E-02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_scal_BulkCdn= /* Drag coefficient scaling factor [-] */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) zolmin = /* minimum stability parameter [?] */
(PID.TID 0000.0001)                -1.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psim_fac = /* coef used in turbulent fluxes calculation [-] */
(PID.TID 0000.0001)                 5.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) zref =  /* reference height [ m ] */
(PID.TID 0000.0001)                 1.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hu =  /* height of mean wind [ m ] */
(PID.TID 0000.0001)                 1.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ht =  /* height of mean temperature [ m ] */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hq =  /* height of mean spec.humidity [ m ] */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uMin = /* minimum wind speed [m/s] */
(PID.TID 0000.0001)                 5.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStabilityFct_overIce= /* transfert Coeffs over sea-ice depend on stability */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_iceCd = /* drag coefficient over sea-ice (fixed) [-] */
(PID.TID 0000.0001)                 1.630000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_iceCe = /* transfert coeff. over sea-ice, for Evap (fixed) [-] */
(PID.TID 0000.0001)                 1.630000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_iceCh = /* transfert coeff. over sea-ice, Sens.Heat.(fixed)[-] */
(PID.TID 0000.0001)                 1.630000000000000E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exf_albedo =  /* Sea-water albedo [-] */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useExfZenAlbedo = /* Sea-water albedo varies with zenith angle */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_ZenAlbedo = /* Sea-water albedo computation method */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useExfZenIncoming = /* compute incoming solar radiation */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ocean_emissivity = /* longwave ocean-surface emissivity [-] */
(PID.TID 0000.0001)                 9.700176366843034E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ice_emissivity = /* longwave seaice emissivity [-] */
(PID.TID 0000.0001)                 9.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snow_emissivity = /* longwave snow  emissivity [-] */
(PID.TID 0000.0001)                 9.500000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  EXF main CPP flags:
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // USE_EXF_INTERPOLATION:          NOT defined
(PID.TID 0000.0001) // ALLOW_ATM_TEMP:                 NOT defined
(PID.TID 0000.0001) // ALLOW_ATM_WIND (useAtmWind):    NOT defined
(PID.TID 0000.0001) // ALLOW_DOWNWARD_RADIATION:       NOT defined
(PID.TID 0000.0001) // ALLOW_BULKFORMULAE:             NOT defined
(PID.TID 0000.0001) // EXF_READ_EVAP:                  NOT defined
(PID.TID 0000.0001) // ALLOW_RUNOFF:                   NOT defined
(PID.TID 0000.0001) // ALLOW_SALTFLX:                  NOT defined
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // External forcing (EXF) climatology configuration :
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ALLOW_CLIMSST_RELAXATION:       NOT defined
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ALLOW_CLIMSSS_RELAXATION:       NOT defined
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // External forcing (EXF) configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) etaday defined by gencost   0
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.err
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.err"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) >1, 0.0001
(PID.TID 0000.0001) >0.50000, 0.100000, 0.1
(PID.TID 0000.0001) >0.50000, 0.100000, 0.1
(PID.TID 0000.0001) >0.50000, 0.100000, 0.1
(PID.TID 0000.0001) >0.50000, 0.100000, 0.1
(PID.TID 0000.0001) >0.50000, 0.100000, 0.1
(PID.TID 0000.0001) >0.50000, 0.100000, 0.1
(PID.TID 0000.0001) >0.50000, 0.100000, 0.1
(PID.TID 0000.0001) >0.50000, 0.100000, 0.1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // ECCO configuration >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) gencost( 1) = theta
(PID.TID 0000.0001) -------------
(PID.TID 0000.0001)  data file = FinalThetaObs.bin
(PID.TID 0000.0001)  model file = m_theta
(PID.TID 0000.0001)  error file = errorTtot.err
(PID.TID 0000.0001)  preprocess = clim
(PID.TID 0000.0001)  gencost_flag =  1
(PID.TID 0000.0001)  gencost_outputlevel =  0
(PID.TID 0000.0001)  gencost_pointer3d =  1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) 
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // ECCO configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ctrl-wet 1:    nvarlength =        40960
(PID.TID 0000.0001) ctrl-wet 2: surface wet C =         1024
(PID.TID 0000.0001) ctrl-wet 3: surface wet W =         1024
(PID.TID 0000.0001) ctrl-wet 4: surface wet S =         1024
(PID.TID 0000.0001) ctrl-wet 4a:surface wet V =            0
(PID.TID 0000.0001) ctrl-wet 5: 3D wet points =         8192
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     1           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     2           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     3           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     4           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     5           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     6           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     7           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     8           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =     9           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    10           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    11           4
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    12           4
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    13           4
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    14           4
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    15           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    16           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    17           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    18           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    19           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    20           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    21           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    22           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    23           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    24           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    25           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    26           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    27           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    28           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    29           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    30           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    31           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    32           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    33           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    34           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    35           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    36           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    37           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    38           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    39           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    40           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    41           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    42           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    43           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    44           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    45           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    46           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    47           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    48           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    49           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    50           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    51           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    52           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    53           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    54           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    55           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    56           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    57           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    58           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    59           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    60           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    61           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    62           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    63           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    64           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    65           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    66           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    67           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    68           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    69           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    70           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    71           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    72           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    73           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    74           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    75           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    76           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    77           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    78           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    79           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    80           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    81           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    82           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    83           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    84           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    85           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    86           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    87           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    88           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    89           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    90           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    91           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    92           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    93           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    94           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    95           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    96           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    97           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    98           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =    99           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   100           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   101           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   102           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   103           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   104           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   105           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   106           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   107           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   108           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   109           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   110           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   111           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   112           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   113           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   114           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   115           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   116           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   117           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   118           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   119           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   120           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   121           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   122           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   123           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   124           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   125           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   126           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   127           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   128           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   129           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   130           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   131           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   132           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   133           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   134           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   135           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   136           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   137           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   138           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   139           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   140           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   141           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   142           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   143           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   144           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   145           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   146           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   147           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   148           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   149           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   150           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   151           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   152           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   153           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   154           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   155           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   156           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   157           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   158           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   159           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   160           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   161           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   162           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   163           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   164           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   165           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   166           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   167           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   168           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   169           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   170           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   171           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   172           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   173           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   174           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   175           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   176           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   177           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   178           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   179           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   180           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   181           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   182           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   183           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   184           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   185           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   186           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   187           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   188           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   189           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   190           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   191           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   192           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   193           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   194           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   195           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   196           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   197           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   198           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   199           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   200           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   201           1
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   202           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   203           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   204           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   205           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   206           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   207           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   208           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   209           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   210           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   211           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   212           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   213           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   214           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   215           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   216           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   217           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   218           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   219           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   220           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   221           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   222           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   223           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   224           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   225           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   226           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   227           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   228           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   229           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   230           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   231           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   232           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   233           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   234           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   235           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   236           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   237           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   238           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   239           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   240           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   241           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   242           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   243           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   244           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   245           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   246           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   247           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   248           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   249           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   250           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   251           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   252           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   253           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   254           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   255           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   256           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   257           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   258           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   259           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   260           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   261           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   262           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   263           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   264           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   265           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   266           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   267           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   268           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   269           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   270           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   271           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   272           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   273           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   274           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   275           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   276           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   277           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   278           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   279           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   280           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   281           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   282           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   283           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   284           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   285           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   286           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   287           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   288           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   289           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   290           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   291           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   292           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   293           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   294           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   295           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   296           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   297           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   298           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   299           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   300           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   301           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   302           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   303           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   304           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   305           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   306           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   307           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   308           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   309           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   310           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   311           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   312           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   313           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   314           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   315           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   316           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   317           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   318           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   319           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   320           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   321           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   322           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   323           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   324           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   325           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   326           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   327           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   328           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   329           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   330           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   331           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   332           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   333           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   334           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   335           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   336           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   337           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   338           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   339           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   340           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   341           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   342           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   343           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   344           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   345           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   346           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   347           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   348           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   349           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   350           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   351           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   352           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   353           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   354           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   355           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   356           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   357           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   358           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   359           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   360           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   361           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   362           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   363           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   364           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   365           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   366           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   367           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   368           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   369           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   370           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   371           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   372           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   373           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   374           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   375           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   376           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   377           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   378           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   379           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   380           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   381           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   382           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   383           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   384           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   385           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   386           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   387           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   388           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   389           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   390           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   391           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   392           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   393           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   394           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   395           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   396           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   397           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   398           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   399           0
(PID.TID 0000.0001) ctrl-wet 6: no recs for i =   400           0
(PID.TID 0000.0001) ctrl-wet 7: flux         16384
(PID.TID 0000.0001) ctrl-wet 8: atmos        16384
(PID.TID 0000.0001) ctrl-wet 9: surface wet obcsn =            0         0         0         0
(PID.TID 0000.0001) ctrl-wet 10: surface wet obcss =           32        32        32        32
(PID.TID 0000.0001) ctrl-wet 11: surface wet obcsw =           32        32        32        32
(PID.TID 0000.0001) ctrl-wet 12: surface wet obcse =            0         0         0         0
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl-wet 13: global nvarlength for Nr =    8       40960
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    1        4096        4096        4096           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    2        4096        4096        4096           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    3        4096        4096        4096           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    4        4096        4096        4096           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    5        4096        4096        4096           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    6        4096        4096        4096           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    7        4096        4096        4096           0
(PID.TID 0000.0001) ctrl-wet 14: global nWet C/S/W/V k=    8        4096        4096        4096           0
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl-wet 15a: global obcsN T,S,U,V k=    1          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15b: global obcsS T,S,U,V k=    1          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15c: global obcsW T,S,U,V k=    1          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15d: global obcsE T,S,U,V k=    1          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15a: global obcsN T,S,U,V k=    2          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15b: global obcsS T,S,U,V k=    2          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15c: global obcsW T,S,U,V k=    2          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15d: global obcsE T,S,U,V k=    2          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15a: global obcsN T,S,U,V k=    3          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15b: global obcsS T,S,U,V k=    3          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15c: global obcsW T,S,U,V k=    3          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15d: global obcsE T,S,U,V k=    3          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15a: global obcsN T,S,U,V k=    4          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15b: global obcsS T,S,U,V k=    4          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15c: global obcsW T,S,U,V k=    4          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15d: global obcsE T,S,U,V k=    4          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15a: global obcsN T,S,U,V k=    5          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15b: global obcsS T,S,U,V k=    5          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15c: global obcsW T,S,U,V k=    5          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15d: global obcsE T,S,U,V k=    5          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15a: global obcsN T,S,U,V k=    6          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15b: global obcsS T,S,U,V k=    6          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15c: global obcsW T,S,U,V k=    6          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15d: global obcsE T,S,U,V k=    6          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15a: global obcsN T,S,U,V k=    7          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15b: global obcsS T,S,U,V k=    7          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15c: global obcsW T,S,U,V k=    7          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15d: global obcsE T,S,U,V k=    7          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15a: global obcsN T,S,U,V k=    8          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15b: global obcsS T,S,U,V k=    8          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15c: global obcsW T,S,U,V k=    8          64          64          64          64
(PID.TID 0000.0001) ctrl-wet 15d: global obcsE T,S,U,V k=    8          64          64          64          64
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl-wet 16a: global SUM(K) obcsN T,S,U,V          512         512         512         512
(PID.TID 0000.0001) ctrl-wet 16b: global SUM(K) obcsS T,S,U,V          512         512         512         512
(PID.TID 0000.0001) ctrl-wet 16c: global SUM(K) obcsW T,S,U,V          512         512         512         512
(PID.TID 0000.0001) ctrl-wet 16d: global SUM(K) obcsE T,S,U,V          512         512         512         512
(PID.TID 0000.0001) ctrl-wet -------------------------------------------------
(PID.TID 0000.0001) ctrl_init_wet: no. of control variables:            5
(PID.TID 0000.0001) ctrl_init_wet: control vector length:           40960
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // control vector configuration  >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  Total number of ocean points per tile:
(PID.TID 0000.0001)  --------------------------------------
(PID.TID 0000.0001)  snx*sny*nr =     8192
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  Number of ocean points per tile:
(PID.TID 0000.0001)  --------------------------------
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0001 0001 008192 008192 008192
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0002 0001 008192 008192 008192
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0001 0002 008192 008192 008192
(PID.TID 0000.0001)  bi,bj,#(c/s/w): 0002 0002 008192 008192 008192
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  Settings of generic controls:
(PID.TID 0000.0001)  -----------------------------
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  ctrlUseGen  =     T /* use generic controls */
(PID.TID 0000.0001)  -> 3d control, genarr3d no.  1 is in use
(PID.TID 0000.0001)       file       = xx_theta
(PID.TID 0000.0001)       weight     = errorTtot.err64
(PID.TID 0000.0001)       index      =  0201
(PID.TID 0000.0001)       ncvarindex =  0301
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // control vector configuration  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGNOSTICS_SET_LEVELS: done
(PID.TID 0000.0001)  Total Nb of available Diagnostics: ndiagt=   229
(PID.TID 0000.0001)  write list of available Diagnostics to file: available_diagnostics.log
(PID.TID 0000.0001)   space allocated for all diagnostics:       0 levels
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: done
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGSTATS_SET_REGIONS: define no region
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001)   space allocated for all stats-diags:       0 levels
(PID.TID 0000.0001) DIAGSTATS_SET_POINTERS: done
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) %MON fCori_max                    =   9.5180214213275E-05
(PID.TID 0000.0001) %MON fCori_min                    =   6.1754768397872E-05
(PID.TID 0000.0001) %MON fCori_mean                   =   7.8957462017157E-05
(PID.TID 0000.0001) %MON fCori_sd                     =   9.8155346684319E-06
(PID.TID 0000.0001) %MON fCoriG_max                   =   9.4940057541481E-05
(PID.TID 0000.0001) %MON fCoriG_min                   =   6.1467334553587E-05
(PID.TID 0000.0001) %MON fCoriG_mean                  =   7.8692019555311E-05
(PID.TID 0000.0001) %MON fCoriG_sd                    =   9.8293922008013E-06
(PID.TID 0000.0001) %MON fCoriCos_max                 =   1.3168270981915E-04
(PID.TID 0000.0001) %MON fCoriCos_min                 =   1.0997597150061E-04
(PID.TID 0000.0001) %MON fCoriCos_mean                =   1.2158382939194E-04
(PID.TID 0000.0001) %MON fCoriCos_sd                  =   6.3823496113618E-06
(PID.TID 0000.0001) INI_CG2D: CG2D normalisation factor =  1.8974682031179044E-04
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model configuration
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0000.0001)               'OCEANIC'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0000.0001)                 2.000000000000000E+01,      /* K =  1 */
(PID.TID 0000.0001)                 1.600000000000000E+01,      /* K =  2 */
(PID.TID 0000.0001)                 1.200000000000000E+01,      /* K =  3 */
(PID.TID 0000.0001)                 1.000000000000000E+01,      /* K =  4 */
(PID.TID 0000.0001)                 9.000000000000000E+00,      /* K =  5 */
(PID.TID 0000.0001)                 8.000000000000000E+00,      /* K =  6 */
(PID.TID 0000.0001)                 7.000000000000000E+00,      /* K =  7 */
(PID.TID 0000.0001)                 6.000000000000000E+00       /* K =  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sRef =   /* Reference salinity profile ( g/kg ) */
(PID.TID 0000.0001)     8 @  3.500000000000000E+01              /* K =  1:  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0000.0001)     8 @  1.000000000000000E-04              /* K =  1:  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomVisc_pCell = /* Partial-cell in bottom Visc. BC */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectBotDragQuadr = /* select quadratic bottom drag options */
(PID.TID 0000.0001)                      -1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0000.0001)     8 @  0.000000000000000E+00              /* K =  1:  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0000.0001)     8 @  0.000000000000000E+00              /* K =  1:  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                -2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0000.0001)                -8.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 1.000000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosType =  /* Type of Equation of State */
(PID.TID 0000.0001)               'LINEAR'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tAlpha = /* Linear EOS thermal expansion coefficient ( 1/oC ) */
(PID.TID 0000.0001)                 2.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sBeta  = /* Linear EOS haline contraction coefficient ( 1/(g/kg) ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoNil    = /* Reference density for Linear EOS ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectP_inEOS_Zc = /* select pressure to use in EOS (0,1,2,3) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= -g*rhoConst*z ; 1= pRef (from tRef,sRef); 2= Hyd P ; 3= Hyd+NH P
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) surf_pRef = /* Surface reference pressure ( Pa ) */
(PID.TID 0000.0001)                 1.013250000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0000.0001)                 3.994000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0000.0001)     8 @  1.000000000000000E+00              /* K =  1:  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0000.0001)     9 @  1.000000000000000E+00              /* K =  1:  9 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacC = /* gravity factor (vs surf.) @ cell-Center (-) */
(PID.TID 0000.0001)     8 @  1.000000000000000E+00              /* K =  1:  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacF = /* gravity factor (vs surf.) @ W-Interface (-) */
(PID.TID 0000.0001)     9 @  1.000000000000000E+00              /* K =  1:  9 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0000.0001)                 8.640000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0000.0001)                 7.272205216643040E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0000.0001)                 9.999999999999999E-12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicDiv2DFlow =  /* Barot. Flow Div. implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exactConserv =  /* Exact Volume Conservation on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(g/kg)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(g/kg)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(g/kg)*/
(PID.TID 0000.0001)                 3.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectImplicitDrag= /* Implicit bot Drag options (0,1,2)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= Expl. ; 1= Impl. on provis. Vel ; 2= Fully Impl (with surf.P)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) metricTerms =  /* metric-Terms on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3dCoriolis = /* 3-D Coriolis on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriScheme= /* Scheme selector for Coriolis-Term */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : original discretization (simple averaging, no hFac)
(PID.TID 0000.0001)    = 1 : Wet-point averaging (Jamar & Ozer 1986)
(PID.TID 0000.0001)    = 2 : hFac weighted average (Angular Mom. conserving)
(PID.TID 0000.0001)    = 3 : energy conserving scheme using hFac weighted average
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useAbsVorticity= /* V.I Works with f+zeta in Coriolis */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectVortScheme= /* V.I Scheme selector for Vorticity-Term */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)    = 0 : enstrophy (Shallow-Water Eq.) conserving scheme by Sadourny, JAS 75
(PID.TID 0000.0001)    = 1 : same as 0 with modified hFac
(PID.TID 0000.0001)    = 2 : energy conserving scheme (used by Sadourny in JAS 75 paper)
(PID.TID 0000.0001)    = 3 : energy (general) and enstrophy (2D, nonDiv.) conserving scheme
(PID.TID 0000.0001)          from Sadourny (Burridge & Haseler, ECMWF Rep.4, 1977)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartMomAdv= /* V.I Non-linear terms Jamart flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindVorticity= /* V.I Upwind bias vorticity flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) highOrderVorticity= /* V.I High order vort. advect. flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindShear= /* V.I Upwind vertical Shear advection flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectKEscheme= /* V.I Kinetic Energy scheme selector */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momTidalForcing = /* Momentum Tidal forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0000.0001)                      32
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0000.0001)                      32
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  rwSuffixType =   /* select format of mds file suffix */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : myIter (I10.10) ;   = 1 : 100*myTime (100th sec) ;
(PID.TID 0000.0001)    = 2 : myTime (seconds);   = 3 : myTime/360 (10th of hr);
(PID.TID 0000.0001)    = 4 : myTime/3600 (hours)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0000.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0000.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0000.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0000.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0000.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0000.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0000.0001) debugLevel =  /* select debug printing level */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  plotLevel =  /* select PLOT_FIELD printing level */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0000.0001)                     500
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dChkResFreq =   /* 2d con. grad convergence test frequency */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0000.0001)                 1.000000000000000E-08
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0000.0001)                 1.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0000.0001)                 1.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0000.0001)     8 @  1.200000000000000E+03              /* K =  1:  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0000.0001)                 1.200000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) applyExchUV_early = /* Apply EXCH to U,V earlier in time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0000.0001)                       4
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0000.0001)                       4
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0000.0001)                 4.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0000.0001)                 2.628000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0000.0001)                 4.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0000.0001)                 1.800000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMin4hFacEdges = /* set hFacW,S as minimum of adjacent hFacC factor */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interViscAr_pCell = /* account for partial-cell in interior vert. viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) interDiffKr_pCell = /* account for partial-cell in interior vert. diffusion */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pCellMix_select = /* option to enhance mixing near surface & bottom */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) seaLev_Z =  /* reference height of sea-level [m] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) top_Pres =  /* reference pressure at the top [Pa] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0000.0001)                 1.000200040008002E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0000.0001)                 2.500000000000000E+02,      /* K =  1 */
(PID.TID 0000.0001)     7 @  5.000000000000000E+02,             /* K =  2:  8 */
(PID.TID 0000.0001)                 2.500000000000000E+02       /* K =  9 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0000.0001)     8 @  5.000000000000000E+02              /* K =  1:  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    64 @  2.500000000000000E-01              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    64 @  2.500000000000000E-01              /* J =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 2.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0000.0001)                 6.370000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 1.250000000000000E-01,      /* I =  1 */
(PID.TID 0000.0001)                 3.750000000000000E-01,      /* I =  2 */
(PID.TID 0000.0001)                 6.250000000000000E-01,      /* I =  3 */
(PID.TID 0000.0001)                 8.750000000000000E-01,      /* I =  4 */
(PID.TID 0000.0001)                 1.125000000000000E+00,      /* I =  5 */
(PID.TID 0000.0001)                 1.375000000000000E+00,      /* I =  6 */
(PID.TID 0000.0001)                 1.625000000000000E+00,      /* I =  7 */
(PID.TID 0000.0001)                 1.875000000000000E+00,      /* I =  8 */
(PID.TID 0000.0001)                 2.125000000000000E+00,      /* I =  9 */
(PID.TID 0000.0001)                 2.375000000000000E+00,      /* I = 10 */
(PID.TID 0000.0001)                 2.625000000000000E+00,      /* I = 11 */
(PID.TID 0000.0001)                 2.875000000000000E+00,      /* I = 12 */
(PID.TID 0000.0001)                 3.125000000000000E+00,      /* I = 13 */
(PID.TID 0000.0001)                 3.375000000000000E+00,      /* I = 14 */
(PID.TID 0000.0001)                 3.625000000000000E+00,      /* I = 15 */
(PID.TID 0000.0001)                 3.875000000000000E+00,      /* I = 16 */
(PID.TID 0000.0001)                 4.125000000000000E+00,      /* I = 17 */
(PID.TID 0000.0001)                 4.375000000000000E+00,      /* I = 18 */
(PID.TID 0000.0001)                 4.625000000000000E+00,      /* I = 19 */
(PID.TID 0000.0001)                 4.875000000000000E+00,      /* I = 20 */
(PID.TID 0000.0001)                 5.125000000000000E+00,      /* I = 21 */
(PID.TID 0000.0001)                 5.375000000000000E+00,      /* I = 22 */
(PID.TID 0000.0001)                 5.625000000000000E+00,      /* I = 23 */
(PID.TID 0000.0001)                 5.875000000000000E+00,      /* I = 24 */
(PID.TID 0000.0001)                 6.125000000000000E+00,      /* I = 25 */
(PID.TID 0000.0001)                 6.375000000000000E+00,      /* I = 26 */
(PID.TID 0000.0001)                 6.625000000000000E+00,      /* I = 27 */
(PID.TID 0000.0001)                 6.875000000000000E+00,      /* I = 28 */
(PID.TID 0000.0001)                 7.125000000000000E+00,      /* I = 29 */
(PID.TID 0000.0001)                 7.375000000000000E+00,      /* I = 30 */
(PID.TID 0000.0001)                 7.625000000000000E+00,      /* I = 31 */
(PID.TID 0000.0001)                 7.875000000000000E+00,      /* I = 32 */
(PID.TID 0000.0001)                 8.125000000000000E+00,      /* I = 33 */
(PID.TID 0000.0001)                 8.375000000000000E+00,      /* I = 34 */
(PID.TID 0000.0001)                 8.625000000000000E+00,      /* I = 35 */
(PID.TID 0000.0001)                 8.875000000000000E+00,      /* I = 36 */
(PID.TID 0000.0001)                 9.125000000000000E+00,      /* I = 37 */
(PID.TID 0000.0001)                 9.375000000000000E+00,      /* I = 38 */
(PID.TID 0000.0001)                 9.625000000000000E+00,      /* I = 39 */
(PID.TID 0000.0001)                 9.875000000000000E+00,      /* I = 40 */
(PID.TID 0000.0001)                 1.012500000000000E+01,      /* I = 41 */
(PID.TID 0000.0001)                 1.037500000000000E+01,      /* I = 42 */
(PID.TID 0000.0001)                 1.062500000000000E+01,      /* I = 43 */
(PID.TID 0000.0001)                 1.087500000000000E+01,      /* I = 44 */
(PID.TID 0000.0001)                 1.112500000000000E+01,      /* I = 45 */
(PID.TID 0000.0001)                 1.137500000000000E+01,      /* I = 46 */
(PID.TID 0000.0001)                 1.162500000000000E+01,      /* I = 47 */
(PID.TID 0000.0001)                 1.187500000000000E+01,      /* I = 48 */
(PID.TID 0000.0001)                 1.212500000000000E+01,      /* I = 49 */
(PID.TID 0000.0001)                 1.237500000000000E+01,      /* I = 50 */
(PID.TID 0000.0001)                 1.262500000000000E+01,      /* I = 51 */
(PID.TID 0000.0001)                 1.287500000000000E+01,      /* I = 52 */
(PID.TID 0000.0001)                 1.312500000000000E+01,      /* I = 53 */
(PID.TID 0000.0001)                 1.337500000000000E+01,      /* I = 54 */
(PID.TID 0000.0001)                 1.362500000000000E+01,      /* I = 55 */
(PID.TID 0000.0001)                 1.387500000000000E+01,      /* I = 56 */
(PID.TID 0000.0001)                 1.412500000000000E+01,      /* I = 57 */
(PID.TID 0000.0001)                 1.437500000000000E+01,      /* I = 58 */
(PID.TID 0000.0001)                 1.462500000000000E+01,      /* I = 59 */
(PID.TID 0000.0001)                 1.487500000000000E+01,      /* I = 60 */
(PID.TID 0000.0001)                 1.512500000000000E+01,      /* I = 61 */
(PID.TID 0000.0001)                 1.537500000000000E+01,      /* I = 62 */
(PID.TID 0000.0001)                 1.562500000000000E+01,      /* I = 63 */
(PID.TID 0000.0001)                 1.587500000000000E+01       /* I = 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 2.512500000000000E+01,      /* J =  1 */
(PID.TID 0000.0001)                 2.537500000000000E+01,      /* J =  2 */
(PID.TID 0000.0001)                 2.562500000000000E+01,      /* J =  3 */
(PID.TID 0000.0001)                 2.587500000000000E+01,      /* J =  4 */
(PID.TID 0000.0001)                 2.612500000000000E+01,      /* J =  5 */
(PID.TID 0000.0001)                 2.637500000000000E+01,      /* J =  6 */
(PID.TID 0000.0001)                 2.662500000000000E+01,      /* J =  7 */
(PID.TID 0000.0001)                 2.687500000000000E+01,      /* J =  8 */
(PID.TID 0000.0001)                 2.712500000000000E+01,      /* J =  9 */
(PID.TID 0000.0001)                 2.737500000000000E+01,      /* J = 10 */
(PID.TID 0000.0001)                 2.762500000000000E+01,      /* J = 11 */
(PID.TID 0000.0001)                 2.787500000000000E+01,      /* J = 12 */
(PID.TID 0000.0001)                 2.812500000000000E+01,      /* J = 13 */
(PID.TID 0000.0001)                 2.837500000000000E+01,      /* J = 14 */
(PID.TID 0000.0001)                 2.862500000000000E+01,      /* J = 15 */
(PID.TID 0000.0001)                 2.887500000000000E+01,      /* J = 16 */
(PID.TID 0000.0001)                 2.912500000000000E+01,      /* J = 17 */
(PID.TID 0000.0001)                 2.937500000000000E+01,      /* J = 18 */
(PID.TID 0000.0001)                 2.962500000000000E+01,      /* J = 19 */
(PID.TID 0000.0001)                 2.987500000000000E+01,      /* J = 20 */
(PID.TID 0000.0001)                 3.012500000000000E+01,      /* J = 21 */
(PID.TID 0000.0001)                 3.037500000000000E+01,      /* J = 22 */
(PID.TID 0000.0001)                 3.062500000000000E+01,      /* J = 23 */
(PID.TID 0000.0001)                 3.087500000000000E+01,      /* J = 24 */
(PID.TID 0000.0001)                 3.112500000000000E+01,      /* J = 25 */
(PID.TID 0000.0001)                 3.137500000000000E+01,      /* J = 26 */
(PID.TID 0000.0001)                 3.162500000000000E+01,      /* J = 27 */
(PID.TID 0000.0001)                 3.187500000000000E+01,      /* J = 28 */
(PID.TID 0000.0001)                 3.212500000000000E+01,      /* J = 29 */
(PID.TID 0000.0001)                 3.237500000000000E+01,      /* J = 30 */
(PID.TID 0000.0001)                 3.262500000000000E+01,      /* J = 31 */
(PID.TID 0000.0001)                 3.287500000000000E+01,      /* J = 32 */
(PID.TID 0000.0001)                 3.312500000000000E+01,      /* J = 33 */
(PID.TID 0000.0001)                 3.337500000000000E+01,      /* J = 34 */
(PID.TID 0000.0001)                 3.362500000000000E+01,      /* J = 35 */
(PID.TID 0000.0001)                 3.387500000000000E+01,      /* J = 36 */
(PID.TID 0000.0001)                 3.412500000000000E+01,      /* J = 37 */
(PID.TID 0000.0001)                 3.437500000000000E+01,      /* J = 38 */
(PID.TID 0000.0001)                 3.462500000000000E+01,      /* J = 39 */
(PID.TID 0000.0001)                 3.487500000000000E+01,      /* J = 40 */
(PID.TID 0000.0001)                 3.512500000000000E+01,      /* J = 41 */
(PID.TID 0000.0001)                 3.537500000000000E+01,      /* J = 42 */
(PID.TID 0000.0001)                 3.562500000000000E+01,      /* J = 43 */
(PID.TID 0000.0001)                 3.587500000000000E+01,      /* J = 44 */
(PID.TID 0000.0001)                 3.612500000000000E+01,      /* J = 45 */
(PID.TID 0000.0001)                 3.637500000000000E+01,      /* J = 46 */
(PID.TID 0000.0001)                 3.662500000000000E+01,      /* J = 47 */
(PID.TID 0000.0001)                 3.687500000000000E+01,      /* J = 48 */
(PID.TID 0000.0001)                 3.712500000000000E+01,      /* J = 49 */
(PID.TID 0000.0001)                 3.737500000000000E+01,      /* J = 50 */
(PID.TID 0000.0001)                 3.762500000000000E+01,      /* J = 51 */
(PID.TID 0000.0001)                 3.787500000000000E+01,      /* J = 52 */
(PID.TID 0000.0001)                 3.812500000000000E+01,      /* J = 53 */
(PID.TID 0000.0001)                 3.837500000000000E+01,      /* J = 54 */
(PID.TID 0000.0001)                 3.862500000000000E+01,      /* J = 55 */
(PID.TID 0000.0001)                 3.887500000000000E+01,      /* J = 56 */
(PID.TID 0000.0001)                 3.912500000000000E+01,      /* J = 57 */
(PID.TID 0000.0001)                 3.937500000000000E+01,      /* J = 58 */
(PID.TID 0000.0001)                 3.962500000000000E+01,      /* J = 59 */
(PID.TID 0000.0001)                 3.987500000000000E+01,      /* J = 60 */
(PID.TID 0000.0001)                 4.012500000000000E+01,      /* J = 61 */
(PID.TID 0000.0001)                 4.037500000000000E+01,      /* J = 62 */
(PID.TID 0000.0001)                 4.062500000000000E+01,      /* J = 63 */
(PID.TID 0000.0001)                 4.087500000000000E+01       /* J = 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0000.0001)                -2.500000000000000E+02,      /* K =  1 */
(PID.TID 0000.0001)                -7.500000000000000E+02,      /* K =  2 */
(PID.TID 0000.0001)                -1.250000000000000E+03,      /* K =  3 */
(PID.TID 0000.0001)                -1.750000000000000E+03,      /* K =  4 */
(PID.TID 0000.0001)                -2.250000000000000E+03,      /* K =  5 */
(PID.TID 0000.0001)                -2.750000000000000E+03,      /* K =  6 */
(PID.TID 0000.0001)                -3.250000000000000E+03,      /* K =  7 */
(PID.TID 0000.0001)                -3.750000000000000E+03       /* K =  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -5.000000000000000E+02,      /* K =  2 */
(PID.TID 0000.0001)                -1.000000000000000E+03,      /* K =  3 */
(PID.TID 0000.0001)                -1.500000000000000E+03,      /* K =  4 */
(PID.TID 0000.0001)                -2.000000000000000E+03,      /* K =  5 */
(PID.TID 0000.0001)                -2.500000000000000E+03,      /* K =  6 */
(PID.TID 0000.0001)                -3.000000000000000E+03,      /* K =  7 */
(PID.TID 0000.0001)                -3.500000000000000E+03,      /* K =  8 */
(PID.TID 0000.0001)                -4.000000000000000E+03       /* K =  9 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0000.0001)     8 @  1.000000000000000E+00              /* K =  1:  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0000.0001)     9 @  1.000000000000000E+00              /* K =  1:  9 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rVel2wUnit = /* convert units: rVel -> wSpeed (=1 if z-coord)*/
(PID.TID 0000.0001)     9 @  1.000000000000000E+00              /* K =  1:  9 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) wUnit2rVel = /* convert units: wSpeed -> rVel (=1 if z-coord)*/
(PID.TID 0000.0001)     9 @  1.000000000000000E+00              /* K =  1:  9 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)     2 @  1.569600000000000E-05,             /* K =  2:  3 */
(PID.TID 0000.0001)                 7.848000000000000E-06,      /* K =  4 */
(PID.TID 0000.0001)     4 @  3.924000000000000E-06              /* K =  5:  8 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.516456584643870E+04              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.516456584643870E+04,      /* J =  1 */
(PID.TID 0000.0001)                 2.511283341791677E+04,      /* J =  2 */
(PID.TID 0000.0001)                 2.506062287724593E+04,      /* J =  3 */
(PID.TID 0000.0001)                 2.500793521843962E+04,      /* J =  4 */
(PID.TID 0000.0001)                 2.495477144459491E+04,      /* J =  5 */
(PID.TID 0000.0001)                 2.490113256787343E+04,      /* J =  6 */
(PID.TID 0000.0001)                 2.484701960948206E+04,      /* J =  7 */
(PID.TID 0000.0001)                 2.479243359965354E+04,      /* J =  8 */
(PID.TID 0000.0001)                 2.473737557762680E+04,      /* J =  9 */
(PID.TID 0000.0001)                 2.468184659162722E+04,      /* J = 10 */
(PID.TID 0000.0001)                 2.462584769884665E+04,      /* J = 11 */
(PID.TID 0000.0001)                 2.456937996542330E+04,      /* J = 12 */
(PID.TID 0000.0001)                 2.451244446642140E+04,      /* J = 13 */
(PID.TID 0000.0001)                 2.445504228581079E+04,      /* J = 14 */
(PID.TID 0000.0001)                 2.439717451644624E+04,      /* J = 15 */
(PID.TID 0000.0001)                 2.433884226004667E+04,      /* J = 16 */
(PID.TID 0000.0001)                 2.428004662717415E+04,      /* J = 17 */
(PID.TID 0000.0001)                 2.422078873721278E+04,      /* J = 18 */
(PID.TID 0000.0001)                 2.416106971834737E+04,      /* J = 19 */
(PID.TID 0000.0001)                 2.410089070754197E+04,      /* J = 20 */
(PID.TID 0000.0001)                 2.404025285051817E+04,      /* J = 21 */
(PID.TID 0000.0001)                 2.397915730173338E+04,      /* J = 22 */
(PID.TID 0000.0001)                 2.391760522435877E+04,      /* J = 23 */
(PID.TID 0000.0001)                 2.385559779025718E+04,      /* J = 24 */
(PID.TID 0000.0001)                 2.379313617996076E+04,      /* J = 25 */
(PID.TID 0000.0001)                 2.373022158264854E+04,      /* J = 26 */
(PID.TID 0000.0001)                 2.366685519612378E+04,      /* J = 27 */
(PID.TID 0000.0001)                 2.360303822679111E+04,      /* J = 28 */
(PID.TID 0000.0001)                 2.353877188963365E+04,      /* J = 29 */
(PID.TID 0000.0001)                 2.347405740818982E+04,      /* J = 30 */
(PID.TID 0000.0001)                 2.340889601453007E+04,      /* J = 31 */
(PID.TID 0000.0001)                 2.334328894923340E+04,      /* J = 32 */
(PID.TID 0000.0001)                 2.327723746136375E+04,      /* J = 33 */
(PID.TID 0000.0001)                 2.321074280844627E+04,      /* J = 34 */
(PID.TID 0000.0001)                 2.314380625644327E+04,      /* J = 35 */
(PID.TID 0000.0001)                 2.307642907973023E+04,      /* J = 36 */
(PID.TID 0000.0001)                 2.300861256107146E+04,      /* J = 37 */
(PID.TID 0000.0001)                 2.294035799159574E+04,      /* J = 38 */
(PID.TID 0000.0001)                 2.287166667077167E+04,      /* J = 39 */
(PID.TID 0000.0001)                 2.280253990638299E+04,      /* J = 40 */
(PID.TID 0000.0001)                 2.273297901450364E+04,      /* J = 41 */
(PID.TID 0000.0001)                 2.266298531947274E+04,      /* J = 42 */
(PID.TID 0000.0001)                 2.259256015386935E+04,      /* J = 43 */
(PID.TID 0000.0001)                 2.252170485848710E+04,      /* J = 44 */
(PID.TID 0000.0001)                 2.245042078230868E+04,      /* J = 45 */
(PID.TID 0000.0001)                 2.237870928248015E+04,      /* J = 46 */
(PID.TID 0000.0001)                 2.230657172428511E+04,      /* J = 47 */
(PID.TID 0000.0001)                 2.223400948111865E+04,      /* J = 48 */
(PID.TID 0000.0001)                 2.216102393446132E+04,      /* J = 49 */
(PID.TID 0000.0001)                 2.208761647385271E+04,      /* J = 50 */
(PID.TID 0000.0001)                 2.201378849686504E+04,      /* J = 51 */
(PID.TID 0000.0001)                 2.193954140907658E+04,      /* J = 52 */
(PID.TID 0000.0001)                 2.186487662404487E+04,      /* J = 53 */
(PID.TID 0000.0001)                 2.178979556327977E+04,      /* J = 54 */
(PID.TID 0000.0001)                 2.171429965621647E+04,      /* J = 55 */
(PID.TID 0000.0001)                 2.163839034018820E+04,      /* J = 56 */
(PID.TID 0000.0001)                 2.156206906039891E+04,      /* J = 57 */
(PID.TID 0000.0001)                 2.148533726989578E+04,      /* J = 58 */
(PID.TID 0000.0001)                 2.140819642954147E+04,      /* J = 59 */
(PID.TID 0000.0001)                 2.133064800798639E+04,      /* J = 60 */
(PID.TID 0000.0001)                 2.125269348164072E+04,      /* J = 61 */
(PID.TID 0000.0001)                 2.117433433464624E+04,      /* J = 62 */
(PID.TID 0000.0001)                 2.109557205884818E+04,      /* J = 63 */
(PID.TID 0000.0001)                 2.101640815376673E+04       /* J = 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.779436833800970E+04              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.779436833800970E+04              /* J =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.519025246050310E+04              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.519025246050310E+04,      /* J =  1 */
(PID.TID 0000.0001)                 2.513875945796684E+04,      /* J =  2 */
(PID.TID 0000.0001)                 2.508678784968725E+04,      /* J =  3 */
(PID.TID 0000.0001)                 2.503433862512882E+04,      /* J =  4 */
(PID.TID 0000.0001)                 2.498141278284919E+04,      /* J =  5 */
(PID.TID 0000.0001)                 2.492801133048011E+04,      /* J =  6 */
(PID.TID 0000.0001)                 2.487413528470825E+04,      /* J =  7 */
(PID.TID 0000.0001)                 2.481978567125586E+04,      /* J =  8 */
(PID.TID 0000.0001)                 2.476496352486124E+04,      /* J =  9 */
(PID.TID 0000.0001)                 2.470966988925904E+04,      /* J = 10 */
(PID.TID 0000.0001)                 2.465390581716037E+04,      /* J = 11 */
(PID.TID 0000.0001)                 2.459767237023278E+04,      /* J = 12 */
(PID.TID 0000.0001)                 2.454097061908004E+04,      /* J = 13 */
(PID.TID 0000.0001)                 2.448380164322176E+04,      /* J = 14 */
(PID.TID 0000.0001)                 2.442616653107283E+04,      /* J = 15 */
(PID.TID 0000.0001)                 2.436806637992272E+04,      /* J = 16 */
(PID.TID 0000.0001)                 2.430950229591454E+04,      /* J = 17 */
(PID.TID 0000.0001)                 2.425047539402404E+04,      /* J = 18 */
(PID.TID 0000.0001)                 2.419098679803835E+04,      /* J = 19 */
(PID.TID 0000.0001)                 2.413103764053457E+04,      /* J = 20 */
(PID.TID 0000.0001)                 2.407062906285827E+04,      /* J = 21 */
(PID.TID 0000.0001)                 2.400976221510167E+04,      /* J = 22 */
(PID.TID 0000.0001)                 2.394843825608182E+04,      /* J = 23 */
(PID.TID 0000.0001)                 2.388665835331851E+04,      /* J = 24 */
(PID.TID 0000.0001)                 2.382442368301203E+04,      /* J = 25 */
(PID.TID 0000.0001)                 2.376173543002079E+04,      /* J = 26 */
(PID.TID 0000.0001)                 2.369859478783877E+04,      /* J = 27 */
(PID.TID 0000.0001)                 2.363500295857277E+04,      /* J = 28 */
(PID.TID 0000.0001)                 2.357096115291957E+04,      /* J = 29 */
(PID.TID 0000.0001)                 2.350647059014283E+04,      /* J = 30 */
(PID.TID 0000.0001)                 2.344153249804990E+04,      /* J = 31 */
(PID.TID 0000.0001)                 2.337614811296844E+04,      /* J = 32 */
(PID.TID 0000.0001)                 2.331031867972290E+04,      /* J = 33 */
(PID.TID 0000.0001)                 2.324404545161081E+04,      /* J = 34 */
(PID.TID 0000.0001)                 2.317732969037889E+04,      /* J = 35 */
(PID.TID 0000.0001)                 2.311017266619906E+04,      /* J = 36 */
(PID.TID 0000.0001)                 2.304257565764427E+04,      /* J = 37 */
(PID.TID 0000.0001)                 2.297453995166411E+04,      /* J = 38 */
(PID.TID 0000.0001)                 2.290606684356036E+04,      /* J = 39 */
(PID.TID 0000.0001)                 2.283715763696229E+04,      /* J = 40 */
(PID.TID 0000.0001)                 2.276781364380187E+04,      /* J = 41 */
(PID.TID 0000.0001)                 2.269803618428877E+04,      /* J = 42 */
(PID.TID 0000.0001)                 2.262782658688523E+04,      /* J = 43 */
(PID.TID 0000.0001)                 2.255718618828079E+04,      /* J = 44 */
(PID.TID 0000.0001)                 2.248611633336681E+04,      /* J = 45 */
(PID.TID 0000.0001)                 2.241461837521088E+04,      /* J = 46 */
(PID.TID 0000.0001)                 2.234269367503106E+04,      /* J = 47 */
(PID.TID 0000.0001)                 2.227034360216997E+04,      /* J = 48 */
(PID.TID 0000.0001)                 2.219756953406870E+04,      /* J = 49 */
(PID.TID 0000.0001)                 2.212437285624061E+04,      /* J = 50 */
(PID.TID 0000.0001)                 2.205075496224494E+04,      /* J = 51 */
(PID.TID 0000.0001)                 2.197671725366026E+04,      /* J = 52 */
(PID.TID 0000.0001)                 2.190226114005784E+04,      /* J = 53 */
(PID.TID 0000.0001)                 2.182738803897473E+04,      /* J = 54 */
(PID.TID 0000.0001)                 2.175209937588686E+04,      /* J = 55 */
(PID.TID 0000.0001)                 2.167639658418185E+04,      /* J = 56 */
(PID.TID 0000.0001)                 2.160028110513174E+04,      /* J = 57 */
(PID.TID 0000.0001)                 2.152375438786551E+04,      /* J = 58 */
(PID.TID 0000.0001)                 2.144681788934157E+04,      /* J = 59 */
(PID.TID 0000.0001)                 2.136947307431993E+04,      /* J = 60 */
(PID.TID 0000.0001)                 2.129172141533439E+04,      /* J = 61 */
(PID.TID 0000.0001)                 2.121356439266446E+04,      /* J = 62 */
(PID.TID 0000.0001)                 2.113500349430719E+04,      /* J = 63 */
(PID.TID 0000.0001)                 2.105604021594884E+04       /* J = 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.779436833800970E+04              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.779436833800970E+04              /* J =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.516456584643870E+04              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.516456584643870E+04,      /* J =  1 */
(PID.TID 0000.0001)                 2.511283341791677E+04,      /* J =  2 */
(PID.TID 0000.0001)                 2.506062287724593E+04,      /* J =  3 */
(PID.TID 0000.0001)                 2.500793521843962E+04,      /* J =  4 */
(PID.TID 0000.0001)                 2.495477144459491E+04,      /* J =  5 */
(PID.TID 0000.0001)                 2.490113256787343E+04,      /* J =  6 */
(PID.TID 0000.0001)                 2.484701960948206E+04,      /* J =  7 */
(PID.TID 0000.0001)                 2.479243359965354E+04,      /* J =  8 */
(PID.TID 0000.0001)                 2.473737557762680E+04,      /* J =  9 */
(PID.TID 0000.0001)                 2.468184659162722E+04,      /* J = 10 */
(PID.TID 0000.0001)                 2.462584769884665E+04,      /* J = 11 */
(PID.TID 0000.0001)                 2.456937996542330E+04,      /* J = 12 */
(PID.TID 0000.0001)                 2.451244446642140E+04,      /* J = 13 */
(PID.TID 0000.0001)                 2.445504228581079E+04,      /* J = 14 */
(PID.TID 0000.0001)                 2.439717451644624E+04,      /* J = 15 */
(PID.TID 0000.0001)                 2.433884226004667E+04,      /* J = 16 */
(PID.TID 0000.0001)                 2.428004662717415E+04,      /* J = 17 */
(PID.TID 0000.0001)                 2.422078873721278E+04,      /* J = 18 */
(PID.TID 0000.0001)                 2.416106971834737E+04,      /* J = 19 */
(PID.TID 0000.0001)                 2.410089070754197E+04,      /* J = 20 */
(PID.TID 0000.0001)                 2.404025285051817E+04,      /* J = 21 */
(PID.TID 0000.0001)                 2.397915730173338E+04,      /* J = 22 */
(PID.TID 0000.0001)                 2.391760522435877E+04,      /* J = 23 */
(PID.TID 0000.0001)                 2.385559779025718E+04,      /* J = 24 */
(PID.TID 0000.0001)                 2.379313617996076E+04,      /* J = 25 */
(PID.TID 0000.0001)                 2.373022158264854E+04,      /* J = 26 */
(PID.TID 0000.0001)                 2.366685519612378E+04,      /* J = 27 */
(PID.TID 0000.0001)                 2.360303822679111E+04,      /* J = 28 */
(PID.TID 0000.0001)                 2.353877188963365E+04,      /* J = 29 */
(PID.TID 0000.0001)                 2.347405740818982E+04,      /* J = 30 */
(PID.TID 0000.0001)                 2.340889601453007E+04,      /* J = 31 */
(PID.TID 0000.0001)                 2.334328894923340E+04,      /* J = 32 */
(PID.TID 0000.0001)                 2.327723746136375E+04,      /* J = 33 */
(PID.TID 0000.0001)                 2.321074280844627E+04,      /* J = 34 */
(PID.TID 0000.0001)                 2.314380625644327E+04,      /* J = 35 */
(PID.TID 0000.0001)                 2.307642907973023E+04,      /* J = 36 */
(PID.TID 0000.0001)                 2.300861256107146E+04,      /* J = 37 */
(PID.TID 0000.0001)                 2.294035799159574E+04,      /* J = 38 */
(PID.TID 0000.0001)                 2.287166667077167E+04,      /* J = 39 */
(PID.TID 0000.0001)                 2.280253990638299E+04,      /* J = 40 */
(PID.TID 0000.0001)                 2.273297901450364E+04,      /* J = 41 */
(PID.TID 0000.0001)                 2.266298531947274E+04,      /* J = 42 */
(PID.TID 0000.0001)                 2.259256015386935E+04,      /* J = 43 */
(PID.TID 0000.0001)                 2.252170485848710E+04,      /* J = 44 */
(PID.TID 0000.0001)                 2.245042078230868E+04,      /* J = 45 */
(PID.TID 0000.0001)                 2.237870928248015E+04,      /* J = 46 */
(PID.TID 0000.0001)                 2.230657172428511E+04,      /* J = 47 */
(PID.TID 0000.0001)                 2.223400948111865E+04,      /* J = 48 */
(PID.TID 0000.0001)                 2.216102393446132E+04,      /* J = 49 */
(PID.TID 0000.0001)                 2.208761647385271E+04,      /* J = 50 */
(PID.TID 0000.0001)                 2.201378849686504E+04,      /* J = 51 */
(PID.TID 0000.0001)                 2.193954140907658E+04,      /* J = 52 */
(PID.TID 0000.0001)                 2.186487662404487E+04,      /* J = 53 */
(PID.TID 0000.0001)                 2.178979556327977E+04,      /* J = 54 */
(PID.TID 0000.0001)                 2.171429965621647E+04,      /* J = 55 */
(PID.TID 0000.0001)                 2.163839034018820E+04,      /* J = 56 */
(PID.TID 0000.0001)                 2.156206906039891E+04,      /* J = 57 */
(PID.TID 0000.0001)                 2.148533726989578E+04,      /* J = 58 */
(PID.TID 0000.0001)                 2.140819642954147E+04,      /* J = 59 */
(PID.TID 0000.0001)                 2.133064800798639E+04,      /* J = 60 */
(PID.TID 0000.0001)                 2.125269348164072E+04,      /* J = 61 */
(PID.TID 0000.0001)                 2.117433433464624E+04,      /* J = 62 */
(PID.TID 0000.0001)                 2.109557205884818E+04,      /* J = 63 */
(PID.TID 0000.0001)                 2.101640815376673E+04       /* J = 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.779436833800970E+04              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.779436833800970E+04              /* J =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.519025246050310E+04              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)                 2.519025246050310E+04,      /* J =  1 */
(PID.TID 0000.0001)                 2.513875945796684E+04,      /* J =  2 */
(PID.TID 0000.0001)                 2.508678784968725E+04,      /* J =  3 */
(PID.TID 0000.0001)                 2.503433862512882E+04,      /* J =  4 */
(PID.TID 0000.0001)                 2.498141278284919E+04,      /* J =  5 */
(PID.TID 0000.0001)                 2.492801133048011E+04,      /* J =  6 */
(PID.TID 0000.0001)                 2.487413528470825E+04,      /* J =  7 */
(PID.TID 0000.0001)                 2.481978567125586E+04,      /* J =  8 */
(PID.TID 0000.0001)                 2.476496352486124E+04,      /* J =  9 */
(PID.TID 0000.0001)                 2.470966988925904E+04,      /* J = 10 */
(PID.TID 0000.0001)                 2.465390581716037E+04,      /* J = 11 */
(PID.TID 0000.0001)                 2.459767237023278E+04,      /* J = 12 */
(PID.TID 0000.0001)                 2.454097061908004E+04,      /* J = 13 */
(PID.TID 0000.0001)                 2.448380164322176E+04,      /* J = 14 */
(PID.TID 0000.0001)                 2.442616653107283E+04,      /* J = 15 */
(PID.TID 0000.0001)                 2.436806637992272E+04,      /* J = 16 */
(PID.TID 0000.0001)                 2.430950229591454E+04,      /* J = 17 */
(PID.TID 0000.0001)                 2.425047539402404E+04,      /* J = 18 */
(PID.TID 0000.0001)                 2.419098679803835E+04,      /* J = 19 */
(PID.TID 0000.0001)                 2.413103764053457E+04,      /* J = 20 */
(PID.TID 0000.0001)                 2.407062906285827E+04,      /* J = 21 */
(PID.TID 0000.0001)                 2.400976221510167E+04,      /* J = 22 */
(PID.TID 0000.0001)                 2.394843825608182E+04,      /* J = 23 */
(PID.TID 0000.0001)                 2.388665835331851E+04,      /* J = 24 */
(PID.TID 0000.0001)                 2.382442368301203E+04,      /* J = 25 */
(PID.TID 0000.0001)                 2.376173543002079E+04,      /* J = 26 */
(PID.TID 0000.0001)                 2.369859478783877E+04,      /* J = 27 */
(PID.TID 0000.0001)                 2.363500295857277E+04,      /* J = 28 */
(PID.TID 0000.0001)                 2.357096115291957E+04,      /* J = 29 */
(PID.TID 0000.0001)                 2.350647059014283E+04,      /* J = 30 */
(PID.TID 0000.0001)                 2.344153249804990E+04,      /* J = 31 */
(PID.TID 0000.0001)                 2.337614811296844E+04,      /* J = 32 */
(PID.TID 0000.0001)                 2.331031867972290E+04,      /* J = 33 */
(PID.TID 0000.0001)                 2.324404545161081E+04,      /* J = 34 */
(PID.TID 0000.0001)                 2.317732969037889E+04,      /* J = 35 */
(PID.TID 0000.0001)                 2.311017266619906E+04,      /* J = 36 */
(PID.TID 0000.0001)                 2.304257565764427E+04,      /* J = 37 */
(PID.TID 0000.0001)                 2.297453995166411E+04,      /* J = 38 */
(PID.TID 0000.0001)                 2.290606684356036E+04,      /* J = 39 */
(PID.TID 0000.0001)                 2.283715763696229E+04,      /* J = 40 */
(PID.TID 0000.0001)                 2.276781364380187E+04,      /* J = 41 */
(PID.TID 0000.0001)                 2.269803618428877E+04,      /* J = 42 */
(PID.TID 0000.0001)                 2.262782658688523E+04,      /* J = 43 */
(PID.TID 0000.0001)                 2.255718618828079E+04,      /* J = 44 */
(PID.TID 0000.0001)                 2.248611633336681E+04,      /* J = 45 */
(PID.TID 0000.0001)                 2.241461837521088E+04,      /* J = 46 */
(PID.TID 0000.0001)                 2.234269367503106E+04,      /* J = 47 */
(PID.TID 0000.0001)                 2.227034360216997E+04,      /* J = 48 */
(PID.TID 0000.0001)                 2.219756953406870E+04,      /* J = 49 */
(PID.TID 0000.0001)                 2.212437285624061E+04,      /* J = 50 */
(PID.TID 0000.0001)                 2.205075496224494E+04,      /* J = 51 */
(PID.TID 0000.0001)                 2.197671725366026E+04,      /* J = 52 */
(PID.TID 0000.0001)                 2.190226114005784E+04,      /* J = 53 */
(PID.TID 0000.0001)                 2.182738803897473E+04,      /* J = 54 */
(PID.TID 0000.0001)                 2.175209937588686E+04,      /* J = 55 */
(PID.TID 0000.0001)                 2.167639658418185E+04,      /* J = 56 */
(PID.TID 0000.0001)                 2.160028110513174E+04,      /* J = 57 */
(PID.TID 0000.0001)                 2.152375438786551E+04,      /* J = 58 */
(PID.TID 0000.0001)                 2.144681788934157E+04,      /* J = 59 */
(PID.TID 0000.0001)                 2.136947307431993E+04,      /* J = 60 */
(PID.TID 0000.0001)                 2.129172141533439E+04,      /* J = 61 */
(PID.TID 0000.0001)                 2.121356439266446E+04,      /* J = 62 */
(PID.TID 0000.0001)                 2.113500349430719E+04,      /* J = 63 */
(PID.TID 0000.0001)                 2.105604021594884E+04       /* J = 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.779436833800970E+04              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    64 @  2.779436833800970E+04              /* J =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    64 @  6.994326573595897E+08              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 6.994326573595897E+08,      /* J =  1 */
(PID.TID 0000.0001)                 6.979947883268648E+08,      /* J =  2 */
(PID.TID 0000.0001)                 6.965436304794976E+08,      /* J =  3 */
(PID.TID 0000.0001)                 6.950792114454534E+08,      /* J =  4 */
(PID.TID 0000.0001)                 6.936015591051663E+08,      /* J =  5 */
(PID.TID 0000.0001)                 6.921107015909784E+08,      /* J =  6 */
(PID.TID 0000.0001)                 6.906066672867069E+08,      /* J =  7 */
(PID.TID 0000.0001)                 6.890894848269770E+08,      /* J =  8 */
(PID.TID 0000.0001)                 6.875591830967587E+08,      /* J =  9 */
(PID.TID 0000.0001)                 6.860157912307780E+08,      /* J = 10 */
(PID.TID 0000.0001)                 6.844593386130148E+08,      /* J = 11 */
(PID.TID 0000.0001)                 6.828898548760654E+08,      /* J = 12 */
(PID.TID 0000.0001)                 6.813073699006394E+08,      /* J = 13 */
(PID.TID 0000.0001)                 6.797119138149720E+08,      /* J = 14 */
(PID.TID 0000.0001)                 6.781035169942623E+08,      /* J = 15 */
(PID.TID 0000.0001)                 6.764822100600548E+08,      /* J = 16 */
(PID.TID 0000.0001)                 6.748480238796690E+08,      /* J = 17 */
(PID.TID 0000.0001)                 6.732009895657281E+08,      /* J = 18 */
(PID.TID 0000.0001)                 6.715411384752938E+08,      /* J = 19 */
(PID.TID 0000.0001)                 6.698685022096107E+08,      /* J = 20 */
(PID.TID 0000.0001)                 6.681831126132613E+08,      /* J = 21 */
(PID.TID 0000.0001)                 6.664850017735666E+08,      /* J = 22 */
(PID.TID 0000.0001)                 6.647742020202218E+08,      /* J = 23 */
(PID.TID 0000.0001)                 6.630507459242355E+08,      /* J = 24 */
(PID.TID 0000.0001)                 6.613146662978902E+08,      /* J = 25 */
(PID.TID 0000.0001)                 6.595659961935136E+08,      /* J = 26 */
(PID.TID 0000.0001)                 6.578047689033611E+08,      /* J = 27 */
(PID.TID 0000.0001)                 6.560310179585534E+08,      /* J = 28 */
(PID.TID 0000.0001)                 6.542447771288618E+08,      /* J = 29 */
(PID.TID 0000.0001)                 6.524460804216844E+08,      /* J = 30 */
(PID.TID 0000.0001)                 6.506349620815755E+08,      /* J = 31 */
(PID.TID 0000.0001)                 6.488114565896950E+08,      /* J = 32 */
(PID.TID 0000.0001)                 6.469755986629034E+08,      /* J = 33 */
(PID.TID 0000.0001)                 6.451274232533309E+08,      /* J = 34 */
(PID.TID 0000.0001)                 6.432669655475305E+08,      /* J = 35 */
(PID.TID 0000.0001)                 6.413942609659878E+08,      /* J = 36 */
(PID.TID 0000.0001)                 6.395093451621964E+08,      /* J = 37 */
(PID.TID 0000.0001)                 6.376122540223833E+08,      /* J = 38 */
(PID.TID 0000.0001)                 6.357030236643095E+08,      /* J = 39 */
(PID.TID 0000.0001)                 6.337816904370142E+08,      /* J = 40 */
(PID.TID 0000.0001)                 6.318482909199312E+08,      /* J = 41 */
(PID.TID 0000.0001)                 6.299028619221603E+08,      /* J = 42 */
(PID.TID 0000.0001)                 6.279454404818789E+08,      /* J = 43 */
(PID.TID 0000.0001)                 6.259760638655939E+08,      /* J = 44 */
(PID.TID 0000.0001)                 6.239947695673566E+08,      /* J = 45 */
(PID.TID 0000.0001)                 6.220015953081915E+08,      /* J = 46 */
(PID.TID 0000.0001)                 6.199965790352323E+08,      /* J = 47 */
(PID.TID 0000.0001)                 6.179797589211514E+08,      /* J = 48 */
(PID.TID 0000.0001)                 6.159511733632165E+08,      /* J = 49 */
(PID.TID 0000.0001)                 6.139108609828386E+08,      /* J = 50 */
(PID.TID 0000.0001)                 6.118588606245891E+08,      /* J = 51 */
(PID.TID 0000.0001)                 6.097952113556099E+08,      /* J = 52 */
(PID.TID 0000.0001)                 6.077199524648079E+08,      /* J = 53 */
(PID.TID 0000.0001)                 6.056331234621273E+08,      /* J = 54 */
(PID.TID 0000.0001)                 6.035347640777835E+08,      /* J = 55 */
(PID.TID 0000.0001)                 6.014249142614759E+08,      /* J = 56 */
(PID.TID 0000.0001)                 5.993036141817799E+08,      /* J = 57 */
(PID.TID 0000.0001)                 5.971709042251236E+08,      /* J = 58 */
(PID.TID 0000.0001)                 5.950268249952575E+08,      /* J = 59 */
(PID.TID 0000.0001)                 5.928714173123310E+08,      /* J = 60 */
(PID.TID 0000.0001)                 5.907047222122821E+08,      /* J = 61 */
(PID.TID 0000.0001)                 5.885267809457574E+08,      /* J = 62 */
(PID.TID 0000.0001)                 5.863376349776791E+08,      /* J = 63 */
(PID.TID 0000.0001)                 5.841373259862225E+08       /* J = 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    64 @  6.994326573595897E+08              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 6.994326573595897E+08,      /* J =  1 */
(PID.TID 0000.0001)                 6.979947883268648E+08,      /* J =  2 */
(PID.TID 0000.0001)                 6.965436304794976E+08,      /* J =  3 */
(PID.TID 0000.0001)                 6.950792114454534E+08,      /* J =  4 */
(PID.TID 0000.0001)                 6.936015591051663E+08,      /* J =  5 */
(PID.TID 0000.0001)                 6.921107015909784E+08,      /* J =  6 */
(PID.TID 0000.0001)                 6.906066672867069E+08,      /* J =  7 */
(PID.TID 0000.0001)                 6.890894848269770E+08,      /* J =  8 */
(PID.TID 0000.0001)                 6.875591830967587E+08,      /* J =  9 */
(PID.TID 0000.0001)                 6.860157912307780E+08,      /* J = 10 */
(PID.TID 0000.0001)                 6.844593386130148E+08,      /* J = 11 */
(PID.TID 0000.0001)                 6.828898548760654E+08,      /* J = 12 */
(PID.TID 0000.0001)                 6.813073699006394E+08,      /* J = 13 */
(PID.TID 0000.0001)                 6.797119138149720E+08,      /* J = 14 */
(PID.TID 0000.0001)                 6.781035169942623E+08,      /* J = 15 */
(PID.TID 0000.0001)                 6.764822100600548E+08,      /* J = 16 */
(PID.TID 0000.0001)                 6.748480238796690E+08,      /* J = 17 */
(PID.TID 0000.0001)                 6.732009895657281E+08,      /* J = 18 */
(PID.TID 0000.0001)                 6.715411384752938E+08,      /* J = 19 */
(PID.TID 0000.0001)                 6.698685022096107E+08,      /* J = 20 */
(PID.TID 0000.0001)                 6.681831126132613E+08,      /* J = 21 */
(PID.TID 0000.0001)                 6.664850017735666E+08,      /* J = 22 */
(PID.TID 0000.0001)                 6.647742020202218E+08,      /* J = 23 */
(PID.TID 0000.0001)                 6.630507459242355E+08,      /* J = 24 */
(PID.TID 0000.0001)                 6.613146662978902E+08,      /* J = 25 */
(PID.TID 0000.0001)                 6.595659961935136E+08,      /* J = 26 */
(PID.TID 0000.0001)                 6.578047689033611E+08,      /* J = 27 */
(PID.TID 0000.0001)                 6.560310179585534E+08,      /* J = 28 */
(PID.TID 0000.0001)                 6.542447771288618E+08,      /* J = 29 */
(PID.TID 0000.0001)                 6.524460804216844E+08,      /* J = 30 */
(PID.TID 0000.0001)                 6.506349620815755E+08,      /* J = 31 */
(PID.TID 0000.0001)                 6.488114565896950E+08,      /* J = 32 */
(PID.TID 0000.0001)                 6.469755986629034E+08,      /* J = 33 */
(PID.TID 0000.0001)                 6.451274232533309E+08,      /* J = 34 */
(PID.TID 0000.0001)                 6.432669655475305E+08,      /* J = 35 */
(PID.TID 0000.0001)                 6.413942609659878E+08,      /* J = 36 */
(PID.TID 0000.0001)                 6.395093451621964E+08,      /* J = 37 */
(PID.TID 0000.0001)                 6.376122540223833E+08,      /* J = 38 */
(PID.TID 0000.0001)                 6.357030236643095E+08,      /* J = 39 */
(PID.TID 0000.0001)                 6.337816904370142E+08,      /* J = 40 */
(PID.TID 0000.0001)                 6.318482909199312E+08,      /* J = 41 */
(PID.TID 0000.0001)                 6.299028619221603E+08,      /* J = 42 */
(PID.TID 0000.0001)                 6.279454404818789E+08,      /* J = 43 */
(PID.TID 0000.0001)                 6.259760638655939E+08,      /* J = 44 */
(PID.TID 0000.0001)                 6.239947695673566E+08,      /* J = 45 */
(PID.TID 0000.0001)                 6.220015953081915E+08,      /* J = 46 */
(PID.TID 0000.0001)                 6.199965790352323E+08,      /* J = 47 */
(PID.TID 0000.0001)                 6.179797589211514E+08,      /* J = 48 */
(PID.TID 0000.0001)                 6.159511733632165E+08,      /* J = 49 */
(PID.TID 0000.0001)                 6.139108609828386E+08,      /* J = 50 */
(PID.TID 0000.0001)                 6.118588606245891E+08,      /* J = 51 */
(PID.TID 0000.0001)                 6.097952113556099E+08,      /* J = 52 */
(PID.TID 0000.0001)                 6.077199524648079E+08,      /* J = 53 */
(PID.TID 0000.0001)                 6.056331234621273E+08,      /* J = 54 */
(PID.TID 0000.0001)                 6.035347640777835E+08,      /* J = 55 */
(PID.TID 0000.0001)                 6.014249142614759E+08,      /* J = 56 */
(PID.TID 0000.0001)                 5.993036141817799E+08,      /* J = 57 */
(PID.TID 0000.0001)                 5.971709042251236E+08,      /* J = 58 */
(PID.TID 0000.0001)                 5.950268249952575E+08,      /* J = 59 */
(PID.TID 0000.0001)                 5.928714173123310E+08,      /* J = 60 */
(PID.TID 0000.0001)                 5.907047222122821E+08,      /* J = 61 */
(PID.TID 0000.0001)                 5.885267809457574E+08,      /* J = 62 */
(PID.TID 0000.0001)                 5.863376349776791E+08,      /* J = 63 */
(PID.TID 0000.0001)                 5.841373259862225E+08       /* J = 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    64 @  7.001466000059072E+08              /* I =  1: 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)                 7.001466000059072E+08,      /* J =  1 */
(PID.TID 0000.0001)                 6.987153856619213E+08,      /* J =  2 */
(PID.TID 0000.0001)                 6.972708687841871E+08,      /* J =  3 */
(PID.TID 0000.0001)                 6.958130768742002E+08,      /* J =  4 */
(PID.TID 0000.0001)                 6.943420376862097E+08,      /* J =  5 */
(PID.TID 0000.0001)                 6.928577792267066E+08,      /* J =  6 */
(PID.TID 0000.0001)                 6.913603297538249E+08,      /* J =  7 */
(PID.TID 0000.0001)                 6.898497177768300E+08,      /* J =  8 */
(PID.TID 0000.0001)                 6.883259720555978E+08,      /* J =  9 */
(PID.TID 0000.0001)                 6.867891216000748E+08,      /* J = 10 */
(PID.TID 0000.0001)                 6.852391956696484E+08,      /* J = 11 */
(PID.TID 0000.0001)                 6.836762237726952E+08,      /* J = 12 */
(PID.TID 0000.0001)                 6.821002356659416E+08,      /* J = 13 */
(PID.TID 0000.0001)                 6.805112613539243E+08,      /* J = 14 */
(PID.TID 0000.0001)                 6.789093310884190E+08,      /* J = 15 */
(PID.TID 0000.0001)                 6.772944753678811E+08,      /* J = 16 */
(PID.TID 0000.0001)                 6.756667249368460E+08,      /* J = 17 */
(PID.TID 0000.0001)                 6.740261107852997E+08,      /* J = 18 */
(PID.TID 0000.0001)                 6.723726641482074E+08,      /* J = 19 */
(PID.TID 0000.0001)                 6.707064165047766E+08,      /* J = 20 */
(PID.TID 0000.0001)                 6.690273995779943E+08,      /* J = 21 */
(PID.TID 0000.0001)                 6.673356453338909E+08,      /* J = 22 */
(PID.TID 0000.0001)                 6.656311859810680E+08,      /* J = 23 */
(PID.TID 0000.0001)                 6.639140539699314E+08,      /* J = 24 */
(PID.TID 0000.0001)                 6.621842819922103E+08,      /* J = 25 */
(PID.TID 0000.0001)                 6.604419029803079E+08,      /* J = 26 */
(PID.TID 0000.0001)                 6.586869501065553E+08,      /* J = 27 */
(PID.TID 0000.0001)                 6.569194567827585E+08,      /* J = 28 */
(PID.TID 0000.0001)                 6.551394566594321E+08,      /* J = 29 */
(PID.TID 0000.0001)                 6.533469836252099E+08,      /* J = 30 */
(PID.TID 0000.0001)                 6.515420718061962E+08,      /* J = 31 */
(PID.TID 0000.0001)                 6.497247555653362E+08,      /* J = 32 */
(PID.TID 0000.0001)                 6.478950695016699E+08,      /* J = 33 */
(PID.TID 0000.0001)                 6.460530484497808E+08,      /* J = 34 */
(PID.TID 0000.0001)                 6.441987274791679E+08,      /* J = 35 */
(PID.TID 0000.0001)                 6.423321418933210E+08,      /* J = 36 */
(PID.TID 0000.0001)                 6.404533272294264E+08,      /* J = 37 */
(PID.TID 0000.0001)                 6.385623192573639E+08,      /* J = 38 */
(PID.TID 0000.0001)                 6.366591539792355E+08,      /* J = 39 */
(PID.TID 0000.0001)                 6.347438676284809E+08,      /* J = 40 */
(PID.TID 0000.0001)                 6.328164966695231E+08,      /* J = 41 */
(PID.TID 0000.0001)                 6.308770777965897E+08,      /* J = 42 */
(PID.TID 0000.0001)                 6.289256479335159E+08,      /* J = 43 */
(PID.TID 0000.0001)                 6.269622442326831E+08,      /* J = 44 */
(PID.TID 0000.0001)                 6.249869040744686E+08,      /* J = 45 */
(PID.TID 0000.0001)                 6.229996650664990E+08,      /* J = 46 */
(PID.TID 0000.0001)                 6.210005650429022E+08,      /* J = 47 */
(PID.TID 0000.0001)                 6.189896420637782E+08,      /* J = 48 */
(PID.TID 0000.0001)                 6.169669344140574E+08,      /* J = 49 */
(PID.TID 0000.0001)                 6.149324806032661E+08,      /* J = 50 */
(PID.TID 0000.0001)                 6.128863193644445E+08,      /* J = 51 */
(PID.TID 0000.0001)                 6.108284896535771E+08,      /* J = 52 */
(PID.TID 0000.0001)                 6.087590306487472E+08,      /* J = 53 */
(PID.TID 0000.0001)                 6.066779817494689E+08,      /* J = 54 */
(PID.TID 0000.0001)                 6.045853825759399E+08,      /* J = 55 */
(PID.TID 0000.0001)                 6.024812729682158E+08,      /* J = 56 */
(PID.TID 0000.0001)                 6.003656929855031E+08,      /* J = 57 */
(PID.TID 0000.0001)                 5.982386829054112E+08,      /* J = 58 */
(PID.TID 0000.0001)                 5.961002832231477E+08,      /* J = 59 */
(PID.TID 0000.0001)                 5.939505346507312E+08,      /* J = 60 */
(PID.TID 0000.0001)                 5.917894781163037E+08,      /* J = 61 */
(PID.TID 0000.0001)                 5.896171547632853E+08,      /* J = 62 */
(PID.TID 0000.0001)                 5.874336059495094E+08,      /* J = 63 */
(PID.TID 0000.0001)                 5.852388732466724E+08       /* J = 64 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0000.0001)                 2.482923135381599E+12
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End of Model config. summary
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) == Packages configuration : Check & print summary ==
(PID.TID 0000.0001) 
(PID.TID 0000.0001) OBCS_CHECK: #define ALLOW_OBCS
(PID.TID 0000.0001) OBCS_CHECK: start summary:
(PID.TID 0000.0001) useOBCSprescribe = /* prescribe OB values */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useOBCSbalance = /* balance the flow through OB */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_uvApplyFac = /* Factor to apply to U,V 2nd column/row */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_u1_adv_T = /* Temp uses upwind adv-scheme @ OB */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_u1_adv_S = /* Salt uses upwind adv-scheme @ OB */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_monitorFreq = /* monitor output frequency [s] */
(PID.TID 0000.0001)                 4.800000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OBCS_monSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useOBCStides = /* apply tidal forcing through OB */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tidalPeriod = /* (s) */
(PID.TID 0000.0001)    10 @  0.000000000000000E+00              /* I =  1: 10 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) OB_indexNone = /* null value for OB index (i.e. no OB) */
(PID.TID 0000.0001)                     -99
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ======== Tile bi=   1 , bj=   1 ========
(PID.TID 0000.0001)  OB_Jn = /* Northern OB local indices */
(PID.TID 0000.0001)    36 @      -99                            /* I = -1: 34 */
(PID.TID 0000.0001)  OB_Js = /* Southern OB local indices */
(PID.TID 0000.0001)    36 @        1                            /* I = -1: 34 */
(PID.TID 0000.0001)  OB_Ie = /* Eastern OB local indices */
(PID.TID 0000.0001)    36 @      -99                            /* J = -1: 34 */
(PID.TID 0000.0001)  OB_Iw = /* Western OB local indices */
(PID.TID 0000.0001)    36 @        1                            /* J = -1: 34 */
(PID.TID 0000.0001) ======== Tile bi=   2 , bj=   1 ========
(PID.TID 0000.0001)  OB_Jn = /* Northern OB local indices */
(PID.TID 0000.0001)    36 @      -99                            /* I = -1: 34 */
(PID.TID 0000.0001)  OB_Js = /* Southern OB local indices */
(PID.TID 0000.0001)    36 @        1                            /* I = -1: 34 */
(PID.TID 0000.0001)  OB_Ie = /* Eastern OB local indices */
(PID.TID 0000.0001)    36 @       32                            /* J = -1: 34 */
(PID.TID 0000.0001)  OB_Iw = /* Western OB local indices */
(PID.TID 0000.0001)    36 @      -99                            /* J = -1: 34 */
(PID.TID 0000.0001) ======== Tile bi=   1 , bj=   2 ========
(PID.TID 0000.0001)  OB_Jn = /* Northern OB local indices */
(PID.TID 0000.0001)    36 @       32                            /* I = -1: 34 */
(PID.TID 0000.0001)  OB_Js = /* Southern OB local indices */
(PID.TID 0000.0001)    36 @      -99                            /* I = -1: 34 */
(PID.TID 0000.0001)  OB_Ie = /* Eastern OB local indices */
(PID.TID 0000.0001)    36 @      -99                            /* J = -1: 34 */
(PID.TID 0000.0001)  OB_Iw = /* Western OB local indices */
(PID.TID 0000.0001)    36 @        1                            /* J = -1: 34 */
(PID.TID 0000.0001) ======== Tile bi=   2 , bj=   2 ========
(PID.TID 0000.0001)  OB_Jn = /* Northern OB local indices */
(PID.TID 0000.0001)    36 @       32                            /* I = -1: 34 */
(PID.TID 0000.0001)  OB_Js = /* Southern OB local indices */
(PID.TID 0000.0001)    36 @      -99                            /* I = -1: 34 */
(PID.TID 0000.0001)  OB_Ie = /* Eastern OB local indices */
(PID.TID 0000.0001)    36 @       32                            /* J = -1: 34 */
(PID.TID 0000.0001)  OB_Iw = /* Western OB local indices */
(PID.TID 0000.0001)    36 @      -99                            /* J = -1: 34 */
(PID.TID 0000.0001) OBCS_CHECK: end summary.
(PID.TID 0000.0001) OBCS_CHECK: set-up OK
(PID.TID 0000.0001) OBCS_CHECK: check Inside Mask and OB locations: OK
(PID.TID 0000.0001) EXF_CHECK: #define ALLOW_EXF
(PID.TID 0000.0001) CTRL_CHECK:  --> Starts to check CTRL set-up
(PID.TID 0000.0001) CTRL_CHECK:  <-- Ends Normally
(PID.TID 0000.0001) 
(PID.TID 0000.0001) COST_CHECK: #define ALLOW_COST
(PID.TID 0000.0001) GRDCHK_CHECK: grdchk package
(PID.TID 0000.0001) etaday defined by gencost   0
(PID.TID 0000.0001) GAD_CHECK: #define ALLOW_GENERIC_ADVDIFF
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0000.0001) // CONFIG_CHECK : Normal End
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     0
(PID.TID 0000.0001) %MON time_secondsf                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   9.9974803626537E-02
(PID.TID 0000.0001) %MON dynstat_vvel_min             =   6.2484252266586E-03
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   6.8858203200624E-02
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.7917489862877E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.2207391318385E-04
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   1.2635012589087E-02
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.3459910324997E-02
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   1.4729391862361E-05
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   1.0457343145220E-03
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.4252956499427E-05
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.0000000000000E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =   6.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   1.1000000000000E+01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.5000000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4999999999999E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.4711790653528E-13
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   4.3163335425681E-03
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   6.4607569559986E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   2.8265811682494E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_max                       =   4.9974727513316E-03
(PID.TID 0000.0001) %MON ke_mean                      =   2.7612282353511E-03
(PID.TID 0000.0001) %MON ke_vol                       =   9.9316925415266E+15
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin OBCS MONITOR field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON obc_E_uVel_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_E_uVel_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_E_uVel_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_E_uVel_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_E_uVel_Int               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_W_uVel_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_W_uVel_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_W_uVel_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_W_uVel_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_W_uVel_Int               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_N_vVel_max               =   9.9974803626537E-02
(PID.TID 0000.0001) %MON obc_N_vVel_min               =   6.2484252266586E-03
(PID.TID 0000.0001) %MON obc_N_vVel_mean              =   6.7724867979244E-02
(PID.TID 0000.0001) %MON obc_N_vVel_sd                =   2.8856486199012E-02
(PID.TID 0000.0001) %MON obc_N_vVel_Int               =   3.5365235086012E+08
(PID.TID 0000.0001) %MON obc_S_vVel_max               =   9.9974803626537E-02
(PID.TID 0000.0001) %MON obc_S_vVel_min               =   6.2484252266586E-03
(PID.TID 0000.0001) %MON obc_S_vVel_mean              =   6.7724867979245E-02
(PID.TID 0000.0001) %MON obc_S_vVel_sd                =   2.8856486199011E-02
(PID.TID 0000.0001) %MON obc_S_vVel_Int               =   4.2222475303229E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End OBCS MONITOR field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718349022E+02  2.04436757292323E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325184813E+02  1.92987571287909E-01
(PID.TID 0000.0001)      cg2d_init_res =   5.54624486165762E+00
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1     124
(PID.TID 0000.0001)      cg2d_last_res =   9.76732479760236E-09
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     4
(PID.TID 0000.0001) %MON time_secondsf                =   4.8000000000000E+03
(PID.TID 0000.0001) %MON dynstat_eta_max              =   9.2130392091931E-01
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -5.6255703983901E-01
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   1.3256452676073E-01
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   3.4455125785822E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   1.4253272027794E-05
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   4.4546562415600E-02
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -3.8670904988210E-02
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   6.3213292834139E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   1.2365214002733E-02
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   3.3192533216355E-05
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   9.9974803626537E-02
(PID.TID 0000.0001) %MON dynstat_vvel_min             =   6.2484252266586E-03
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   6.5911248841545E-02
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   1.1520767318869E-02
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   5.2443710264333E-05
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   2.1316879708723E-04
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -1.5012272074613E-04
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   1.4729391862362E-05
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   5.1810336999194E-05
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.0172580595088E-07
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.0001260229520E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.9999253969875E+00
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   1.0999702246231E+01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   4.4997341908325E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   2.3209976472543E-06
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.4999999999999E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   5.4711790653528E-13
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   2.5339855562864E-03
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   4.3163335425681E-03
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.0232102260187E-03
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   4.4735815378683E-04
(PID.TID 0000.0001) %MON pe_b_mean                    =   1.6712429188635E-04
(PID.TID 0000.0001) %MON ke_max                       =   4.9317513107246E-03
(PID.TID 0000.0001) %MON ke_mean                      =   2.3289380306233E-03
(PID.TID 0000.0001) %MON ke_vol                       =   9.9316925415266E+15
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin OBCS MONITOR field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON obc_E_uVel_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_E_uVel_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_E_uVel_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_E_uVel_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_E_uVel_Int               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_W_uVel_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_W_uVel_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_W_uVel_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_W_uVel_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_W_uVel_Int               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON obc_N_vVel_max               =   9.9974803626537E-02
(PID.TID 0000.0001) %MON obc_N_vVel_min               =   6.2484252266586E-03
(PID.TID 0000.0001) %MON obc_N_vVel_mean              =   6.7724867979244E-02
(PID.TID 0000.0001) %MON obc_N_vVel_sd                =   2.8856486199012E-02
(PID.TID 0000.0001) %MON obc_N_vVel_Int               =   3.5365235086012E+08
(PID.TID 0000.0001) %MON obc_S_vVel_max               =   9.9974803626537E-02
(PID.TID 0000.0001) %MON obc_S_vVel_min               =   6.2484252266586E-03
(PID.TID 0000.0001) %MON obc_S_vVel_mean              =   6.7724867979245E-02
(PID.TID 0000.0001) %MON obc_S_vVel_sd                =   2.8856486199011E-02
(PID.TID 0000.0001) %MON obc_S_vVel_Int               =   4.2222475303229E+08
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End OBCS MONITOR field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %CHECKPOINT         4 ckptA
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.000000000000000D+00
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701073786182D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701073786182D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701073786182D+01
(PID.TID 0000.0001)  global fc =  0.147701073786182D+01
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718349022E+02  2.04436757292323E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325184813E+02  1.92987571287909E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718349022E+02  2.04436757292323E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325184813E+02  1.92987571287909E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 cg2d: Sum(rhs),rhsMax =  -2.24736307784685E+02  1.92987586350900E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 Calling cg2d from S/R CG2D_SAD
 cg2d: Sum(rhs),rhsMax =   3.19744231092045E-14  3.51056614475562E-07
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin AD_MONITOR EXF statistics for iwhen =  3
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON ad_exf_tsnumber              =                     3
(PID.TID 0000.0001) %MON ad_exf_time_sec              =   3.6000000000000E+03
(PID.TID 0000.0001) %MON ad_exf_adfu_max              =   5.8709717829351E-06
(PID.TID 0000.0001) %MON ad_exf_adfu_min              =  -5.0431749928204E-06
(PID.TID 0000.0001) %MON ad_exf_adfu_mean             =  -8.3540510599836E-07
(PID.TID 0000.0001) %MON ad_exf_adfu_sd               =   1.2621909994194E-06
(PID.TID 0000.0001) %MON ad_exf_adfu_del2             =   2.3130992997975E-08
(PID.TID 0000.0001) %MON ad_exf_adfv_max              =   1.1246194862269E-05
(PID.TID 0000.0001) %MON ad_exf_adfv_min              =  -5.4423141248595E-06
(PID.TID 0000.0001) %MON ad_exf_adfv_mean             =   7.6127193119865E-07
(PID.TID 0000.0001) %MON ad_exf_adfv_sd               =   2.6719796373446E-06
(PID.TID 0000.0001) %MON ad_exf_adfv_del2             =   2.7390574716127E-08
(PID.TID 0000.0001) %MON ad_exf_adqnet_max            =   4.6438701753071E-08
(PID.TID 0000.0001) %MON ad_exf_adqnet_min            =  -2.2003352880324E-08
(PID.TID 0000.0001) %MON ad_exf_adqnet_mean           =   8.8636803209616E-09
(PID.TID 0000.0001) %MON ad_exf_adqnet_sd             =   1.4929044558236E-08
(PID.TID 0000.0001) %MON ad_exf_adqnet_del2           =   5.4523809756612E-11
(PID.TID 0000.0001) %MON ad_exf_adempmr_max           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adempmr_min           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adempmr_mean          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adempmr_sd            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adempmr_del2          =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End AD_MONITOR EXF statistics for iwhen =  3
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin AD_MONITOR EXF statistics for iwhen =  1
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON ad_exf_tsnumber              =                     3
(PID.TID 0000.0001) %MON ad_exf_time_sec              =   3.6000000000000E+03
(PID.TID 0000.0001) %MON ad_exf_adustress_max         =   3.7274570918021E-06
(PID.TID 0000.0001) %MON ad_exf_adustress_min         =  -5.0415844732947E-06
(PID.TID 0000.0001) %MON ad_exf_adustress_mean        =  -8.3337873736786E-07
(PID.TID 0000.0001) %MON ad_exf_adustress_sd          =   1.2094382236025E-06
(PID.TID 0000.0001) %MON ad_exf_adustress_del2        =   1.2590199082228E-08
(PID.TID 0000.0001) %MON ad_exf_advstress_max         =   1.1079375452446E-05
(PID.TID 0000.0001) %MON ad_exf_advstress_min         =  -2.4343375629543E-06
(PID.TID 0000.0001) %MON ad_exf_advstress_mean        =   7.7559128172213E-07
(PID.TID 0000.0001) %MON ad_exf_advstress_sd          =   2.5646312323075E-06
(PID.TID 0000.0001) %MON ad_exf_advstress_del2        =   1.8377587936728E-08
(PID.TID 0000.0001) %MON ad_exf_adhflux_max           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adhflux_min           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adhflux_mean          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adhflux_sd            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adhflux_del2          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adsflux_max           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adsflux_min           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adsflux_mean          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adsflux_sd            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adsflux_del2          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adwspeed_max          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adwspeed_min          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adwspeed_mean         =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adwspeed_sd           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adwspeed_del2         =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End AD_MONITOR EXF statistics for iwhen =  1
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin AD_MONITOR EXF statistics for iwhen =  2
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON ad_exf_tsnumber              =                     3
(PID.TID 0000.0001) %MON ad_exf_time_sec              =   3.6000000000000E+03
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End AD_MONITOR EXF statistics for iwhen =  2
(PID.TID 0000.0001) // =======================================================
 cg2d: Sum(rhs),rhsMax =  -1.59112726246071E+02  2.04436747268914E-01
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin AD_MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON ad_time_tsnumber             =                     3
(PID.TID 0000.0001) %MON ad_time_secondsf             =   3.6000000000000E+03
(PID.TID 0000.0001) %MON ad_dynstat_adeta_max         =   6.9553714367739E-04
(PID.TID 0000.0001) %MON ad_dynstat_adeta_min         =  -5.4177609226076E-04
(PID.TID 0000.0001) %MON ad_dynstat_adeta_mean        =   2.3516835039517E-06
(PID.TID 0000.0001) %MON ad_dynstat_adeta_sd          =   2.1084468100996E-04
(PID.TID 0000.0001) %MON ad_dynstat_adeta_del2        =   7.1780902426021E-07
(PID.TID 0000.0001) %MON ad_dynstat_aduvel_max        =   1.7242637004962E-03
(PID.TID 0000.0001) %MON ad_dynstat_aduvel_min        =  -1.3997311137770E-03
(PID.TID 0000.0001) %MON ad_dynstat_aduvel_mean       =   4.1597280631791E-04
(PID.TID 0000.0001) %MON ad_dynstat_aduvel_sd         =   4.4753403135599E-04
(PID.TID 0000.0001) %MON ad_dynstat_aduvel_del2       =   1.4726674745988E-06
(PID.TID 0000.0001) %MON ad_dynstat_advvel_max        =   2.8832914124571E-03
(PID.TID 0000.0001) %MON ad_dynstat_advvel_min        =  -1.4298100658402E-03
(PID.TID 0000.0001) %MON ad_dynstat_advvel_mean       =   3.1593505821441E-04
(PID.TID 0000.0001) %MON ad_dynstat_advvel_sd         =   6.0346002533507E-04
(PID.TID 0000.0001) %MON ad_dynstat_advvel_del2       =   2.0214054920126E-06
(PID.TID 0000.0001) %MON ad_dynstat_adwvel_max        =   3.6767199578452E-07
(PID.TID 0000.0001) %MON ad_dynstat_adwvel_min        =  -8.7956852691803E-08
(PID.TID 0000.0001) %MON ad_dynstat_adwvel_mean       =  -2.9155919432676E-09
(PID.TID 0000.0001) %MON ad_dynstat_adwvel_sd         =   2.6595476741591E-08
(PID.TID 0000.0001) %MON ad_dynstat_adwvel_del2       =   6.6766183266447E-11
(PID.TID 0000.0001) %MON ad_dynstat_adtheta_max       =   2.4177848166771E-01
(PID.TID 0000.0001) %MON ad_dynstat_adtheta_min       =  -3.0677830191700E-01
(PID.TID 0000.0001) %MON ad_dynstat_adtheta_mean      =  -1.1911405043954E-02
(PID.TID 0000.0001) %MON ad_dynstat_adtheta_sd        =   5.3573179769125E-02
(PID.TID 0000.0001) %MON ad_dynstat_adtheta_del2      =   1.1593988690583E-04
(PID.TID 0000.0001) %MON ad_dynstat_adsalt_max        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adsalt_min        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adsalt_mean       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adsalt_sd         =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adsalt_del2       =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End AD_MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 Calling cg2d from S/R CG2D_SAD
 cg2d: Sum(rhs),rhsMax =   1.31858968188681E-10  5.59388870055983E-07
 cg2d: Sum(rhs),rhsMax =  -1.01791052791247E+02  2.13040912211049E-01
 Calling cg2d from S/R CG2D_SAD
 cg2d: Sum(rhs),rhsMax =   1.14553699859243E-10  6.28064934587702E-07
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 Calling cg2d from S/R CG2D_SAD
 cg2d: Sum(rhs),rhsMax =  -8.73967564984923E-13  9.25487177938092E-07
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin AD_MONITOR EXF statistics for iwhen =  3
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON ad_exf_tsnumber              =                     0
(PID.TID 0000.0001) %MON ad_exf_time_sec              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adfu_max              =   1.2552281362196E-05
(PID.TID 0000.0001) %MON ad_exf_adfu_min              =  -3.5914552579897E-05
(PID.TID 0000.0001) %MON ad_exf_adfu_mean             =  -7.0608941088644E-06
(PID.TID 0000.0001) %MON ad_exf_adfu_sd               =   6.4556812168091E-06
(PID.TID 0000.0001) %MON ad_exf_adfu_del2             =   5.1076688924702E-08
(PID.TID 0000.0001) %MON ad_exf_adfv_max              =   4.8331863849915E-05
(PID.TID 0000.0001) %MON ad_exf_adfv_min              =  -1.9839717090482E-05
(PID.TID 0000.0001) %MON ad_exf_adfv_mean             =   1.0461566958412E-06
(PID.TID 0000.0001) %MON ad_exf_adfv_sd               =   1.4072316049049E-05
(PID.TID 0000.0001) %MON ad_exf_adfv_del2             =   8.5337991164083E-08
(PID.TID 0000.0001) %MON ad_exf_adqnet_max            =   1.8225251536434E-07
(PID.TID 0000.0001) %MON ad_exf_adqnet_min            =  -8.6236717737716E-08
(PID.TID 0000.0001) %MON ad_exf_adqnet_mean           =   3.5330836684638E-08
(PID.TID 0000.0001) %MON ad_exf_adqnet_sd             =   5.9371649204344E-08
(PID.TID 0000.0001) %MON ad_exf_adqnet_del2           =   2.1725373829097E-10
(PID.TID 0000.0001) %MON ad_exf_adempmr_max           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adempmr_min           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adempmr_mean          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adempmr_sd            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adempmr_del2          =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End AD_MONITOR EXF statistics for iwhen =  3
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin AD_MONITOR EXF statistics for iwhen =  1
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON ad_exf_tsnumber              =                     0
(PID.TID 0000.0001) %MON ad_exf_time_sec              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adustress_max         =   3.9245975748616E-05
(PID.TID 0000.0001) %MON ad_exf_adustress_min         =  -8.6297830578121E-05
(PID.TID 0000.0001) %MON ad_exf_adustress_mean        =  -1.8104262271548E-05
(PID.TID 0000.0001) %MON ad_exf_adustress_sd          =   1.8139588477426E-05
(PID.TID 0000.0001) %MON ad_exf_adustress_del2        =   8.9832517344424E-08
(PID.TID 0000.0001) %MON ad_exf_advstress_max         =   1.4144123986796E-04
(PID.TID 0000.0001) %MON ad_exf_advstress_min         =  -4.4657373904865E-05
(PID.TID 0000.0001) %MON ad_exf_advstress_mean        =   6.2517738768625E-06
(PID.TID 0000.0001) %MON ad_exf_advstress_sd          =   3.9642792228470E-05
(PID.TID 0000.0001) %MON ad_exf_advstress_del2        =   2.1947505130906E-07
(PID.TID 0000.0001) %MON ad_exf_adhflux_max           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adhflux_min           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adhflux_mean          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adhflux_sd            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adhflux_del2          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adsflux_max           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adsflux_min           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adsflux_mean          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adsflux_sd            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adsflux_del2          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adwspeed_max          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adwspeed_min          =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adwspeed_mean         =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adwspeed_sd           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_exf_adwspeed_del2         =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End AD_MONITOR EXF statistics for iwhen =  1
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin AD_MONITOR EXF statistics for iwhen =  2
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON ad_exf_tsnumber              =                     0
(PID.TID 0000.0001) %MON ad_exf_time_sec              =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End AD_MONITOR EXF statistics for iwhen =  2
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin AD_MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON ad_time_tsnumber             =                     0
(PID.TID 0000.0001) %MON ad_time_secondsf             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adeta_max         =   4.7869894365378E-03
(PID.TID 0000.0001) %MON ad_dynstat_adeta_min         =  -4.7565576878087E-03
(PID.TID 0000.0001) %MON ad_dynstat_adeta_mean        =   4.6799540815434E-05
(PID.TID 0000.0001) %MON ad_dynstat_adeta_sd          =   1.9898151358336E-03
(PID.TID 0000.0001) %MON ad_dynstat_adeta_del2        =   5.1648218116907E-06
(PID.TID 0000.0001) %MON ad_dynstat_aduvel_max        =   1.1564982648546E-02
(PID.TID 0000.0001) %MON ad_dynstat_aduvel_min        =  -2.0463784124876E-02
(PID.TID 0000.0001) %MON ad_dynstat_aduvel_mean       =   2.2090930370914E-03
(PID.TID 0000.0001) %MON ad_dynstat_aduvel_sd         =   3.7924004828758E-03
(PID.TID 0000.0001) %MON ad_dynstat_aduvel_del2       =   9.5668717463669E-06
(PID.TID 0000.0001) %MON ad_dynstat_advvel_max        =   3.0259205799804E-02
(PID.TID 0000.0001) %MON ad_dynstat_advvel_min        =  -1.1599535100862E-02
(PID.TID 0000.0001) %MON ad_dynstat_advvel_mean       =   2.3825090204143E-03
(PID.TID 0000.0001) %MON ad_dynstat_advvel_sd         =   4.8975400333167E-03
(PID.TID 0000.0001) %MON ad_dynstat_advvel_del2       =   1.5395027191477E-05
(PID.TID 0000.0001) %MON ad_dynstat_adwvel_max        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adwvel_min        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adwvel_mean       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adwvel_sd         =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adwvel_del2       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adtheta_max       =   5.9387883884850E-01
(PID.TID 0000.0001) %MON ad_dynstat_adtheta_min       =  -7.5297906832602E-01
(PID.TID 0000.0001) %MON ad_dynstat_adtheta_mean      =  -2.9718530630997E-02
(PID.TID 0000.0001) %MON ad_dynstat_adtheta_sd        =   1.3326500128855E-01
(PID.TID 0000.0001) %MON ad_dynstat_adtheta_del2      =   2.8325162781932E-04
(PID.TID 0000.0001) %MON ad_dynstat_adsalt_max        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adsalt_min        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adsalt_mean       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adsalt_sd         =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ad_dynstat_adsalt_del2       =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End AD_MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 ph-pack: packing ecco_cost
 ph-pack: packing ecco_ctrl
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient-check starts (grdchk_main)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) grdchk reference fc: fcref       =  1.47701073786182E+00
grad-res -------------------------------
 grad-res  proc    #    i    j    k   bi   bj iobc       fc ref            fc + eps           fc - eps
 grad-res  proc    #    i    j    k   bi   bj iobc      adj grad            fd grad          1 - fd/adj
 grad-res exact position met: 
 grad-res     0   97    1    1    4    1    1
(PID.TID 0000.0001) ====== Starts gradient-check number   1 (=ichknum) =======
 ph-test icomp, ncvarcomp, ichknum           97        8192           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1           0           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1          32           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1          64           1
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1          96           1
 ph-grd -->hit<--            1           1           4           1
(PID.TID 0000.0001) grdchk pos: i,j,k=    1    1    4 ; bi,bj=   1   1 ; iobc=  1 ; rec=   1
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718349022E+02  2.04436757292323E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325184813E+02  1.92987571287909E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.500000000000000D-08
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701173786179D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701174286179D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701174286179D+01
(PID.TID 0000.0001)  global fc =  0.147701174286179D+01
(PID.TID 0000.0001) grdchk perturb(+)fc: fcpertplus  =  1.47701174286179E+00
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718349022E+02  2.04436757292323E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325184813E+02  1.92987571287909E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.500000000000000D-08
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701173786179D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701174286179D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701174286179D+01
(PID.TID 0000.0001)  global fc =  0.147701174286179D+01
(PID.TID 0000.0001) grdchk perturb(-)fc: fcpertminus =  1.47701174286179E+00
grad-res -------------------------------
 grad-res     0    1    1    1    4    1    1    1   1.47701073786E+00  1.47701174286E+00  1.47701174286E+00
 grad-res     0    1    1   97    0    1    1    1   0.00000000000E+00  0.00000000000E+00  0.00000000000E+00
(PID.TID 0000.0001)  ADM  ref_cost_function      =  1.47701073786182E+00
(PID.TID 0000.0001)  ADM  adjoint_gradient       =  0.00000000000000E+00
(PID.TID 0000.0001)  ADM  finite-diff_grad       =  0.00000000000000E+00
(PID.TID 0000.0001) ====== End of gradient-check number   1 (ierr=  0) =======
(PID.TID 0000.0001) ====== Starts gradient-check number   2 (=ichknum) =======
 ph-test icomp, ncvarcomp, ichknum           98        8192           2
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1          97           2
 ph-grd -->hit<--            1           2           4           1
(PID.TID 0000.0001) grdchk pos: i,j,k=    1    2    4 ; bi,bj=   1   1 ; iobc=  1 ; rec=   1
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718349077E+02  2.04436757292253E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325185377E+02  1.92987571287426E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.500000000000000D-08
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701229545064D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701230045064D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701230045064D+01
(PID.TID 0000.0001)  global fc =  0.147701230045064D+01
(PID.TID 0000.0001) grdchk perturb(+)fc: fcpertplus  =  1.47701230045064E+00
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718348959E+02  2.04436757292404E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325184243E+02  1.92987571288399E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.500000000000000D-08
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701118176573D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701118676573D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701118676573D+01
(PID.TID 0000.0001)  global fc =  0.147701118676573D+01
(PID.TID 0000.0001) grdchk perturb(-)fc: fcpertminus =  1.47701118676573E+00
grad-res -------------------------------
 grad-res     0    2    1    2    4    1    1    1   1.47701073786E+00  1.47701230045E+00  1.47701118677E+00
 grad-res     0    2    2   98    0    1    1    1   5.56842434466E-03  5.56842455479E-03 -3.77366475846E-08
(PID.TID 0000.0001)  ADM  ref_cost_function      =  1.47701073786182E+00
(PID.TID 0000.0001)  ADM  adjoint_gradient       =  5.56842434465789E-03
(PID.TID 0000.0001)  ADM  finite-diff_grad       =  5.56842455479156E-03
(PID.TID 0000.0001) ====== End of gradient-check number   2 (ierr=  0) =======
(PID.TID 0000.0001) ====== Starts gradient-check number   3 (=ichknum) =======
 ph-test icomp, ncvarcomp, ichknum           99        8192           3
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1          98           3
 ph-grd -->hit<--            1           3           4           1
(PID.TID 0000.0001) grdchk pos: i,j,k=    1    3    4 ; bi,bj=   1   1 ; iobc=  1 ; rec=   1
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718349075E+02  2.04436757292256E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325185393E+02  1.92987571287411E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.500000000000000D-08
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701230547672D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701231047672D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701231047672D+01
(PID.TID 0000.0001)  global fc =  0.147701231047672D+01
(PID.TID 0000.0001) grdchk perturb(+)fc: fcpertplus  =  1.47701231047672E+00
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718348955E+02  2.04436757292410E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325184253E+02  1.92987571288390E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.500000000000000D-08
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701117173774D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701117673774D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701117673774D+01
(PID.TID 0000.0001)  global fc =  0.147701117673774D+01
(PID.TID 0000.0001) grdchk perturb(-)fc: fcpertminus =  1.47701117673774E+00
grad-res -------------------------------
 grad-res     0    3    1    3    4    1    1    1   1.47701073786E+00  1.47701231048E+00  1.47701117674E+00
 grad-res     0    3    3   99    0    1    1    1   5.66869450426E-03  5.66869486684E-03 -6.39620780785E-08
(PID.TID 0000.0001)  ADM  ref_cost_function      =  1.47701073786182E+00
(PID.TID 0000.0001)  ADM  adjoint_gradient       =  5.66869450426348E-03
(PID.TID 0000.0001)  ADM  finite-diff_grad       =  5.66869486684496E-03
(PID.TID 0000.0001) ====== End of gradient-check number   3 (ierr=  0) =======
(PID.TID 0000.0001) ====== Starts gradient-check number   4 (=ichknum) =======
 ph-test icomp, ncvarcomp, ichknum          100        8192           4
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1          99           4
 ph-grd -->hit<--            1           4           4           1
(PID.TID 0000.0001) grdchk pos: i,j,k=    1    4    4 ; bi,bj=   1   1 ; iobc=  1 ; rec=   1
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718349076E+02  2.04436757292255E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325185376E+02  1.92987571287426E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.500000000000000D-08
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701231575998D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701232075998D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701232075998D+01
(PID.TID 0000.0001)  global fc =  0.147701232075998D+01
(PID.TID 0000.0001) grdchk perturb(+)fc: fcpertplus  =  1.47701232075998E+00
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718348958E+02  2.04436757292406E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325184256E+02  1.92987571288387E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.500000000000000D-08
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701116146135D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701116646135D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701116646135D+01
(PID.TID 0000.0001)  global fc =  0.147701116646135D+01
(PID.TID 0000.0001) grdchk perturb(-)fc: fcpertminus =  1.47701116646135E+00
grad-res -------------------------------
 grad-res     0    4    1    4    4    1    1    1   1.47701073786E+00  1.47701232076E+00  1.47701116646E+00
 grad-res     0    4    4  100    0    1    1    1   5.77149324922E-03  5.77149313452E-03  1.98732276191E-08
(PID.TID 0000.0001)  ADM  ref_cost_function      =  1.47701073786182E+00
(PID.TID 0000.0001)  ADM  adjoint_gradient       =  5.77149324921917E-03
(PID.TID 0000.0001)  ADM  finite-diff_grad       =  5.77149313452097E-03
(PID.TID 0000.0001) ====== End of gradient-check number   4 (ierr=  0) =======
(PID.TID 0000.0001) ====== Starts gradient-check number   5 (=ichknum) =======
 ph-test icomp, ncvarcomp, ichknum          101        8192           5
 ph-grd _loc: bi, bj, icomptest, ichknum            1           1         100           5
 ph-grd -->hit<--            1           5           4           1
(PID.TID 0000.0001) grdchk pos: i,j,k=    1    5    4 ; bi,bj=   1   1 ; iobc=  1 ; rec=   1
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718349079E+02  2.04436757292251E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325185391E+02  1.92987571287413E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.500000000000000D-08
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701232551278D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701233051278D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701233051278D+01
(PID.TID 0000.0001)  global fc =  0.147701233051278D+01
(PID.TID 0000.0001) grdchk perturb(+)fc: fcpertplus  =  1.47701233051278E+00
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =  -7.87435592178018E+00  1.37697984471785E+00
 cg2d: Sum(rhs),rhsMax =  -1.01791081157115E+02  2.13040853307022E-01
 cg2d: Sum(rhs),rhsMax =  -1.59112718348971E+02  2.04436757292389E-01
 cg2d: Sum(rhs),rhsMax =  -2.24736325184247E+02  1.92987571288395E-01
(PID.TID 0000.0001) Did not write pickup because writePickupAtEnd = FALSE
 --> f_obcsn   = 0.000000000000000D+00
 --> f_obcss   = 0.000000000000000D+00
 --> f_obcsw   = 0.500000000000000D-08
 --> f_obcse   = 0.000000000000000D+00
(PID.TID 0000.0001)  --> f_gencost = 0.147701115171239D+01 1
(PID.TID 0000.0001)  --> f_genarr3d = 0.000000000000000D+00 1
(PID.TID 0000.0001)  --> fc               = 0.147701115671239D+01
(PID.TID 0000.0001)   early fc =  0.000000000000000D+00
(PID.TID 0000.0001)   local fc =  0.147701115671239D+01
(PID.TID 0000.0001)  global fc =  0.147701115671239D+01
(PID.TID 0000.0001) grdchk perturb(-)fc: fcpertminus =  1.47701115671239E+00
grad-res -------------------------------
 grad-res     0    5    1    5    4    1    1    1   1.47701073786E+00  1.47701233051E+00  1.47701115671E+00
 grad-res     0    5    5  101    0    1    1    1   5.86900146724E-03  5.86900191779E-03 -7.67675387703E-08
(PID.TID 0000.0001)  ADM  ref_cost_function      =  1.47701073786182E+00
(PID.TID 0000.0001)  ADM  adjoint_gradient       =  5.86900146724214E-03
(PID.TID 0000.0001)  ADM  finite-diff_grad       =  5.86900191779094E-03
(PID.TID 0000.0001) ====== End of gradient-check number   5 (ierr=  0) =======
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient check results  >>> START <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  EPS =   1.000000E-04
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output h.p:  Id Itile Jtile LAYER   bi   bj   X(Id)           X(Id)+/-EPS
(PID.TID 0000.0001) grdchk output h.c:  Id  FC                   FC1                  FC2
(PID.TID 0000.0001) grdchk output h.g:  Id     FC1-FC2/(2*EPS)      ADJ GRAD(FC)         1-FDGRD/ADGRD
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output (p):   1     1     1     4    1    1   0.000000000E+00 -1.000000000E-04
(PID.TID 0000.0001) grdchk output (c):   1  1.4770107378618E+00  1.4770117428618E+00  1.4770117428618E+00
(PID.TID 0000.0001) grdchk output (g):   1     0.0000000000000E+00  0.0000000000000E+00  0.0000000000000E+00
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output (p):   2     1     2     4    1    1   0.000000000E+00 -1.000000000E-04
(PID.TID 0000.0001) grdchk output (c):   2  1.4770107378618E+00  1.4770123004506E+00  1.4770111867657E+00
(PID.TID 0000.0001) grdchk output (g):   2     5.5684245547916E-03  5.5684243446579E-03 -3.7736647584552E-08
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output (p):   3     1     3     4    1    1   0.000000000E+00 -1.000000000E-04
(PID.TID 0000.0001) grdchk output (c):   3  1.4770107378618E+00  1.4770123104767E+00  1.4770111767377E+00
(PID.TID 0000.0001) grdchk output (g):   3     5.6686948668450E-03  5.6686945042635E-03 -6.3962078078461E-08
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output (p):   4     1     4     4    1    1   0.000000000E+00 -1.000000000E-04
(PID.TID 0000.0001) grdchk output (c):   4  1.4770107378618E+00  1.4770123207600E+00  1.4770111664613E+00
(PID.TID 0000.0001) grdchk output (g):   4     5.7714931345210E-03  5.7714932492192E-03  1.9873227619094E-08
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk output (p):   5     1     5     4    1    1   0.000000000E+00 -1.000000000E-04
(PID.TID 0000.0001) grdchk output (c):   5  1.4770107378618E+00  1.4770123305128E+00  1.4770111567124E+00
(PID.TID 0000.0001) grdchk output (g):   5     5.8690019177909E-03  5.8690014672421E-03 -7.6767538770284E-08
(PID.TID 0000.0001) 
(PID.TID 0000.0001) grdchk  summary  :  RMS of    5 ratios =  4.8586833994166E-08
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Gradient check results  >>> END <<<
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   38.262015249114484
(PID.TID 0000.0001)         System time:  0.38001498579978943
(PID.TID 0000.0001)     Wall clock time:   38.752650976181030
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:  0.10044400254264474
(PID.TID 0000.0001)         System time:   4.5416001230478287E-002
(PID.TID 0000.0001)     Wall clock time:  0.20148611068725586
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "ADTHE_MAIN_LOOP          [ADJOINT RUN]":
(PID.TID 0000.0001)           User time:   12.228305250406265
(PID.TID 0000.0001)         System time:  0.21082200482487679
(PID.TID 0000.0001)     Wall clock time:   12.461027145385742
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "FORWARD_STEP        [MAIN_DO_LOOP]":
(PID.TID 0000.0001)           User time:   25.956096529960632
(PID.TID 0000.0001)         System time:   1.1153995990753174E-002
(PID.TID 0000.0001)     Wall clock time:   25.980992317199707
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "DO_STATEVARS_DIAGS  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.3305416107177734E-004
(PID.TID 0000.0001)         System time:   5.9977173805236816E-006
(PID.TID 0000.0001)     Wall clock time:   2.3698806762695312E-004
(PID.TID 0000.0001)          No. starts:          12
(PID.TID 0000.0001)           No. stops:          12
(PID.TID 0000.0001)   Seconds in section "LOAD_FIELDS_DRIVER  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   8.5981249809265137E-002
(PID.TID 0000.0001)         System time:   1.1199712753295898E-004
(PID.TID 0000.0001)     Wall clock time:   8.6102008819580078E-002
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "EXF_GETFORCING     [LOAD_FLDS_DRIVER]":
(PID.TID 0000.0001)           User time:   9.1066420078277588E-002
(PID.TID 0000.0001)         System time:   1.9899010658264160E-004
(PID.TID 0000.0001)     Wall clock time:   9.1361284255981445E-002
(PID.TID 0000.0001)          No. starts:          52
(PID.TID 0000.0001)           No. stops:          52
(PID.TID 0000.0001)   Seconds in section "EXTERNAL_FLDS_LOAD [LOAD_FLDS_DRIVER]":
(PID.TID 0000.0001)           User time:   4.7731399536132812E-004
(PID.TID 0000.0001)         System time:   1.9818544387817383E-006
(PID.TID 0000.0001)     Wall clock time:   4.7969818115234375E-004
(PID.TID 0000.0001)          No. starts:          52
(PID.TID 0000.0001)           No. stops:          52
(PID.TID 0000.0001)   Seconds in section "CTRL_MAP_FORCING  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.0465593338012695E-004
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   3.9243698120117188E-004
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.9118428230285645E-002
(PID.TID 0000.0001)         System time:   2.4989247322082520E-005
(PID.TID 0000.0001)     Wall clock time:   1.9204616546630859E-002
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.22669690847396851
(PID.TID 0000.0001)         System time:   5.0067901611328125E-006
(PID.TID 0000.0001)     Wall clock time:  0.22684502601623535
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "DYNAMICS            [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.9396277666091919
(PID.TID 0000.0001)         System time:   9.9837779998779297E-006
(PID.TID 0000.0001)     Wall clock time:   4.9408731460571289
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "SOLVE_FOR_PRESSURE  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   7.2265335917472839
(PID.TID 0000.0001)         System time:   4.0130019187927246E-003
(PID.TID 0000.0001)     Wall clock time:   7.2319846153259277
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "MOM_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.22495180368423462
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:  0.22509980201721191
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "INTEGR_CONTINUITY   [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.24052137136459351
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:  0.24067139625549316
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   7.5146079063415527E-002
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   7.5312852859497070E-002
(PID.TID 0000.0001)          No. starts:          96
(PID.TID 0000.0001)           No. stops:          96
(PID.TID 0000.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   3.7270334959030151
(PID.TID 0000.0001)         System time:   1.0013580322265625E-005
(PID.TID 0000.0001)     Wall clock time:   3.7279376983642578
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "TRC_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.5478343963623047E-004
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   4.4584274291992188E-004
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "MONITOR             [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.2183637619018555E-002
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   4.2183637619018555E-002
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "COST_TILE           [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   3.7544965744018555E-004
(PID.TID 0000.0001)         System time:   0.0000000000000000
(PID.TID 0000.0001)     Wall clock time:   3.7860870361328125E-004
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.1933922767639160E-002
(PID.TID 0000.0001)         System time:   2.9700025916099548E-003
(PID.TID 0000.0001)     Wall clock time:   1.4731407165527344E-002
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "DO_WRITE_PICKUP     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   8.4931850433349609E-003
(PID.TID 0000.0001)         System time:   3.9959996938705444E-003
(PID.TID 0000.0001)     Wall clock time:   1.2484312057495117E-002
(PID.TID 0000.0001)          No. starts:          48
(PID.TID 0000.0001)           No. stops:          48
(PID.TID 0000.0001)   Seconds in section "COST_OBCS          [ECCO SPIN-DOWN]":
(PID.TID 0000.0001)           User time:   1.7777919769287109E-002
(PID.TID 0000.0001)         System time:   3.0029989778995514E-002
(PID.TID 0000.0001)     Wall clock time:   4.7825098037719727E-002
(PID.TID 0000.0001)          No. starts:          11
(PID.TID 0000.0001)           No. stops:          11
(PID.TID 0000.0001)   Seconds in section "COST_GENCOST_ALL    [ECCO SPIN-DOWN]":
(PID.TID 0000.0001)           User time:  0.22885274887084961
(PID.TID 0000.0001)         System time:   2.5987990200519562E-002
(PID.TID 0000.0001)     Wall clock time:  0.25745701789855957
(PID.TID 0000.0001)          No. starts:          11
(PID.TID 0000.0001)           No. stops:          11
(PID.TID 0000.0001)   Seconds in section "CTRL_COST_DRIVER [ECCO SPIN-DOWN]":
(PID.TID 0000.0001)           User time:   2.8175115585327148E-002
(PID.TID 0000.0001)         System time:   2.8380155563354492E-003
(PID.TID 0000.0001)     Wall clock time:   3.1032562255859375E-002
(PID.TID 0000.0001)          No. starts:          11
(PID.TID 0000.0001)           No. stops:          11
(PID.TID 0000.0001)   Seconds in section "CTRL_PACK           [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   9.2258453369140625E-003
(PID.TID 0000.0001)         System time:   8.0330073833465576E-003
(PID.TID 0000.0001)     Wall clock time:   1.7266035079956055E-002
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "CTRL_PACK     [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   4.8122406005859375E-003
(PID.TID 0000.0001)         System time:   8.0260038375854492E-003
(PID.TID 0000.0001)     Wall clock time:   1.2844085693359375E-002
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "GRDCHK_MAIN         [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   25.919136047363281
(PID.TID 0000.0001)         System time:  0.10770997405052185
(PID.TID 0000.0001)     Wall clock time:   26.059946060180664
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   2.4889745712280273
(PID.TID 0000.0001)         System time:   4.0027976036071777E-002
(PID.TID 0000.0001)     Wall clock time:   2.5296847820281982
(PID.TID 0000.0001)          No. starts:          10
(PID.TID 0000.0001)           No. stops:          10
(PID.TID 0000.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   23.420961380004883
(PID.TID 0000.0001)         System time:   5.8989942073822021E-002
(PID.TID 0000.0001)     Wall clock time:   23.512380838394165
(PID.TID 0000.0001)          No. starts:          10
(PID.TID 0000.0001)           No. stops:          10
(PID.TID 0000.0001)   Seconds in section "COST_AVERAGESFIELDS [MAIN_DO_LOOP]":
(PID.TID 0000.0001)           User time:  0.71129608154296875
(PID.TID 0000.0001)         System time:   5.9008598327636719E-005
(PID.TID 0000.0001)     Wall clock time:  0.71154856681823730
(PID.TID 0000.0001)          No. starts:          40
(PID.TID 0000.0001)           No. stops:          40
(PID.TID 0000.0001)   Seconds in section "MAIN_DO_LOOP        [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   21.645304679870605
(PID.TID 0000.0001)         System time:   4.0580034255981445E-003
(PID.TID 0000.0001)     Wall clock time:   21.654401779174805
(PID.TID 0000.0001)          No. starts:          40
(PID.TID 0000.0001)           No. stops:          40
(PID.TID 0000.0001)   Seconds in section "COST_AVERAGESFIELDS [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:  0.19194126129150391
(PID.TID 0000.0001)         System time:   1.1926949024200439E-002
(PID.TID 0000.0001)     Wall clock time:  0.23081183433532715
(PID.TID 0000.0001)          No. starts:          10
(PID.TID 0000.0001)           No. stops:          10
(PID.TID 0000.0001)   Seconds in section "ECCO_COST_DRIVER   [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:  0.25743865966796875
(PID.TID 0000.0001)         System time:   4.2616009712219238E-002
(PID.TID 0000.0001)     Wall clock time:  0.30019593238830566
(PID.TID 0000.0001)          No. starts:          10
(PID.TID 0000.0001)           No. stops:          10
(PID.TID 0000.0001)   Seconds in section "COST_FINAL         [ADJOINT SPIN-DOWN]":
(PID.TID 0000.0001)           User time:   1.8711090087890625E-003
(PID.TID 0000.0001)         System time:   2.5099515914916992E-004
(PID.TID 0000.0001)     Wall clock time:   2.1207332611083984E-003
(PID.TID 0000.0001)          No. starts:          10
(PID.TID 0000.0001)           No. stops:          10
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile communication statistics
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // o Tile number: 000001
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000002
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000003
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Tile number: 000004
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Thread number: 000001
(PID.TID 0000.0001) //            No. barriers =          47988
(PID.TID 0000.0001) //      Max. barrier spins =              1
(PID.TID 0000.0001) //      Min. barrier spins =              1
(PID.TID 0000.0001) //     Total barrier spins =          47988
(PID.TID 0000.0001) //      Avg. barrier spins =       1.00E+00
PROGRAM MAIN: Execution ended Normally
