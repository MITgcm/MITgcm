(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) //                      MITgcm UV
(PID.TID 0000.0001) //                      =========
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // execution environment starting up...
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // MITgcmUV version:  checkpoint66k
(PID.TID 0000.0001) // Build user:        jklymak
(PID.TID 0000.0001) // Build host:        valdez.seos.uvic.ca
(PID.TID 0000.0001) // Build date:        Thu 18 Jan 2018 10:45:49 PST
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Execution Environment parameter file "eedata"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Example "eedata" file
(PID.TID 0000.0001) ># Lines beginning "#" are comments
(PID.TID 0000.0001) ># nTx - No. threads per process in X
(PID.TID 0000.0001) ># nTy - No. threads per process in Y
(PID.TID 0000.0001) > &EEPARMS
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) ># Note: Some systems use & as the
(PID.TID 0000.0001) ># namelist terminator. Other systems
(PID.TID 0000.0001) ># use a / character (as shown here).
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Computational Grid Specification ( see files "SIZE.h" )
(PID.TID 0000.0001) //                                  ( and "eedata"       )
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001)      nPx =    1 ; /* No. processes in X */
(PID.TID 0000.0001)      nPy =    1 ; /* No. processes in Y */
(PID.TID 0000.0001)      nSx =    1 ; /* No. tiles in X per process */
(PID.TID 0000.0001)      nSy =    1 ; /* No. tiles in Y per process */
(PID.TID 0000.0001)      sNx =   16 ; /* Tile size in X */
(PID.TID 0000.0001)      sNy =   12 ; /* Tile size in Y */
(PID.TID 0000.0001)      OLx =    4 ; /* Tile overlap distance in X */
(PID.TID 0000.0001)      OLy =    4 ; /* Tile overlap distance in Y */
(PID.TID 0000.0001)      nTx =    1 ; /* No. threads in X per process */
(PID.TID 0000.0001)      nTy =    1 ; /* No. threads in Y per process */
(PID.TID 0000.0001)       Nr =    6 ; /* No. levels in the vertical   */
(PID.TID 0000.0001)       Nx =   16 ; /* Total domain size in X ( = nPx*nSx*sNx ) */
(PID.TID 0000.0001)       Ny =   12 ; /* Total domain size in Y ( = nPy*nSy*sNy ) */
(PID.TID 0000.0001)   nTiles =    1 ; /* Total no. tiles per process ( = nSx*nSy ) */
(PID.TID 0000.0001)   nProcs =    1 ; /* Total no. processes ( = nPx*nPy ) */
(PID.TID 0000.0001) nThreads =    1 ; /* Total no. threads per process ( = nTx*nTy ) */
(PID.TID 0000.0001) usingMPI =    F ; /* Flag used to control whether MPI is in use */
(PID.TID 0000.0001)                   /*  note: To execute a program with MPI calls */
(PID.TID 0000.0001)                   /*  it must be launched appropriately e.g     */
(PID.TID 0000.0001)                   /*  "mpirun -np 64 ......"                    */
(PID.TID 0000.0001) useCoupler=    F ;/* Flag used to control communications with   */
(PID.TID 0000.0001)                   /*  other model components, through a coupler */
(PID.TID 0000.0001) debugMode =    F ; /* print debug msg. (sequence of S/R calls)  */
(PID.TID 0000.0001) printMapIncludesZeros=    F ; /* print zeros in Std.Output maps */
(PID.TID 0000.0001) maxLengthPrt1D=   65 /* maxLength of 1D array printed to StdOut */
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Mapping of tiles to threads
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // -o- Thread   1, tiles (   1:   1,   1:   1)
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile connectvity table
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile number: 000001 (process no. = 000000)
(PID.TID 0000.0001) //        WEST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //        EAST: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       SOUTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) //       NORTH: Tile = 000001, Process = 000000, Comm = put
(PID.TID 0000.0001) //                bi = 000001, bj = 000001
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS: opening model parameter file "data"
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) ># | Model parameters |
(PID.TID 0000.0001) ># ====================
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># See src/ini_parms.F for possible parameters.
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># Continuous equation parameters
(PID.TID 0000.0001) > &PARM01
(PID.TID 0000.0001) > debugLevel=2,
(PID.TID 0000.0001) > tRefFile='TRef.bin',
(PID.TID 0000.0001) > sRef= 6*35.,
(PID.TID 0000.0001) > viscAz=1.E-5,
(PID.TID 0000.0001) > viscAh=1.0E-4,
(PID.TID 0000.0001) > no_slip_sides=.FALSE.,
(PID.TID 0000.0001) > no_slip_bottom=.FALSE.,
(PID.TID 0000.0001) > viscA4=0.E12,
(PID.TID 0000.0001) > diffKhT=1.0E-4,
(PID.TID 0000.0001) > diffKzT=1.E-5,
(PID.TID 0000.0001) > diffKhS=1.E3,
(PID.TID 0000.0001) > diffKzS=1.E-5,
(PID.TID 0000.0001) > f0=0.E-4,
(PID.TID 0000.0001) > beta=0.02E-11,
(PID.TID 0000.0001) > tAlpha=2.E-4,
(PID.TID 0000.0001) > sBeta =0.E-4,
(PID.TID 0000.0001) > gravity=9.81,
(PID.TID 0000.0001) > gBaro=9.81,
(PID.TID 0000.0001) > rigidLid=.FALSE.,
(PID.TID 0000.0001) > implicitFreeSurface=.TRUE.,
(PID.TID 0000.0001) > eosType='LINEAR',
(PID.TID 0000.0001) > nonHydrostatic=.FALSE.,
(PID.TID 0000.0001) > readBinaryPrec=64,
(PID.TID 0000.0001) > saltStepping=.FALSE.,
(PID.TID 0000.0001) ># minimum cell fraction.  This reduces steppiness..
(PID.TID 0000.0001) >  hFacMin=0.1,
(PID.TID 0000.0001) >  exactConserv=.FALSE.,
(PID.TID 0000.0001) >  implicitDiffusion=.TRUE.
(PID.TID 0000.0001) >  implicitViscosity=.TRUE.
(PID.TID 0000.0001) ># Superbee on:
(PID.TID 0000.0001) > tempAdvScheme=77,
(PID.TID 0000.0001) > staggerTimeStep=.TRUE.,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Elliptic solver parameters
(PID.TID 0000.0001) > &PARM02
(PID.TID 0000.0001) > cg2dMaxIters=1000,
(PID.TID 0000.0001) > cg2dTargetResidual=1.E-13,
(PID.TID 0000.0001) > cg3dMaxIters=400,
(PID.TID 0000.0001) > cg3dTargetResidual=1.E-13,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Time stepping parameters
(PID.TID 0000.0001) > &PARM03
(PID.TID 0000.0001) ># times are in s
(PID.TID 0000.0001) > startTime=0,
(PID.TID 0000.0001) > endTime=372,
(PID.TID 0000.0001) > deltaT=12.4,
(PID.TID 0000.0001) > abEps=0.1,
(PID.TID 0000.0001) ># once per tide checkpoint...
(PID.TID 0000.0001) > pChkptFreq=44640,
(PID.TID 0000.0001) > chkptFreq=0.0,
(PID.TID 0000.0001) > dumpFreq=0,
(PID.TID 0000.0001) > dumpInitAndLast=.FALSE.
(PID.TID 0000.0001) > monitorFreq=124,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Gridding parameters
(PID.TID 0000.0001) > &PARM04
(PID.TID 0000.0001) > usingCartesianGrid=.TRUE.,
(PID.TID 0000.0001) > usingSphericalPolarGrid=.FALSE.,
(PID.TID 0000.0001) > delXfile='delXvar.bin',
(PID.TID 0000.0001) > delYfile='delYvar.bin',
(PID.TID 0000.0001) > delRfile = 'delZvar.bin',
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) ># Input datasets
(PID.TID 0000.0001) > &PARM05
(PID.TID 0000.0001) > bathyFile='topo.bin',
(PID.TID 0000.0001) > mdsioLocalDir='../../',
(PID.TID 0000.0001) > hydrogThetaFile='T0.bin',
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM01
(PID.TID 0000.0001)  INI_PARMS ; read PARM01 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM02
(PID.TID 0000.0001)  INI_PARMS ; read PARM02 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM03
(PID.TID 0000.0001)  INI_PARMS ; read PARM03 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM04
(PID.TID 0000.0001)  INI_PARMS ; read PARM04 : OK
(PID.TID 0000.0001)  INI_PARMS ; starts to read PARM05
(PID.TID 0000.0001)  INI_PARMS ; read PARM05 : OK
(PID.TID 0000.0001)  INI_PARMS: finished reading file "data"
(PID.TID 0000.0001)  PACKAGES_BOOT: opening data.pkg
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.pkg
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.pkg"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># Packages
(PID.TID 0000.0001) > &PACKAGES
(PID.TID 0000.0001) > useDIAGNOSTICS=.TRUE.,
(PID.TID 0000.0001) > useNF90IO=.TRUE.,
(PID.TID 0000.0001) > /
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  PACKAGES_BOOT: finished reading data.pkg
(PID.TID 0000.0001)  PACKAGES_BOOT: On/Off package Summary
 --------  pkgs with a standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/diagnostics          compiled   and   used ( useDiagnostics           = T )
 pkg/nf90io               compiled   and   used ( useNF90IO                = T )
 -------- pkgs without standard "usePKG" On/Off switch in "data.pkg":  --------
 pkg/generic_advdiff      compiled   and   used ( useGAD                   = T )
 pkg/mom_common           compiled   and   used ( momStepping              = T )
 pkg/mom_vecinv           compiled but not used ( +vectorInvariantMomentum = F )
 pkg/mom_fluxform         compiled   and   used ( & not vectorInvariantMom = T )
 pkg/monitor              compiled   and   used ( monitorFreq > 0.         = T )
 pkg/debug                compiled but not used ( debugMode                = F )
 pkg/rw                   compiled   and   used
 pkg/mdsio                compiled   and   used
(PID.TID 0000.0001)  PACKAGES_BOOT: End of package Summary
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: opening data.diagnostics
(PID.TID 0000.0001)  OPEN_COPY_DATA_FILE: opening file data.diagnostics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Parameter file "data.diagnostics"
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) ># diagnostics Package
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >&diagnostics_list
(PID.TID 0000.0001) ># 3D variables.
(PID.TID 0000.0001) > frequency(1)  = -124,
(PID.TID 0000.0001) > timePhase(1)      =  0,	
(PID.TID 0000.0001) > fields(1:6,1) = 'UVEL    ',
(PID.TID 0000.0001) > 	       	 'VVEL    ',
(PID.TID 0000.0001) >		 'WVEL    ',
(PID.TID 0000.0001) >		 'THETA   ',
(PID.TID 0000.0001) >		 'SALT    ',
(PID.TID 0000.0001) >		 'PHIHYD  ',
(PID.TID 0000.0001) > filename(1)   = 'statevars'
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># 2D state vars.  Bummer these can't be in same file as above.
(PID.TID 0000.0001) > filename(2)   = 'statevars2d'
(PID.TID 0000.0001) > frequency(2)  = -124,
(PID.TID 0000.0001) > timePhase(2)  = 0,
(PID.TID 0000.0001) > fields(1:2,2) = 'ETAN    ',
(PID.TID 0000.0001) > 	         'PHIBOT  ',
(PID.TID 0000.0001) >#
(PID.TID 0000.0001) ># test level vars
(PID.TID 0000.0001) > filename(3)   = 'levelvars'
(PID.TID 0000.0001) > frequency(3)  = 124,
(PID.TID 0000.0001) > fields(1:2,3) = 'THETA   ',
(PID.TID 0000.0001) > 	       	 'SALT    ',
(PID.TID 0000.0001) > levels(1:3,3) = 1., 3., 6.,
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >
(PID.TID 0000.0001) >&diag_statis_parms
(PID.TID 0000.0001) >/
(PID.TID 0000.0001) 
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "diagnostics_list": start
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "diagnostics_list": OK
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "DIAG_STATIS_PARMS": start
(PID.TID 0000.0001) S/R DIAGNOSTICS_READPARMS, read namelist "DIAG_STATIS_PARMS": OK
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: global parameter summary:
(PID.TID 0000.0001)  dumpAtLast = /* always write time-ave diags at the end */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diag_mnc =   /* write NetCDF output files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useMissingValue = /* put MissingValue where mask = 0 */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_maxIters = /* max number of iters in diag_cg2d */
(PID.TID 0000.0001)                    1000
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_resTarget = /* residual target for diag_cg2d */
(PID.TID 0000.0001)                 1.000000000000000E-13
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  diagCG_pcOffDFac = /* preconditioner off-diagonal factor */
(PID.TID 0000.0001)                 9.611687812379854E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: active diagnostics summary:
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001) Creating Output Stream: statevars
(PID.TID 0000.0001) Output Frequency:       -124.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:          0.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    UVEL     VVEL     WVEL     THETA    SALT     PHIHYD
(PID.TID 0000.0001) Creating Output Stream: statevars2d
(PID.TID 0000.0001) Output Frequency:       -124.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:          0.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02
(PID.TID 0000.0001)  Levels:    will be set later
(PID.TID 0000.0001)  Fields:    ETAN     PHIBOT
(PID.TID 0000.0001) Creating Output Stream: levelvars
(PID.TID 0000.0001) Output Frequency:        124.000000 ; Phase:           0.000000
(PID.TID 0000.0001)  Averaging Freq.:        124.000000 , Phase:           0.000000 , Cycle:   1
(PID.TID 0000.0001)  missing value: -9.990000000000E+02
(PID.TID 0000.0001)  Levels:       1.   3.   6.
(PID.TID 0000.0001)  Fields:    THETA    SALT
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001)  DIAGNOSTICS_READPARMS: statistics diags. summary:
(PID.TID 0000.0001) -----------------------------------------------------
(PID.TID 0000.0001) 
(PID.TID 0000.0001) SET_PARMS: done
==> SYSTEM CALL (from INI_MODEL_IO): > mkdir -p ../../0000 <
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  MDS_READVEC_LOC: open file: delXvar.bin
(PID.TID 0000.0001) S/R LOAD_GRID_SPACING: delX loaded from file: delXvar.bin
(PID.TID 0000.0001)  MDS_READVEC_LOC: open file: delYvar.bin
(PID.TID 0000.0001) S/R LOAD_GRID_SPACING: delY loaded from file: delYvar.bin
(PID.TID 0000.0001)  MDS_READVEC_LOC: open file: delZvar.bin
(PID.TID 0000.0001) S/R LOAD_GRID_SPACING: delR loaded from file: delZvar.bin
(PID.TID 0000.0001) Enter INI_VERTICAL_GRID: setInterFDr=    T ; setCenterDr=    F
(PID.TID 0000.0001) %MON XC_max                       =   1.5500000000000E+04
(PID.TID 0000.0001) %MON XC_min                       =   5.0000000000000E+02
(PID.TID 0000.0001) %MON XC_mean                      =   8.0000000000000E+03
(PID.TID 0000.0001) %MON XC_sd                        =   4.6097722286464E+03
(PID.TID 0000.0001) %MON XG_max                       =   1.5000000000000E+04
(PID.TID 0000.0001) %MON XG_min                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON XG_mean                      =   7.5000000000000E+03
(PID.TID 0000.0001) %MON XG_sd                        =   4.6097722286464E+03
(PID.TID 0000.0001) %MON DXC_max                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXC_min                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXC_mean                     =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXC_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DXF_max                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXF_min                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXF_mean                     =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXF_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DXG_max                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXG_min                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXG_mean                     =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXG_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DXV_max                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXV_min                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXV_mean                     =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DXV_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YC_max                       =   1.1500000000000E+04
(PID.TID 0000.0001) %MON YC_min                       =   5.0000000000000E+02
(PID.TID 0000.0001) %MON YC_mean                      =   6.0000000000000E+03
(PID.TID 0000.0001) %MON YC_sd                        =   3.4520525295347E+03
(PID.TID 0000.0001) %MON YG_max                       =   1.1000000000000E+04
(PID.TID 0000.0001) %MON YG_min                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON YG_mean                      =   5.5000000000000E+03
(PID.TID 0000.0001) %MON YG_sd                        =   3.4520525295347E+03
(PID.TID 0000.0001) %MON DYC_max                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_min                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_mean                     =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYC_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYF_max                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_min                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_mean                     =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYF_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYG_max                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_min                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_mean                     =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYG_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON DYU_max                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_min                      =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_mean                     =   1.0000000000000E+03
(PID.TID 0000.0001) %MON DYU_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RA_max                       =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RA_min                       =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RA_mean                      =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RA_sd                        =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RAW_max                      =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RAW_min                      =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RAW_mean                     =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RAW_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RAS_max                      =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RAS_min                      =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RAS_mean                     =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RAS_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON RAZ_max                      =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RAZ_min                      =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RAZ_mean                     =   1.0000000000000E+06
(PID.TID 0000.0001) %MON RAZ_sd                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_max                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_min                  =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_mean                 =   1.0000000000000E+00
(PID.TID 0000.0001) %MON AngleCS_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_max                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_min                  =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_mean                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON AngleSN_sd                   =   0.0000000000000E+00
(PID.TID 0000.0001)  MDS_READVEC_LOC: open file: TRef.bin
(PID.TID 0000.0001) S/R LOAD_REF_FILES: tRef loaded from file: TRef.bin
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: topo.bin
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model R_low (ini_masks_etc)
(PID.TID 0000.0001) // CMIN =         -2.000000000000000E+03
(PID.TID 0000.0001) // CMAX =         -1.500000000000000E+03
(PID.TID 0000.0001) // CINT =          1.851851851851851E+01
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:    20:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    16:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) K =   1
(PID.TID 0000.0001) //                I=6       I=16
(PID.TID 0000.0001) // |--J--|321012345|789012345|7890
(PID.TID 0000.0001) //     16 ----------iv+vi---------
(PID.TID 0000.0001) //     15 ----------iv+vi---------
(PID.TID 0000.0001) //     14 ----------iv+vi---------
(PID.TID 0000.0001) //     13 ----------iv+vi---------
(PID.TID 0000.0001) //     12 ----------iv+vi---------
(PID.TID 0000.0001) //     11 ----------iv+vi---------
(PID.TID 0000.0001) //     10 ----------iv+vi---------
(PID.TID 0000.0001) //      9 ----------iv+vi---------
(PID.TID 0000.0001) //      8 ----------iv+vi---------
(PID.TID 0000.0001) //      7 ----------iv+vi---------
(PID.TID 0000.0001) //      6 ----------iv+vi---------
(PID.TID 0000.0001) //      5 ----------iv+vi---------
(PID.TID 0000.0001) //      4 ----------iv+vi---------
(PID.TID 0000.0001) //      3 ----------iv+vi---------
(PID.TID 0000.0001) //      2 ----------iv+vi---------
(PID.TID 0000.0001) //      1 ----------iv+vi---------
(PID.TID 0000.0001) //      0 ----------iv+vi---------
(PID.TID 0000.0001) //     -1 ----------iv+vi---------
(PID.TID 0000.0001) //     -2 ----------iv+vi---------
(PID.TID 0000.0001) //     -3 ----------iv+vi---------
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field Model Ro_surf (ini_masks_etc)
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+32
(PID.TID 0000.0001) // CMAX =         -1.000000000000000E+32
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:    20:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    16:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacC at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:    20:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    16:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacW at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:    20:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    16:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Field hFacS at iteration          0
(PID.TID 0000.0001) // CMIN =          1.000000000000000E+00
(PID.TID 0000.0001) // CMAX =          1.000000000000000E+00
(PID.TID 0000.0001) // CINT =          0.000000000000000E+00
(PID.TID 0000.0001) // SYMBOLS (CMIN->CMAX): -abcdefghijklmnopqrstuvwxyz+
(PID.TID 0000.0001) //                  0.0: .
(PID.TID 0000.0001) // RANGE I (Lo:Hi:Step):(    -3:    20:     1)
(PID.TID 0000.0001) // RANGE J (Lo:Hi:Step):(    16:    -3:    -1)
(PID.TID 0000.0001) // RANGE K (Lo:Hi:Step):(   1:   1:   1)
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // END OF FIELD                                          =
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GAD_INIT_FIXED: GAD_OlMinSize=  2  0  1
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) // GAD parameters :
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) tempAdvScheme =   /* Temp. Horiz.Advection scheme selector */
(PID.TID 0000.0001)                      77
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempVertAdvScheme =   /* Temp. Vert. Advection scheme selector */
(PID.TID 0000.0001)                      77
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempMultiDimAdvec =   /* use Muti-Dim Advec method for Temp */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempSOM_Advection = /* use 2nd Order Moment Advection for Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGt = /* apply Adams-Bashforth extrapolation on Gt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_T = /* apply Adams-Bashforth extrapolation on Temp */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvScheme =   /* Salt. Horiz.advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltVertAdvScheme =   /* Salt. Vert. Advection scheme selector */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltMultiDimAdvec =   /* use Muti-Dim Advec method for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltSOM_Advection = /* use 2nd Order Moment Advection for Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforthGs = /* apply Adams-Bashforth extrapolation on Gs */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) AdamsBashforth_S = /* apply Adams-Bashforth extrapolation on Salt */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // ===================================
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGNOSTICS_SET_LEVELS: done
(PID.TID 0000.0001)  Total Nb of available Diagnostics: ndiagt=   186
(PID.TID 0000.0001)  write list of available Diagnostics to file: available_diagnostics.log
(PID.TID 0000.0001) SETDIAG: Allocate  6 x  1 Levels for Diagnostic #    30 UVEL
(PID.TID 0000.0001) SETDIAG: Allocate  6 x  1 Levels for Diagnostic #    31 VVEL
(PID.TID 0000.0001) SETDIAG: Allocate  6 x  1 Levels for Diagnostic #    32 WVEL
(PID.TID 0000.0001) SETDIAG: Allocate  6 x  1 Levels for Diagnostic #    26 THETA
(PID.TID 0000.0001) SETDIAG: Allocate  6 x  1 Levels for Diagnostic #    27 SALT
(PID.TID 0000.0001) SETDIAG: Allocate  6 x  1 Levels for Diagnostic #    71 PHIHYD
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    23 ETAN
(PID.TID 0000.0001) SETDIAG: Allocate  1 x  1 Levels for Diagnostic #    73 PHIBOT
(PID.TID 0000.0001) SETDIAG: Allocate  6 x  1 Levels for Diagnostic #    26 THETA
(PID.TID 0000.0001) SETDIAG: Allocate  6 x  1 Levels for Diagnostic #    27 SALT
(PID.TID 0000.0001)   space allocated for all diagnostics:      50 levels
(PID.TID 0000.0001)   set mate pointer for diag #    30  UVEL     , Parms: UUR     MR , mate:    31
(PID.TID 0000.0001)   set mate pointer for diag #    31  VVEL     , Parms: VVR     MR , mate:    30
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: statevars
(PID.TID 0000.0001)  Levels:       1.   2.   3.   4.   5.   6.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: Set levels for Outp.Stream: statevars2d
(PID.TID 0000.0001)  Levels:       1.
(PID.TID 0000.0001) DIAGNOSTICS_SET_POINTERS: done
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) DIAGSTATS_SET_REGIONS: define no region
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001)   space allocated for all stats-diags:       0 levels
(PID.TID 0000.0001) DIAGSTATS_SET_POINTERS: done
(PID.TID 0000.0001) ------------------------------------------------------------
(PID.TID 0000.0001) %MON fCori_max                    =   2.3000000000000E-09
(PID.TID 0000.0001) %MON fCori_min                    =   1.0000000000000E-10
(PID.TID 0000.0001) %MON fCori_mean                   =   1.2000000000000E-09
(PID.TID 0000.0001) %MON fCori_sd                     =   6.9041050590693E-10
(PID.TID 0000.0001) %MON fCoriG_max                   =   2.2000000000000E-09
(PID.TID 0000.0001) %MON fCoriG_min                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriG_mean                  =   1.1000000000000E-09
(PID.TID 0000.0001) %MON fCoriG_sd                    =   6.9041050590693E-10
(PID.TID 0000.0001) %MON fCoriCos_max                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_min                 =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_mean                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON fCoriCos_sd                  =   0.0000000000000E+00
(PID.TID 0000.0001) INI_CG2D: CG2D normalisation factor =  5.0000000000000001E-04
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model configuration
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // "Physical" paramters ( PARM01 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) buoyancyRelation = /* Type of relation to get Buoyancy */
(PID.TID 0000.0001)               'OCEANIC'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsAir   =  /* fluid major constituent is Air */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fluidIsWater =  /* fluid major constituent is Water */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingPCoords =  /* use p (or p*) vertical coordinate */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingZCoords =  /* use z (or z*) vertical coordinate */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tRef =   /* Reference temperature profile ( oC or K ) */
(PID.TID 0000.0001)                 2.340136054421769E+01,      /* K =  1 */
(PID.TID 0000.0001)                 1.880272108843538E+01,      /* K =  2 */
(PID.TID 0000.0001)                 1.420408163265307E+01,      /* K =  3 */
(PID.TID 0000.0001)                 9.605442176870756E+00,      /* K =  4 */
(PID.TID 0000.0001)                 5.006802721088444E+00,      /* K =  5 */
(PID.TID 0000.0001)                 4.081632653061327E-01       /* K =  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sRef =   /* Reference salinity profile ( psu ) */
(PID.TID 0000.0001)     6 @  3.500000000000000E+01              /* K =  1:  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useStrainTensionVisc= /* Use StrainTension Form of Viscous Operator */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useVariableVisc = /* Use variable horizontal viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useHarmonicVisc = /* Use harmonic horizontal viscosity */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useBiharmonicVisc= /* Use biharmonic horiz.  viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSmag3D = /* Use isotropic 3-D Smagorinsky viscosity */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscAh  =   /* Lateral harmonic viscosity ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscA4  =   /* Lateral biharmonic viscosity ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_sides =  /* Viscous BCs: No-slip sides */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sideDragFactor = /* side-drag scaling factor (non-dim) */
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) viscArNr = /* vertical profile of vertical viscosity ( m^2/s )*/
(PID.TID 0000.0001)     6 @  1.000000000000000E-05              /* K =  1:  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) no_slip_bottom =  /* Viscous BCs: No-slip bottom */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomVisc_pCell = /* Partial-cell in bottom Visc. BC */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragLinear = /* linear bottom-drag coefficient ( m/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) bottomDragQuadratic = /* quadratic bottom-drag coefficient (-) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectBotDragQuadr = /* select quadratic bottom drag options */
(PID.TID 0000.0001)                      -1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhT =   /* Laplacian diffusion of heat laterally ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4T =   /* Biharmonic diffusion of heat laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKhS =   /* Laplacian diffusion of salt laterally ( m^2/s ) */
(PID.TID 0000.0001)                 1.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffK4S =   /* Biharmonic diffusion of salt laterally ( m^4/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrT = /* vertical profile of vertical diffusion of Temp ( m^2/s )*/
(PID.TID 0000.0001)     6 @  1.000000000000000E-05              /* K =  1:  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrNrS = /* vertical profile of vertical diffusion of Salt ( m^2/s )*/
(PID.TID 0000.0001)     6 @  1.000000000000000E-05              /* K =  1:  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79surf = /* Surface diffusion for Bryan and Lewis 79 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79deep = /* Deep diffusion for Bryan and Lewis 1979 ( m^2/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79scl = /* Depth scale for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                 2.000000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) diffKrBL79Ho = /* Turning depth for Bryan and Lewis 1979 ( m ) */
(PID.TID 0000.0001)                -2.000000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ivdc_kappa = /* Implicit Vertical Diffusivity for Convection ( m^2/s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixCriteria=  /* Criteria for mixed-layer diagnostic */
(PID.TID 0000.0001)                -8.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dRhoSmall =  /* Parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 1.000000000000000E-06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hMixSmooth=  /* Smoothing parameter for mixed-layer diagnostic */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) eosType =  /* Type of Equation of State */
(PID.TID 0000.0001)               'LINEAR'
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tAlpha = /* Linear EOS thermal expansion coefficient ( 1/oC ) */
(PID.TID 0000.0001)                 2.000000000000000E-04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) sBeta  = /* Linear EOS haline contraction coefficient ( 1/psu ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoNil    = /* Reference density for Linear EOS ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectP_inEOS_Zc = /* select pressure to use in EOS (0,1,2,3) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= -g*rhoConst*z ; 1= pRef (from tRef,sRef); 2= Hyd P ; 3= Hyd+NH P
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) HeatCapacity_Cp =  /* Specific heat capacity ( J/kg/K ) */
(PID.TID 0000.0001)                 3.994000000000000E+03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) celsius2K = /* 0 degree Celsius converted to Kelvin ( K ) */
(PID.TID 0000.0001)                 2.731500000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConst  = /* Reference density (Boussinesq)  ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacC = /* normalized Reference density @ cell-Center (-) */
(PID.TID 0000.0001)     6 @  1.000000000000000E+00              /* K =  1:  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoFacF = /* normalized Reference density @ W-Interface (-) */
(PID.TID 0000.0001)     7 @  1.000000000000000E+00              /* K =  1:  7 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rhoConstFresh = /* Fresh-water reference density ( kg/m^3 ) */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravity =   /* Gravitational acceleration ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gBaro =   /* Barotropic gravity ( m/s^2 ) */
(PID.TID 0000.0001)                 9.810000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacC = /* gravity factor (vs surf.) @ cell-Center (-) */
(PID.TID 0000.0001)     6 @  1.000000000000000E+00              /* K =  1:  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravFacF = /* gravity factor (vs surf.) @ W-Interface (-) */
(PID.TID 0000.0001)     7 @  1.000000000000000E+00              /* K =  1:  7 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotationPeriod =   /* Rotation Period ( s ) */
(PID.TID 0000.0001)                 8.616400000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) omega =   /* Angular velocity ( rad/s ) */
(PID.TID 0000.0001)                 7.292123516990375E-05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) f0 =   /* Reference coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) beta =   /* Beta ( 1/(m.s) ) */
(PID.TID 0000.0001)                 2.000000000000000E-13
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) fPrime =   /* Second coriolis parameter ( 1/s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rigidLid =   /* Rigid lid on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitFreeSurface =   /* Implicit free surface on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) freeSurfFac =   /* Implicit free surface factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicSurfPress =  /* Surface Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicDiv2DFlow =  /* Barot. Flow Div. implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformLin_PhiSurf = /* use uniform Bo_surf on/off flag*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) uniformFreeSurfLev = /* free-surface level-index is uniform */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMin =   /* minimum partial cell factor (hFac) */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacMinDr = /* minimum partial cell thickness ( m) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) exactConserv =  /* Exact Volume Conservation on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) linFSConserveTr = /* Tracer correction for Lin Free Surface on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonlinFreeSurf = /* Non-linear Free Surf. options (-1,0,1,2,3)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)      -1,0= Off ; 1,2,3= On, 2=+rescale gU,gV, 3=+update cg2d solv.
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacInf =   /* lower threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) hFacSup =   /* upper threshold for hFac (nonlinFreeSurf only)*/
(PID.TID 0000.0001)                 2.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) select_rStar = /* r* Vertical coord. options (=0 r coord.; >0 uses r*)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useRealFreshWaterFlux = /* Real Fresh Water Flux on/off flag*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_EvPrRn = /* Temp. of Evap/Prec/R (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_EvPrRn = /* Salin. of Evap/Prec/R (UNSET=use local S)(psu)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectAddFluid = /* option for mass source/sink of fluid (=0: off) */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) temp_addMass = /* Temp. of addMass array (UNSET=use local T)(oC)*/
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) salt_addMass = /* Salin. of addMass array (UNSET=use local S)(psu)*/
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) convertFW2Salt = /* convert F.W. Flux to Salt Flux (-1=use local S)(psu)*/
(PID.TID 0000.0001)                 3.500000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3Dsolver = /* use 3-D pressure solver on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nonHydrostatic =  /* Non-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nh_Am2 = /* Non-Hydrostatic terms scaling factor */
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitNHPress = /* Non-Hyd Pressure implicit factor (0-1)*/
(PID.TID 0000.0001)                 1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectNHfreeSurf = /* Non-Hyd (free-)Surface option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) quasiHydrostatic = /* Quasi-Hydrostatic on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) calc_wVelocity = /* vertical velocity calculation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momStepping =  /* Momentum equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) vectorInvariantMomentum= /* Vector-Invariant Momentum on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momAdvection =  /* Momentum advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momViscosity =  /* Momentum viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momImplVertAdv= /* Momentum implicit vert. advection on/off*/
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitViscosity = /* Implicit viscosity on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectImplicitDrag= /* Implicit bot Drag options (0,1,2)*/
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     0= Expl. ; 1= Impl. on provis. Vel ; 2= Fully Impl (with surf.P)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) metricTerms =  /* metric-Terms on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useNHMTerms = /* Non-Hydrostatic Metric-Terms on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectCoriMap = /* Coriolis Map options (0,1,2,3)*/
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     0= f-Plane ; 1= Beta-Plane ; 2= Spherical ; 3= read from file
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) use3dCoriolis = /* 3-D Coriolis on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCoriolis =  /* Coriolis on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useCDscheme =  /* CD scheme on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useEnergyConservingCoriolis= /* Flx-Form Coriolis scheme flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartWetPoints= /* Coriolis WetPoints method flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useJamartMomAdv= /* V.I Non-linear terms Jamart flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useAbsVorticity= /* V.I Works with f+zeta in Coriolis */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectVortScheme= /* V.I Scheme selector for Vorticity-Term */
(PID.TID 0000.0001)               123456789
(PID.TID 0000.0001)    = 0 : enstrophy (Shallow-Water Eq.) conserving scheme by Sadourny, JAS 75
(PID.TID 0000.0001)    = 1 : same as 0 with modified hFac
(PID.TID 0000.0001)    = 2 : energy conserving scheme (used by Sadourny in JAS 75 paper)
(PID.TID 0000.0001)    = 3 : energy (general) and enstrophy (2D, nonDiv.) conserving scheme
(PID.TID 0000.0001)          from Sadourny (Burridge & Haseler, ECMWF Rep.4, 1977)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindVorticity= /* V.I Upwind bias vorticity flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) highOrderVorticity= /* V.I High order vort. advect. flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) upwindShear= /* V.I Upwind vertical Shear advection flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectKEscheme= /* V.I Kinetic Energy scheme selector */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcing =  /* Momentum forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momTidalForcing = /* Momentum Tidal forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momPressureForcing =  /* Momentum pressure term on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitIntGravWave= /* Implicit Internal Gravity Wave flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) staggerTimeStep =    /* Stagger time stepping on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doResetHFactors = /* reset thickness factors @ each time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) multiDimAdvection =  /* enable/disable Multi-Dim Advection */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMultiDimAdvec =   /* Multi-Dim Advection is/is-not used */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) implicitDiffusion = /* Implicit Diffusion on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempStepping =  /* Temperature equation on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempAdvection = /* Temperature advection on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempImplVertAdv = /* Temp. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempForcing  =  /* Temperature forcing on/off flag */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doThetaClimRelax = /* apply SST relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tempIsActiveTr = /* Temp. is a dynamically Active Tracer */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltStepping =  /* Salinity equation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltAdvection = /* Salinity advection on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltImplVertAdv = /* Sali. implicit vert. advection on/off */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltForcing  =  /* Salinity forcing on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doSaltClimRelax = /* apply SSS relaxation on/off flag */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) saltIsActiveTr = /* Salt  is a dynamically Active Tracer */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  readBinaryPrec = /* Precision used for reading binary files */
(PID.TID 0000.0001)                      64
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writeBinaryPrec = /* Precision used for writing binary files */
(PID.TID 0000.0001)                      32
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  rwSuffixType =   /* select format of mds file suffix */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)    = 0 : myIter (I10.10) ;   = 1 : 100*myTime (100th sec) ;
(PID.TID 0000.0001)    = 2 : myTime (seconds);   = 3 : myTime/360 (10th of hr);
(PID.TID 0000.0001)    = 4 : myTime/3600 (hours)
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  globalFiles = /* write "global" (=not per tile) files */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuIO = /* only master MPI process does I/O */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  useSingleCpuInput = /* only master process reads input */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) /* debLev[*]  : level of debug & auxiliary message printing */
(PID.TID 0000.0001) debLevZero =  0 ; /* level of disabled aux. msg printing */
(PID.TID 0000.0001)    debLevA =  1 ; /* level of minimum  aux. msg printing */
(PID.TID 0000.0001)    debLevB =  2 ; /* level of low aux. print (report read-file opening)*/
(PID.TID 0000.0001)    debLevC =  3 ; /* level of moderate debug prt (most pkgs debug msg) */
(PID.TID 0000.0001)    debLevD =  4 ; /* level of enhanced debug prt (add DEBUG_STATS prt) */
(PID.TID 0000.0001)    debLevE =  5 ; /* level of extensive debug printing */
(PID.TID 0000.0001) debugLevel =  /* select debug printing level */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001)  plotLevel =  /* select PLOT_FIELD printing level */
(PID.TID 0000.0001)                       2
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Elliptic solver(s) paramters ( PARM02 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) cg2dMaxIters =   /* Upper limit on 2d con. grad iterations  */
(PID.TID 0000.0001)                    1000
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dChkResFreq =   /* 2d con. grad convergence test frequency */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dUseMinResSol= /* use cg2d last-iter(=0) / min-resid.(=1) solution */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResidual =   /* 2d con. grad target residual  */
(PID.TID 0000.0001)                 1.000000000000000E-13
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dTargetResWunit =   /* CG2d target residual [W units] */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cg2dPreCondFreq =   /* Freq. for updating cg2d preconditioner */
(PID.TID 0000.0001)                       1
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useSRCGSolver =  /* use single reduction CG solver(s) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) printResidualFreq = /* Freq. for printing CG residual */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Time stepping paramters ( PARM03 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) deltaTMom =   /* Momentum equation timestep ( s ) */
(PID.TID 0000.0001)                 1.240000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTFreeSurf = /* FreeSurface equation timestep ( s ) */
(PID.TID 0000.0001)                 1.240000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dTtracerLev =  /* Tracer equation timestep ( s ) */
(PID.TID 0000.0001)     6 @  1.240000000000000E+01              /* K =  1:  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deltaTClock  =   /* Model clock timestep ( s ) */
(PID.TID 0000.0001)                 1.240000000000000E+01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) cAdjFreq =   /* Convective adjustment interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momForcingOutAB = /* =1: take Momentum Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tracForcingOutAB = /* =1: take T,S,pTr Forcing out of Adams-Bash. stepping */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) momDissip_In_AB = /* put Dissipation Tendency in Adams-Bash. stepping */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) doAB_onGtGs = /* apply AB on Tendencies (rather than on T,S)*/
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) abEps =   /* Adams-Bashforth-2 stabilizing weight */
(PID.TID 0000.0001)                 1.000000000000000E-01
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) applyExchUV_early = /* Apply EXCH to U,V earlier in time-step */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickupStrictlyMatch= /* stop if pickup do not strictly match */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nIter0   =   /* Run starting timestep number */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nTimeSteps = /* Number of timesteps */
(PID.TID 0000.0001)                      30
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) nEndIter =   /* Run ending timestep number */
(PID.TID 0000.0001)                      30
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) baseTime =   /* Model base time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) startTime =  /* Run start time ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) endTime  =   /* Integration ending time ( s ) */
(PID.TID 0000.0001)                 3.720000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pChkPtFreq = /* Permanent restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 4.464000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) chkPtFreq  = /* Rolling restart/pickup file interval ( s ) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_write_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) pickup_read_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) writePickupAtEnd =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpFreq =   /* Model state write out interval ( s ). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dumpInitAndLast= /* write out Initial & Last iter. model state */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) snapshot_mdsio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorFreq =   /* Monitor output interval ( s ). */
(PID.TID 0000.0001)                 1.240000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitorSelect = /* select group of variables to monitor */
(PID.TID 0000.0001)                       3
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) monitor_stdio =   /* Model IO flag. */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingPeriod =   /* forcing period (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) externForcingCycle =   /* period of the cyle (s). */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauThetaClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) tauSaltClimRelax =   /* relaxation time scale (s) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) latBandClimRelax =   /* max. Lat. where relaxation */
(PID.TID 0000.0001)                 3.600000000000000E+04
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) //
(PID.TID 0000.0001) // Gridding paramters ( PARM04 in namelist )
(PID.TID 0000.0001) //
(PID.TID 0000.0001) usingCartesianGrid = /* Cartesian coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   T
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCylindricalGrid = /* Cylindrical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingSphericalPolarGrid = /* Spherical coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) usingCurvilinearGrid = /* Curvilinear coordinates flag ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) useMin4hFacEdges = /* set hFacW,S as minimum of adjacent hFacC factor */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) selectSigmaCoord = /* Hybrid-Sigma Vert. Coordinate option */
(PID.TID 0000.0001)                       0
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSigmaBnd = /* r/sigma transition ( units of r ==  m ) */
(PID.TID 0000.0001)                 1.234567000000000E+05
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rkSign =   /* index orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) gravitySign = /* gravity orientation relative to vertical coordinate */
(PID.TID 0000.0001)                -1.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) seaLev_Z =  /* reference height of sea-level [m] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) top_Pres =  /* reference pressure at the top [Pa] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) mass2rUnit = /* convert mass per unit area [kg/m2] to r-units [m] */
(PID.TID 0000.0001)                 1.000200040008002E-03
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rUnit2mass = /* convert r-units [m] to mass per unit area [kg/m2] */
(PID.TID 0000.0001)                 9.998000000000000E+02
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drC =   /* C spacing ( units of r ) */
(PID.TID 0000.0001)                 1.666666666666667E+02,      /* K =  1 */
(PID.TID 0000.0001)     5 @  3.333333333333333E+02,             /* K =  2:  6 */
(PID.TID 0000.0001)                 1.666666666666667E+02       /* K =  7 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) drF =   /* W spacing ( units of r ) */
(PID.TID 0000.0001)     6 @  3.333333333333333E+02              /* K =  1:  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delX = /* U spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+03              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) delY = /* V spacing ( m - cartesian, degrees - spherical ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+03              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xgOrigin = /* X-axis origin of West  edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) ygOrigin = /* Y-axis origin of South edge (cartesian: m, lat-lon: deg) */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rSphere =  /* Radius ( ignored - cartesian, m - spherical ) */
(PID.TID 0000.0001)                 6.370000000000000E+06
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepAtmosphere = /* Deep/Shallow Atmosphere flag (True/False) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) xC =  /* xC(:,1,:,1) : P-point X coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 5.000000000000000E+02,      /* I =  1 */
(PID.TID 0000.0001)                 1.500000000000000E+03,      /* I =  2 */
(PID.TID 0000.0001)                 2.500000000000000E+03,      /* I =  3 */
(PID.TID 0000.0001)                 3.500000000000000E+03,      /* I =  4 */
(PID.TID 0000.0001)                 4.500000000000000E+03,      /* I =  5 */
(PID.TID 0000.0001)                 5.500000000000000E+03,      /* I =  6 */
(PID.TID 0000.0001)                 6.500000000000000E+03,      /* I =  7 */
(PID.TID 0000.0001)                 7.500000000000000E+03,      /* I =  8 */
(PID.TID 0000.0001)                 8.500000000000000E+03,      /* I =  9 */
(PID.TID 0000.0001)                 9.500000000000000E+03,      /* I = 10 */
(PID.TID 0000.0001)                 1.050000000000000E+04,      /* I = 11 */
(PID.TID 0000.0001)                 1.150000000000000E+04,      /* I = 12 */
(PID.TID 0000.0001)                 1.250000000000000E+04,      /* I = 13 */
(PID.TID 0000.0001)                 1.350000000000000E+04,      /* I = 14 */
(PID.TID 0000.0001)                 1.450000000000000E+04,      /* I = 15 */
(PID.TID 0000.0001)                 1.550000000000000E+04       /* I = 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) yC =  /* yC(1,:,1,:) : P-point Y coord ( deg. or m if cartesian) */
(PID.TID 0000.0001)                 5.000000000000000E+02,      /* J =  1 */
(PID.TID 0000.0001)                 1.500000000000000E+03,      /* J =  2 */
(PID.TID 0000.0001)                 2.500000000000000E+03,      /* J =  3 */
(PID.TID 0000.0001)                 3.500000000000000E+03,      /* J =  4 */
(PID.TID 0000.0001)                 4.500000000000000E+03,      /* J =  5 */
(PID.TID 0000.0001)                 5.500000000000000E+03,      /* J =  6 */
(PID.TID 0000.0001)                 6.500000000000000E+03,      /* J =  7 */
(PID.TID 0000.0001)                 7.500000000000000E+03,      /* J =  8 */
(PID.TID 0000.0001)                 8.500000000000000E+03,      /* J =  9 */
(PID.TID 0000.0001)                 9.500000000000000E+03,      /* J = 10 */
(PID.TID 0000.0001)                 1.050000000000000E+04,      /* J = 11 */
(PID.TID 0000.0001)                 1.150000000000000E+04       /* J = 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rcoord = /* P-point R coordinate (  units of r ) */
(PID.TID 0000.0001)                -1.666666666666667E+02,      /* K =  1 */
(PID.TID 0000.0001)                -5.000000000000000E+02,      /* K =  2 */
(PID.TID 0000.0001)                -8.333333333333333E+02,      /* K =  3 */
(PID.TID 0000.0001)                -1.166666666666667E+03,      /* K =  4 */
(PID.TID 0000.0001)                -1.500000000000000E+03,      /* K =  5 */
(PID.TID 0000.0001)                -1.833333333333333E+03       /* K =  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rF =   /* W-Interf. R coordinate (  units of r ) */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                -3.333333333333333E+02,      /* K =  2 */
(PID.TID 0000.0001)                -6.666666666666666E+02,      /* K =  3 */
(PID.TID 0000.0001)                -1.000000000000000E+03,      /* K =  4 */
(PID.TID 0000.0001)                -1.333333333333333E+03,      /* K =  5 */
(PID.TID 0000.0001)                -1.666666666666667E+03,      /* K =  6 */
(PID.TID 0000.0001)                -2.000000000000000E+03       /* K =  7 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacC = /* deep-model grid factor @ cell-Center (-) */
(PID.TID 0000.0001)     6 @  1.000000000000000E+00              /* K =  1:  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) deepFacF = /* deep-model grid factor @ W-Interface (-) */
(PID.TID 0000.0001)     7 @  1.000000000000000E+00              /* K =  1:  7 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rVel2wUnit = /* convert units: rVel -> wSpeed (=1 if z-coord)*/
(PID.TID 0000.0001)     7 @  1.000000000000000E+00              /* K =  1:  7 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) wUnit2rVel = /* convert units: wSpeed -> rVel (=1 if z-coord)*/
(PID.TID 0000.0001)     7 @  1.000000000000000E+00              /* K =  1:  7 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dBdrRef = /* Vertical grad. of reference buoyancy [(m/s/r)^2] */
(PID.TID 0000.0001)                 0.000000000000000E+00,      /* K =  1 */
(PID.TID 0000.0001)                 2.706759183673469E-05,      /* K =  2 */
(PID.TID 0000.0001)                 2.706759183673467E-05,      /* K =  3 */
(PID.TID 0000.0001)     3 @  2.706759183673469E-05              /* K =  4:  6 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rotateGrid = /* use rotated grid ( True/False ) */
(PID.TID 0000.0001)                   F
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) phiEuler = /* Euler angle, rotation about original z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) thetaEuler = /* Euler angle, rotation about new x-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) psiEuler = /* Euler angle, rotation about new z-coordinate [rad] */
(PID.TID 0000.0001)                 0.000000000000000E+00
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+03              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxF =  /* dxF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+03              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+03              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyF =  /* dyF(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+03              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+03              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxG =  /* dxG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+03              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+03              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyG =  /* dyG(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+03              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+03              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxC =  /* dxC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+03              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+03              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyC =  /* dyC(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+03              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+03              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dxV =  /* dxV(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+03              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(:,1,:,1) ( units: m ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+03              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) dyU =  /* dyU(1,:,1,:) ( units: m ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+03              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+06              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rA  =  /* rA (1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+06              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+06              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAw =  /* rAw(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+06              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(:,1,:,1) ( units: m^2 ) */
(PID.TID 0000.0001)    16 @  1.000000000000000E+06              /* I =  1: 16 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) rAs =  /* rAs(1,:,1,:) ( units: m^2 ) */
(PID.TID 0000.0001)    12 @  1.000000000000000E+06              /* J =  1: 12 */
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) globalArea = /* Integrated horizontal Area (m^2) */
(PID.TID 0000.0001)                 1.920000000000000E+08
(PID.TID 0000.0001)     ;
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End of Model config. summary
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) == Packages configuration : Check & print summary ==
(PID.TID 0000.0001) 
(PID.TID 0000.0001) GAD_CHECK: #define ALLOW_GENERIC_ADVDIFF
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Check Model config. (CONFIG_CHECK):
(PID.TID 0000.0001) // CONFIG_CHECK : Normal End
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  MDS_READ_FIELD: opening global file: T0.bin
(PID.TID 0000.0001) Start initial hydrostatic pressure computation
(PID.TID 0000.0001) Pressure is predetermined for buoyancyRelation OCEANIC
(PID.TID 0000.0001) 
(PID.TID 0000.0001)  write diagnostics summary to file ioUnit:      6
Iter.Nb:         0 ; Time(s):  0.0000000000000E+00
------------------------------------------------------------------------
2D/3D diagnostics: Number of lists:     3
------------------------------------------------------------------------
listId=    1 ; file name: statevars
 nFlds, nActive,       freq     &     phase        , nLev               
    6  |    6  |      -124.000000         0.000000 |   6
 levels:   1   2   3   4   5   6
 diag# | name   |   ipt  |  iMate | kLev|   count |   mate.C|           
    30 |UVEL    |      1 |      7 |   6 |       0 |       0 |
    31 |VVEL    |      7 |      1 |   6 |       0 |       0 |
    32 |WVEL    |     13 |      0 |   6 |       0 |
    26 |THETA   |     19 |      0 |   6 |       0 |
    27 |SALT    |     25 |      0 |   6 |       0 |
    71 |PHIHYD  |     31 |      0 |   6 |       0 |
------------------------------------------------------------------------
listId=    2 ; file name: statevars2d
 nFlds, nActive,       freq     &     phase        , nLev               
    2  |    2  |      -124.000000         0.000000 |   1
 levels:   1
 diag# | name   |   ipt  |  iMate | kLev|   count |   mate.C|           
    23 |ETAN    |     37 |      0 |   1 |       0 |
    73 |PHIBOT  |     38 |      0 |   1 |       0 |
------------------------------------------------------------------------
listId=    3 ; file name: levelvars
 nFlds, nActive,       freq     &     phase        , nLev               
    2  |    2  |       124.000000         0.000000 |   3
 levels:   1   3   6
 diag# | name   |   ipt  |  iMate | kLev|   count |   mate.C|           
    26 |THETA   |     39 |      0 |   6 |       0 |
    27 |SALT    |     45 |      0 |   6 |       0 |
------------------------------------------------------------------------
Global & Regional Statistics diagnostics: Number of lists:     0
------------------------------------------------------------------------
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Model current state
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) 
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                     0
(PID.TID 0000.0001) %MON time_secondsf                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_max             =  -0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.6401360544218E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =   4.0816326530613E-01
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   1.3977957249614E+01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   7.7073802177834E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   3.4408602150538E-02
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   1.1368683772162E-13
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_sst_max              =   2.6401360544218E+01
(PID.TID 0000.0001) %MON dynstat_sst_min              =   2.3401360544218E+01
(PID.TID 0000.0001) %MON dynstat_sst_mean             =   2.4901360544218E+01
(PID.TID 0000.0001) %MON dynstat_sst_sd               =   9.2195444572929E-01
(PID.TID 0000.0001) %MON dynstat_sst_del2             =   8.1649658092773E-02
(PID.TID 0000.0001) %MON dynstat_sss_max              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_min              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_mean             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_sd               =   1.4210854715202E-14
(PID.TID 0000.0001) %MON dynstat_sss_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_max            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_min            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_mean           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_sd             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON pe_b_mean                    =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_max                       =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_mean                      =   0.0000000000000E+00
(PID.TID 0000.0001) %MON ke_vol                       =   3.6414430154814E+11
(PID.TID 0000.0001) %MON vort_r_min                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_r_max                   =   0.0000000000000E+00
(PID.TID 0000.0001) %MON vort_a_mean                  =   1.1000000000000E-09
(PID.TID 0000.0001) %MON vort_a_sd                    =   6.9041050590693E-10
(PID.TID 0000.0001) %MON vort_p_mean                  =   1.1452485840895E-09
(PID.TID 0000.0001) %MON vort_p_sd                    =   8.7612713878592E-10
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =   0.0000000000000E+00
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =   0.0000000000000E+00
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) SOLVE_FOR_PRESSURE: putPmEinXvector =    F
 cg2d: Sum(rhs),rhsMax =   5.44009282066327E-15  6.27840000000000E+00
 Computing Diagnostic #     30  UVEL         Counter:       1   Parms: UUR     MR      
           Vector  Mate for  UVEL         Diagnostic #     31  VVEL     exists 
 statevars.nc
 getting varid
 UVEL    
 Wrote time
 Computing Diagnostic #     31  VVEL         Counter:       1   Parms: VVR     MR      
           Vector  Mate for  VVEL         Diagnostic #     30  UVEL     exists 
 statevars.nc
 getting varid
 VVEL    
 Computing Diagnostic #     32  WVEL         Counter:       1   Parms: WM      LR      
 statevars.nc
 getting varid
 WVEL    
 Computing Diagnostic #     26  THETA        Counter:       1   Parms: SMR     MR      
 statevars.nc
 getting varid
 THETA   
 Computing Diagnostic #     27  SALT         Counter:       1   Parms: SMR     MR      
 statevars.nc
 getting varid
 SALT    
 Computing Diagnostic #     71  PHIHYD       Counter:       1   Parms: SMR     MR      
 statevars.nc
 getting varid
 PHIHYD  
 Computing Diagnostic #     23  ETAN         Counter:       1   Parms: SM      M1      
 statevars2d.nc
 getting varid
 ETAN    
 Wrote time
 Computing Diagnostic #     73  PHIBOT       Counter:       1   Parms: SM      M1      
 statevars2d.nc
 getting varid
 PHIBOT  
 cg2d: Sum(rhs),rhsMax =   3.86449861000671E-09  7.74795142899350E+00
 cg2d: Sum(rhs),rhsMax =   9.91521209581236E-09  7.45972425364835E+00
 cg2d: Sum(rhs),rhsMax =   1.74966441335300E-08  7.15548437425227E+00
 cg2d: Sum(rhs),rhsMax =   2.55740857380005E-08  6.97706967379006E+00
 cg2d: Sum(rhs),rhsMax =   3.41559404093417E-08  6.80661913778344E+00
 cg2d: Sum(rhs),rhsMax =   4.38814485859140E-08  6.60320235654651E+00
 cg2d: Sum(rhs),rhsMax =   5.56144877927878E-08  6.36892052349188E+00
 cg2d: Sum(rhs),rhsMax =   7.02517050088503E-08  6.11200094870640E+00
 cg2d: Sum(rhs),rhsMax =   8.86160609336883E-08  5.83834920354689E+00
(PID.TID 0000.0001)      cg2d_init_res =   2.53206097997648E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      16
(PID.TID 0000.0001)      cg2d_last_res =   2.30802142825174E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    10
(PID.TID 0000.0001) %MON time_secondsf                =   1.2400000000000E+02
(PID.TID 0000.0001) %MON dynstat_eta_max              =   2.4936585528011E-01
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -2.5227463738328E-01
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -8.2865669135935E-10
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   1.5597859347227E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   1.3079117548509E-02
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   5.6996325612626E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -5.7257916764351E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -3.0126165549613E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   1.0351236259357E-01
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   7.5263811434247E-03
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   3.8766836932160E-08
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -3.7511083914365E-08
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   1.9379497176694E-10
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   5.9289069801841E-09
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   2.9321898797825E-10
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   3.5330845882843E-01
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -3.5356773014439E-01
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -1.1507523125585E-11
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   9.7180543713129E-02
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   8.6523696197108E-03
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.6300748840700E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =   5.0768159304912E-01
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   1.3977881564815E+01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   7.7051209571940E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   2.6437324651961E-02
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   1.1368683772162E-13
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_sst_max              =   2.6300748840700E+01
(PID.TID 0000.0001) %MON dynstat_sst_min              =   2.3515639621803E+01
(PID.TID 0000.0001) %MON dynstat_sst_mean             =   2.4901952261302E+01
(PID.TID 0000.0001) %MON dynstat_sst_sd               =   9.0028096945464E-01
(PID.TID 0000.0001) %MON dynstat_sst_del2             =   7.3506684119171E-02
(PID.TID 0000.0001) %MON dynstat_sss_max              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_min              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_mean             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_sd               =   1.4210854715202E-14
(PID.TID 0000.0001) %MON dynstat_sss_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_max            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_min            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_mean           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_sd             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   7.4049929244046E-03
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   4.8070877795879E-10
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   1.3152719561371E-02
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   7.0999816787795E-03
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   4.8070877795879E-10
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.3152719561371E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.3152719561371E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   6.2921160190989E-05
(PID.TID 0000.0001) %MON ke_max                       =   8.2106275160981E-02
(PID.TID 0000.0001) %MON ke_mean                      =   5.2735938902626E-03
(PID.TID 0000.0001) %MON ke_vol                       =   3.6414430154814E+11
(PID.TID 0000.0001) %MON vort_r_min                   =  -4.3467993453561E-11
(PID.TID 0000.0001) %MON vort_r_max                   =   4.3743623265868E-11
(PID.TID 0000.0001) %MON vort_a_mean                  =   1.1000000000000E-09
(PID.TID 0000.0001) %MON vort_a_sd                    =   6.9044475779555E-10
(PID.TID 0000.0001) %MON vort_p_mean                  =   1.1452485840895E-09
(PID.TID 0000.0001) %MON vort_p_sd                    =   8.7615785091653E-10
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =  -5.9622672724894E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -3.9780179016210E-10
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 Computing Diagnostic #     26  THETA        Counter:      10   Parms: SMR     MR      
 levelvars.nc
 getting varid
 THETA   
 Wrote time
 Computing Diagnostic #     27  SALT         Counter:      10   Parms: SMR     MR      
 levelvars.nc
 getting varid
 SALT    
 cg2d: Sum(rhs),rhsMax =   1.11457199136744E-07  5.55071055576543E+00
 Computing Diagnostic #     30  UVEL         Counter:       1   Parms: UUR     MR      
           Vector  Mate for  UVEL         Diagnostic #     31  VVEL     exists 
 statevars.nc
 getting varid
 UVEL    
 Wrote time
 Computing Diagnostic #     31  VVEL         Counter:       1   Parms: VVR     MR      
           Vector  Mate for  VVEL         Diagnostic #     30  UVEL     exists 
 statevars.nc
 getting varid
 VVEL    
 Computing Diagnostic #     32  WVEL         Counter:       1   Parms: WM      LR      
 statevars.nc
 getting varid
 WVEL    
 Computing Diagnostic #     26  THETA        Counter:       1   Parms: SMR     MR      
 statevars.nc
 getting varid
 THETA   
 Computing Diagnostic #     27  SALT         Counter:       1   Parms: SMR     MR      
 statevars.nc
 getting varid
 SALT    
 Computing Diagnostic #     71  PHIHYD       Counter:       1   Parms: SMR     MR      
 statevars.nc
 getting varid
 PHIHYD  
 Computing Diagnostic #     23  ETAN         Counter:       1   Parms: SM      M1      
 statevars2d.nc
 getting varid
 ETAN    
 Wrote time
 Computing Diagnostic #     73  PHIBOT       Counter:       1   Parms: SM      M1      
 statevars2d.nc
 getting varid
 PHIBOT  
 cg2d: Sum(rhs),rhsMax =   1.39559122924737E-07  5.24904781311731E+00
 cg2d: Sum(rhs),rhsMax =   1.73929383451288E-07  4.93148015386755E+00
 cg2d: Sum(rhs),rhsMax =   2.16014718446011E-07  4.59629878188922E+00
 cg2d: Sum(rhs),rhsMax =   2.67942363740836E-07  4.24344520836853E+00
 cg2d: Sum(rhs),rhsMax =   3.32828161364596E-07  3.87492040557333E+00
 cg2d: Sum(rhs),rhsMax =   4.15237746409503E-07  3.49436327431959E+00
 cg2d: Sum(rhs),rhsMax =   5.21931491248573E-07  3.10644046854362E+00
 cg2d: Sum(rhs),rhsMax =   6.63384635446462E-07  2.71534559660631E+00
 cg2d: Sum(rhs),rhsMax =   8.56874159405052E-07  2.32404014530612E+00
(PID.TID 0000.0001)      cg2d_init_res =   8.61691254651681E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      17
(PID.TID 0000.0001)      cg2d_last_res =   2.22820085436638E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    20
(PID.TID 0000.0001) %MON time_secondsf                =   2.4800000000000E+02
(PID.TID 0000.0001) %MON dynstat_eta_max              =   2.4621270152184E-01
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -2.4666952618727E-01
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -3.1895749320974E-09
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   1.5056441434300E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   5.8578801957480E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   9.4449673308717E-01
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -9.5425761232186E-01
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -6.2365487582179E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   1.7250943450048E-01
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   1.0880167975612E-02
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   1.4277196555117E-07
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -1.4005666155460E-07
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   7.4593100196585E-10
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   2.2315004259515E-08
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.0318109251909E-09
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   5.2213357045221E-01
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -5.2287557683832E-01
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -2.4887126377400E-11
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   1.4637178111196E-01
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   1.2181800857729E-02
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.6183439387122E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =   6.2504590387586E-01
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   1.3977884954584E+01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   7.7013716174845E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   1.5912172402299E-02
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   1.1368683772162E-13
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_sst_max              =   2.6183439387122E+01
(PID.TID 0000.0001) %MON dynstat_sst_min              =   2.3602768390239E+01
(PID.TID 0000.0001) %MON dynstat_sst_mean             =   2.4902052276006E+01
(PID.TID 0000.0001) %MON dynstat_sst_sd               =   8.5435497970013E-01
(PID.TID 0000.0001) %MON dynstat_sst_del2             =   5.5522306613476E-02
(PID.TID 0000.0001) %MON dynstat_sss_max              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_min              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_mean             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_sd               =   1.4210854715202E-14
(PID.TID 0000.0001) %MON dynstat_sss_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_max            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_min            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_mean           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_sd             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.1832794392791E-02
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   1.7703723728344E-09
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   1.9450971458385E-02
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.1832794392791E-02
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   1.7703723728344E-09
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.9450971458385E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.9450971458385E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   5.8628853383517E-05
(PID.TID 0000.0001) %MON ke_max                       =   2.2896808914281E-01
(PID.TID 0000.0001) %MON ke_mean                      =   1.4653705882943E-02
(PID.TID 0000.0001) %MON ke_vol                       =   3.6414430154814E+11
(PID.TID 0000.0001) %MON vort_r_min                   =  -1.5702828137876E-10
(PID.TID 0000.0001) %MON vort_r_max                   =   1.6089798546659E-10
(PID.TID 0000.0001) %MON vort_a_mean                  =   1.1000000000001E-09
(PID.TID 0000.0001) %MON vort_a_sd                    =   6.9087667622293E-10
(PID.TID 0000.0001) %MON vort_p_mean                  =   1.1452485840896E-09
(PID.TID 0000.0001) %MON vort_p_sd                    =   8.7652060292998E-10
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =  -3.0854790666447E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -8.5937155582390E-10
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 Computing Diagnostic #     26  THETA        Counter:      10   Parms: SMR     MR      
 levelvars.nc
 getting varid
 THETA   
 Wrote time
 Computing Diagnostic #     27  SALT         Counter:      10   Parms: SMR     MR      
 levelvars.nc
 getting varid
 SALT    
 cg2d: Sum(rhs),rhsMax =   9.56552466901961E-07  2.29151926340956E+00
 Computing Diagnostic #     30  UVEL         Counter:       1   Parms: UUR     MR      
           Vector  Mate for  UVEL         Diagnostic #     31  VVEL     exists 
 statevars.nc
 getting varid
 UVEL    
 Wrote time
 Computing Diagnostic #     31  VVEL         Counter:       1   Parms: VVR     MR      
           Vector  Mate for  VVEL         Diagnostic #     30  UVEL     exists 
 statevars.nc
 getting varid
 VVEL    
 Computing Diagnostic #     32  WVEL         Counter:       1   Parms: WM      LR      
 statevars.nc
 getting varid
 WVEL    
 Computing Diagnostic #     26  THETA        Counter:       1   Parms: SMR     MR      
 statevars.nc
 getting varid
 THETA   
 Computing Diagnostic #     27  SALT         Counter:       1   Parms: SMR     MR      
 statevars.nc
 getting varid
 SALT    
 Computing Diagnostic #     71  PHIHYD       Counter:       1   Parms: SMR     MR      
 statevars.nc
 getting varid
 PHIHYD  
 Computing Diagnostic #     23  ETAN         Counter:       1   Parms: SM      M1      
 statevars2d.nc
 getting varid
 ETAN    
 Wrote time
 Computing Diagnostic #     73  PHIBOT       Counter:       1   Parms: SM      M1      
 statevars2d.nc
 getting varid
 PHIBOT  
 cg2d: Sum(rhs),rhsMax =   1.01043312583649E-06  2.37827512019682E+00
 cg2d: Sum(rhs),rhsMax =   1.06567018842707E-06  2.46300221760296E+00
 cg2d: Sum(rhs),rhsMax =   1.12349294781322E-06  2.54277585847997E+00
 cg2d: Sum(rhs),rhsMax =   1.18516701670679E-06  2.61486755663470E+00
 cg2d: Sum(rhs),rhsMax =   1.25163241289361E-06  2.67764666748019E+00
 cg2d: Sum(rhs),rhsMax =   1.32386132506435E-06  2.72980646389675E+00
 cg2d: Sum(rhs),rhsMax =   1.40282084493126E-06  2.77047014946251E+00
 cg2d: Sum(rhs),rhsMax =   1.48963271529023E-06  2.79887850129592E+00
 cg2d: Sum(rhs),rhsMax =   1.58522280091500E-06  2.81506142858039E+00
(PID.TID 0000.0001)      cg2d_init_res =   5.53143584719102E-01
(PID.TID 0000.0001)      cg2d_iters(min,last) =      -1      17
(PID.TID 0000.0001)      cg2d_last_res =   2.11994996470104E-14
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // Begin MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) %MON time_tsnumber                =                    30
(PID.TID 0000.0001) %MON time_secondsf                =   3.7200000000000E+02
(PID.TID 0000.0001) %MON dynstat_eta_max              =   2.1853549341325E-01
(PID.TID 0000.0001) %MON dynstat_eta_min              =  -2.1751277606111E-01
(PID.TID 0000.0001) %MON dynstat_eta_mean             =  -7.1474367816991E-09
(PID.TID 0000.0001) %MON dynstat_eta_sd               =   1.3734035230000E-01
(PID.TID 0000.0001) %MON dynstat_eta_del2             =   6.5315420914365E-03
(PID.TID 0000.0001) %MON dynstat_uvel_max             =   1.0422069440968E+00
(PID.TID 0000.0001) %MON dynstat_uvel_min             =  -1.0583033056292E+00
(PID.TID 0000.0001) %MON dynstat_uvel_mean            =  -9.5208216050670E-03
(PID.TID 0000.0001) %MON dynstat_uvel_sd              =   2.0167212243358E-01
(PID.TID 0000.0001) %MON dynstat_uvel_del2            =   8.9919054753515E-03
(PID.TID 0000.0001) %MON dynstat_vvel_max             =   2.8856070151756E-07
(PID.TID 0000.0001) %MON dynstat_vvel_min             =  -2.8336369102768E-07
(PID.TID 0000.0001) %MON dynstat_vvel_mean            =   1.6715267793734E-09
(PID.TID 0000.0001) %MON dynstat_vvel_sd              =   4.5849876056782E-08
(PID.TID 0000.0001) %MON dynstat_vvel_del2            =   1.8927386127854E-09
(PID.TID 0000.0001) %MON dynstat_wvel_max             =   4.3476337456156E-01
(PID.TID 0000.0001) %MON dynstat_wvel_min             =  -4.3619873940481E-01
(PID.TID 0000.0001) %MON dynstat_wvel_mean            =  -3.8531823587768E-11
(PID.TID 0000.0001) %MON dynstat_wvel_sd              =   1.3640837429822E-01
(PID.TID 0000.0001) %MON dynstat_wvel_del2            =   9.1291208179312E-03
(PID.TID 0000.0001) %MON dynstat_theta_max            =   2.6125492530252E+01
(PID.TID 0000.0001) %MON dynstat_theta_min            =   6.8279495327773E-01
(PID.TID 0000.0001) %MON dynstat_theta_mean           =   1.3977895112936E+01
(PID.TID 0000.0001) %MON dynstat_theta_sd             =   7.6977372854536E+00
(PID.TID 0000.0001) %MON dynstat_theta_del2           =   2.3379329002730E-02
(PID.TID 0000.0001) %MON dynstat_salt_max             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_min             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_mean            =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_salt_sd              =   1.1368683772162E-13
(PID.TID 0000.0001) %MON dynstat_salt_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON dynstat_sst_max              =   2.6125492530252E+01
(PID.TID 0000.0001) %MON dynstat_sst_min              =   2.3603959447665E+01
(PID.TID 0000.0001) %MON dynstat_sst_mean             =   2.4897401019212E+01
(PID.TID 0000.0001) %MON dynstat_sst_sd               =   8.0994471177304E-01
(PID.TID 0000.0001) %MON dynstat_sst_del2             =   3.8769315222475E-02
(PID.TID 0000.0001) %MON dynstat_sss_max              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_min              =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_mean             =   3.5000000000000E+01
(PID.TID 0000.0001) %MON dynstat_sss_sd               =   1.4210854715202E-14
(PID.TID 0000.0001) %MON dynstat_sss_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_max             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_min             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_mean            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_sd              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qnet_del2            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_max              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_min              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_mean             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_sd               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_qsw_del2             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_max            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_min            =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_mean           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_sd             =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_empmr_del2           =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fu_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_max               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_min               =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_mean              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_sd                =   0.0000000000000E+00
(PID.TID 0000.0001) %MON forcing_fv_del2              =   0.0000000000000E+00
(PID.TID 0000.0001) %MON trAdv_CFL_u_max              =   1.3122960989802E-02
(PID.TID 0000.0001) %MON trAdv_CFL_v_max              =   3.5781526988177E-09
(PID.TID 0000.0001) %MON trAdv_CFL_w_max              =   1.6226593105859E-02
(PID.TID 0000.0001) %MON advcfl_uvel_max              =   1.3122960989802E-02
(PID.TID 0000.0001) %MON advcfl_vvel_max              =   3.5781526988177E-09
(PID.TID 0000.0001) %MON advcfl_wvel_max              =   1.6226593105859E-02
(PID.TID 0000.0001) %MON advcfl_W_hf_max              =   1.6226593105859E-02
(PID.TID 0000.0001) %MON pe_b_mean                    =   4.8782385794706E-05
(PID.TID 0000.0001) %MON ke_max                       =   3.0039765007541E-01
(PID.TID 0000.0001) %MON ke_mean                      =   2.0045325687558E-02
(PID.TID 0000.0001) %MON ke_vol                       =   3.6414430154814E+11
(PID.TID 0000.0001) %MON vort_r_min                   =  -3.0254050656708E-10
(PID.TID 0000.0001) %MON vort_r_max                   =   3.1717827124567E-10
(PID.TID 0000.0001) %MON vort_a_mean                  =   1.1000000000003E-09
(PID.TID 0000.0001) %MON vort_a_sd                    =   6.9221601775933E-10
(PID.TID 0000.0001) %MON vort_p_mean                  =   1.1452485840898E-09
(PID.TID 0000.0001) %MON vort_p_sd                    =   8.7765042190580E-10
(PID.TID 0000.0001) %MON surfExpan_theta_mean         =  -1.8334749611198E-04
(PID.TID 0000.0001) %MON surfExpan_salt_mean          =  -1.3255020818785E-09
(PID.TID 0000.0001) // =======================================================
(PID.TID 0000.0001) // End MONITOR dynamic field statistics
(PID.TID 0000.0001) // =======================================================
 Computing Diagnostic #     26  THETA        Counter:      10   Parms: SMR     MR      
 levelvars.nc
 getting varid
 THETA   
 Wrote time
 Computing Diagnostic #     27  SALT         Counter:      10   Parms: SMR     MR      
 levelvars.nc
 getting varid
 SALT    
(PID.TID 0000.0001) %CHECKPOINT        30 ckptA
(PID.TID 0000.0001)   Seconds in section "ALL                    [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:  0.39518500724807382
(PID.TID 0000.0001)         System time:   2.7891001664102077E-002
(PID.TID 0000.0001)     Wall clock time:  0.43281102180480957
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_FIXED       [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:   9.5000006258487701E-003
(PID.TID 0000.0001)         System time:   6.2780003063380718E-003
(PID.TID 0000.0001)     Wall clock time:   2.3471117019653320E-002
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "THE_MAIN_LOOP          [THE_MODEL_MAIN]":
(PID.TID 0000.0001)           User time:  0.38566200062632561
(PID.TID 0000.0001)         System time:   2.1607999689877033E-002
(PID.TID 0000.0001)     Wall clock time:  0.40932202339172363
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "INITIALISE_VARIA    [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:   2.0030010491609573E-003
(PID.TID 0000.0001)         System time:   4.0100049227476120E-004
(PID.TID 0000.0001)     Wall clock time:   2.4120807647705078E-003
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN LOOP           [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:  0.38364300690591335
(PID.TID 0000.0001)         System time:   2.1204999648034573E-002
(PID.TID 0000.0001)     Wall clock time:  0.40689301490783691
(PID.TID 0000.0001)          No. starts:           1
(PID.TID 0000.0001)           No. stops:           1
(PID.TID 0000.0001)   Seconds in section "MAIN_DO_LOOP        [THE_MAIN_LOOP]":
(PID.TID 0000.0001)           User time:  0.38349491171538830
(PID.TID 0000.0001)         System time:   2.1198001690208912E-002
(PID.TID 0000.0001)     Wall clock time:  0.40673995018005371
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "FORWARD_STEP        [MAIN_DO_LOOP]":
(PID.TID 0000.0001)           User time:  0.38321011886000633
(PID.TID 0000.0001)         System time:   2.1169002167880535E-002
(PID.TID 0000.0001)     Wall clock time:  0.40642476081848145
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "DO_STATEVARS_DIAGS  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.3137497007846832E-003
(PID.TID 0000.0001)         System time:   4.7001987695693970E-005
(PID.TID 0000.0001)     Wall clock time:   1.3618469238281250E-003
(PID.TID 0000.0001)          No. starts:          90
(PID.TID 0000.0001)           No. stops:          90
(PID.TID 0000.0001)   Seconds in section "LOAD_FIELDS_DRIVER  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.2807869613170624E-004
(PID.TID 0000.0001)         System time:   2.8003938496112823E-005
(PID.TID 0000.0001)     Wall clock time:   4.5490264892578125E-004
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "EXTERNAL_FLDS_LOAD [LOAD_FLDS_DRIVER]":
(PID.TID 0000.0001)           User time:   1.4599785208702087E-004
(PID.TID 0000.0001)         System time:   1.0001473128795624E-005
(PID.TID 0000.0001)     Wall clock time:   1.5878677368164062E-004
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "DO_ATMOSPHERIC_PHYS [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.4502182602882385E-004
(PID.TID 0000.0001)         System time:   1.0997988283634186E-005
(PID.TID 0000.0001)     Wall clock time:   1.5282630920410156E-004
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "DO_OCEANIC_PHYS     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.3539736866950989E-003
(PID.TID 0000.0001)         System time:   8.3000399172306061E-005
(PID.TID 0000.0001)     Wall clock time:   2.4578571319580078E-003
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "DYNAMICS            [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   6.2188008800148964E-002
(PID.TID 0000.0001)         System time:   1.6099959611892700E-004
(PID.TID 0000.0001)     Wall clock time:   6.2409400939941406E-002
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "SOLVE_FOR_PRESSURE  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.2760037556290627E-002
(PID.TID 0000.0001)         System time:   1.0200031101703644E-004
(PID.TID 0000.0001)     Wall clock time:   1.2928009033203125E-002
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "MOM_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   3.1990483403205872E-003
(PID.TID 0000.0001)         System time:   1.0000541806221008E-005
(PID.TID 0000.0001)     Wall clock time:   3.2169818878173828E-003
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "INTEGR_CONTINUITY   [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.1470729261636734E-003
(PID.TID 0000.0001)         System time:   5.0012022256851196E-006
(PID.TID 0000.0001)     Wall clock time:   2.1672248840332031E-003
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "BLOCKING_EXCHANGES  [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   2.6380233466625214E-003
(PID.TID 0000.0001)         System time:   4.1997991502285004E-005
(PID.TID 0000.0001)     Wall clock time:   2.6845932006835938E-003
(PID.TID 0000.0001)          No. starts:          60
(PID.TID 0000.0001)           No. stops:          60
(PID.TID 0000.0001)   Seconds in section "THERMODYNAMICS      [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   4.8605965450406075E-002
(PID.TID 0000.0001)         System time:   1.3200566172599792E-004
(PID.TID 0000.0001)     Wall clock time:   4.8976659774780273E-002
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "TRC_CORRECTION_STEP [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   1.4101155102252960E-004
(PID.TID 0000.0001)         System time:   6.9998204708099365E-006
(PID.TID 0000.0001)     Wall clock time:   1.5544891357421875E-004
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "MONITOR             [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   3.5969857126474380E-003
(PID.TID 0000.0001)         System time:   1.1499784886837006E-004
(PID.TID 0000.0001)     Wall clock time:   3.7107467651367188E-003
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "DO_THE_MODEL_IO     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:  0.24020896106958389
(PID.TID 0000.0001)         System time:   1.9290002994239330E-002
(PID.TID 0000.0001)     Wall clock time:  0.26095700263977051
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001)   Seconds in section "DO_WRITE_PICKUP     [FORWARD_STEP]":
(PID.TID 0000.0001)           User time:   8.1791728734970093E-004
(PID.TID 0000.0001)         System time:   8.6800195276737213E-004
(PID.TID 0000.0001)     Wall clock time:   1.9826889038085938E-003
(PID.TID 0000.0001)          No. starts:          30
(PID.TID 0000.0001)           No. stops:          30
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // Tile <-> Tile communication statistics
(PID.TID 0000.0001) // ======================================================
(PID.TID 0000.0001) // o Tile number: 000001
(PID.TID 0000.0001) //         No. X exchanges =              0
(PID.TID 0000.0001) //            Max. X spins =              0
(PID.TID 0000.0001) //            Min. X spins =     1000000000
(PID.TID 0000.0001) //          Total. X spins =              0
(PID.TID 0000.0001) //            Avg. X spins =       0.00E+00
(PID.TID 0000.0001) //         No. Y exchanges =              0
(PID.TID 0000.0001) //            Max. Y spins =              0
(PID.TID 0000.0001) //            Min. Y spins =     1000000000
(PID.TID 0000.0001) //          Total. Y spins =              0
(PID.TID 0000.0001) //            Avg. Y spins =       0.00E+00
(PID.TID 0000.0001) // o Thread number: 000001
(PID.TID 0000.0001) //            No. barriers =           4416
(PID.TID 0000.0001) //      Max. barrier spins =              1
(PID.TID 0000.0001) //      Min. barrier spins =              1
(PID.TID 0000.0001) //     Total barrier spins =           4416
(PID.TID 0000.0001) //      Avg. barrier spins =       1.00E+00
PROGRAM MAIN: Execution ended Normally
